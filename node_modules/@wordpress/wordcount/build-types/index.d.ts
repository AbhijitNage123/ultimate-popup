/**
 * Count some words.
 *
 * @param {string}                  text         The text being processed
 * @param {WPWordCountStrategy}     type         The type of count. Accepts 'words', 'characters_excluding_spaces', or 'characters_including_spaces'.
 * @param {WPWordCountUserSettings} userSettings Custom settings object.
 *
 * @example
 * ```js
 * import { count } from '@wordpress/wordcount';
 * const numberOfWords = count( 'Words to count', 'words', {} )
 * ```
 *
 * @return {number} The word or character count.
 */
export function count(text: string, type: WPWordCountStrategy, userSettings: WPWordCountUserSettings): number;
export type WPWordCountSettings = Partial<import("./defaultSettings").WPWordCountSettingsFields> & {
    HTMLRegExp: RegExp;
    HTMLcommentRegExp: RegExp;
    spaceRegExp: RegExp;
    HTMLEntityRegExp: RegExp;
    connectorRegExp: RegExp;
    removeRegExp: RegExp;
    astralRegExp: RegExp;
    wordsRegExp: RegExp;
    characters_excluding_spacesRegExp: RegExp;
    characters_including_spacesRegExp: RegExp;
    l10n: {
        type: string;
    };
};
export type WPWordCountUserSettings = {
    /**
     * Regular expression that matches HTML tags
     */
    HTMLRegExp?: RegExp | undefined;
    /**
     * Regular expression that matches HTML comments
     */
    HTMLcommentRegExp?: RegExp | undefined;
    /**
     * Regular expression that matches spaces in HTML
     */
    spaceRegExp?: RegExp | undefined;
    /**
     * Regular expression that matches HTML entities
     */
    HTMLEntityRegExp?: RegExp | undefined;
    /**
     * Regular expression that matches word connectors, like em-dash
     */
    connectorRegExp?: RegExp | undefined;
    /**
     * Regular expression that matches various characters to be removed when counting
     */
    removeRegExp?: RegExp | undefined;
    /**
     * Regular expression that matches astral UTF-16 code points
     */
    astralRegExp?: RegExp | undefined;
    /**
     * Regular expression that matches words
     */
    wordsRegExp?: RegExp | undefined;
    /**
     * Regular expression that matches characters excluding spaces
     */
    characters_excluding_spacesRegExp?: RegExp | undefined;
    /**
     * Regular expression that matches characters including spaces
     */
    characters_including_spacesRegExp?: RegExp | undefined;
    /**
     * Regular expression that matches WordPress shortcodes
     */
    shortcodesRegExp?: RegExp | undefined;
    /**
     * List of all shortcodes
     */
    shortcodes?: string[] | undefined;
    /**
     * Describes what and how are we counting
     */
    type?: "words" | "characters_excluding_spaces" | "characters_including_spaces" | undefined;
    /**
     * Object with human translations
     */
    l10n?: Partial<{
        type: WPWordCountStrategy;
        shortcodes: string[];
    }> | undefined;
};
/**
 * Possible ways of counting.
 */
export type WPWordCountStrategy = "words" | "characters_excluding_spaces" | "characters_including_spaces";
//# sourceMappingURL=index.d.ts.map