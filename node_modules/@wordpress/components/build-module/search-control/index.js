import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * WordPress dependencies
 */

import { useInstanceId } from '@wordpress/compose';
import { __ } from '@wordpress/i18n';
import { Icon, search, closeSmall } from '@wordpress/icons';
import { useRef } from '@wordpress/element';
/**
 * Internal dependencies
 */

import { Button } from '../';
import BaseControl from '../base-control';

function SearchControl({
  className,
  onChange,
  value,
  label,
  placeholder = __('Search'),
  hideLabelFromVision = true,
  help
}) {
  const instanceId = useInstanceId(SearchControl);
  const searchInput = useRef();
  const id = `components-search-control-${instanceId}`;
  return createElement(BaseControl, {
    label: label,
    id: id,
    hideLabelFromVision: hideLabelFromVision,
    help: help,
    className: classnames(className, 'components-search-control')
  }, createElement("div", {
    className: "components-search-control__input-wrapper"
  }, createElement("input", {
    ref: searchInput,
    className: "components-search-control__input",
    id: id,
    type: "search",
    placeholder: placeholder,
    onChange: event => onChange(event.target.value),
    autoComplete: "off",
    value: value || ''
  }), createElement("div", {
    className: "components-search-control__icon"
  }, !!value && createElement(Button, {
    icon: closeSmall,
    label: __('Reset search'),
    onClick: () => {
      onChange('');
      searchInput.current.focus();
    }
  }), !value && createElement(Icon, {
    icon: search
  }))));
}

export default SearchControl;
//# sourceMappingURL=index.js.map