{"version":3,"sources":["@wordpress/components/src/search-control/index.native.js"],"names":["TextInput","View","TouchableHighlight","useState","useRef","usePreferredColorSchemeStyle","__","ToolbarButton","Icon","cancelCircleFilled","arrowLeft","search","searchIcon","styles","SearchControl","value","onChange","label","placeholder","isActive","setIsActive","inputRef","searchFormStyle","searchForm","searchFormDark","searchFormInputStyle","searchFormInput","searchFormInputDark","placeholderStyle","searchFormPlaceholder","searchFormPlaceholderDark","current","blur","focus","color"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,kBAA1B,QAAoD,cAApD;AAEA;AACA;AACA;;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,oBAAjC;AACA,SAASC,4BAAT,QAA6C,oBAA7C;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SACCC,IADD,EAECC,kBAFD,EAGCC,SAHD,EAICC,MAAM,IAAIC,UAJX,QAKO,kBALP;AAOA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,aAAT,CAAwB;AACvBC,EAAAA,KADuB;AAEvBC,EAAAA,QAFuB;AAGvBC,EAAAA,KAHuB;AAIvBC,EAAAA,WAAW,GAAGZ,EAAE,CAAE,QAAF;AAJO,CAAxB,EAKI;AACH,QAAM,CAAEa,QAAF,EAAYC,WAAZ,IAA4BjB,QAAQ,CAAE,KAAF,CAA1C;AAEA,QAAMkB,QAAQ,GAAGjB,MAAM,EAAvB;AAEA,QAAMkB,eAAe,GAAGjB,4BAA4B,CACnDQ,MAAM,CAACU,UAD4C,EAEnDV,MAAM,CAACW,cAF4C,CAApD;AAKA,QAAMC,oBAAoB,GAAGpB,4BAA4B,CACxDQ,MAAM,CAACa,eADiD,EAExDb,MAAM,CAACc,mBAFiD,CAAzD;AAKA,QAAMC,gBAAgB,GAAGvB,4BAA4B,CACpDQ,MAAM,CAACgB,qBAD6C,EAEpDhB,MAAM,CAACiB,yBAF6C,CAArD;AAKA,SACC,cAAC,kBAAD;AAAoB,IAAA,UAAU,EAAG;AAAjC,KACC,cAAC,IAAD;AAAM,IAAA,KAAK,EAAGR;AAAd,KACGH,QAAQ,GACT,cAAC,aAAD;AACC,IAAA,KAAK,EAAGb,EAAE,CAAE,eAAF,CADX;AAEC,IAAA,IAAI,EAAGI,SAFR;AAGC,IAAA,OAAO,EAAG,MAAM;AACfW,MAAAA,QAAQ,CAACU,OAAT,CAAiBC,IAAjB;AACAhB,MAAAA,QAAQ,CAAE,EAAF,CAAR;AACAI,MAAAA,WAAW,CAAE,KAAF,CAAX;AACA;AAPF,IADS,GAWT,cAAC,aAAD;AACC,IAAA,KAAK,EAAGH,KADT;AAEC,IAAA,IAAI,EAAGL,UAFR;AAGC,IAAA,OAAO,EAAG,MAAM;AACfS,MAAAA,QAAQ,CAACU,OAAT,CAAiBE,KAAjB;AACAb,MAAAA,WAAW,CAAE,IAAF,CAAX;AACA;AANF,IAZF,EAqBC,cAAC,SAAD;AACC,IAAA,GAAG,EAAGC,QADP;AAEC,IAAA,KAAK,EAAGI,oBAFT;AAGC,IAAA,oBAAoB,EAAGG,gBAAgB,CAACM,KAHzC;AAIC,IAAA,YAAY,EAAGlB,QAJhB;AAKC,IAAA,OAAO,EAAG,MAAMI,WAAW,CAAE,IAAF,CAL5B;AAMC,IAAA,KAAK,EAAGL,KANT;AAOC,IAAA,WAAW,EAAGG;AAPf,IArBD,EA+BG,CAAC,CAAEH,KAAH,IACD,cAAC,aAAD;AACC,IAAA,KAAK,EAAGT,EAAE,CAAE,cAAF,CADX;AAEC,IAAA,IAAI,EAAG,cAAC,IAAD;AAAM,MAAA,IAAI,EAAGG;AAAb,MAFR;AAGC,IAAA,OAAO,EAAG,MAAM;AACfO,MAAAA,QAAQ,CAAE,EAAF,CAAR;AACA;AALF,IAhCF,CADD,CADD;AA6CA;;AAED,eAAeF,aAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { TextInput, View, TouchableHighlight } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { useState, useRef } from '@wordpress/element';\nimport { usePreferredColorSchemeStyle } from '@wordpress/compose';\nimport { __ } from '@wordpress/i18n';\nimport { ToolbarButton } from '@wordpress/components';\nimport {\n\tIcon,\n\tcancelCircleFilled,\n\tarrowLeft,\n\tsearch as searchIcon,\n} from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nfunction SearchControl( {\n\tvalue,\n\tonChange,\n\tlabel,\n\tplaceholder = __( 'Search' ),\n} ) {\n\tconst [ isActive, setIsActive ] = useState( false );\n\n\tconst inputRef = useRef();\n\n\tconst searchFormStyle = usePreferredColorSchemeStyle(\n\t\tstyles.searchForm,\n\t\tstyles.searchFormDark\n\t);\n\n\tconst searchFormInputStyle = usePreferredColorSchemeStyle(\n\t\tstyles.searchFormInput,\n\t\tstyles.searchFormInputDark\n\t);\n\n\tconst placeholderStyle = usePreferredColorSchemeStyle(\n\t\tstyles.searchFormPlaceholder,\n\t\tstyles.searchFormPlaceholderDark\n\t);\n\n\treturn (\n\t\t<TouchableHighlight accessible={ false }>\n\t\t\t<View style={ searchFormStyle }>\n\t\t\t\t{ isActive ? (\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\ttitle={ __( 'Cancel search' ) }\n\t\t\t\t\t\ticon={ arrowLeft }\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tinputRef.current.blur();\n\t\t\t\t\t\t\tonChange( '' );\n\t\t\t\t\t\t\tsetIsActive( false );\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\ttitle={ label }\n\t\t\t\t\t\ticon={ searchIcon }\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tinputRef.current.focus();\n\t\t\t\t\t\t\tsetIsActive( true );\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t<TextInput\n\t\t\t\t\tref={ inputRef }\n\t\t\t\t\tstyle={ searchFormInputStyle }\n\t\t\t\t\tplaceholderTextColor={ placeholderStyle.color }\n\t\t\t\t\tonChangeText={ onChange }\n\t\t\t\t\tonFocus={ () => setIsActive( true ) }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tplaceholder={ placeholder }\n\t\t\t\t/>\n\n\t\t\t\t{ !! value && (\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\ttitle={ __( 'Clear search' ) }\n\t\t\t\t\t\ticon={ <Icon icon={ cancelCircleFilled } /> }\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tonChange( '' );\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</View>\n\t\t</TouchableHighlight>\n\t);\n}\n\nexport default SearchControl;\n"]}