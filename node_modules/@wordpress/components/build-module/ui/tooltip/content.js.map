{"version":3,"sources":["@wordpress/components/src/ui/tooltip/content.js"],"names":["cx","Tooltip","ReakitTooltip","contextConnect","useContextSystem","View","useTooltipContext","styles","TooltipPopoverView","TooltipContent","props","forwardedRef","children","className","otherProps","tooltip","classes"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,EAAT,QAAmB,cAAnB,C,CACA;;AACA,SAASC,OAAO,IAAIC,aAApB,QAAyC,QAAzC;AAEA;AACA;AACA;;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,YAAjD;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAyBD,MAA/B;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASE,cAAT,CAAyBC,KAAzB,EAAgCC,YAAhC,EAA+C;AAC9C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuB,OAAGC;AAA1B,MAAyCV,gBAAgB,CAC9DM,KAD8D,EAE9D,gBAF8D,CAA/D;AAIA,QAAM;AAAEK,IAAAA;AAAF,MAAcT,iBAAiB,EAArC;AACA,QAAMU,OAAO,GAAGhB,EAAE,CAAEO,MAAM,CAACE,cAAT,EAAyBI,SAAzB,CAAlB;AAEA,SACC,cAAC,aAAD;AACC,IAAA,EAAE,EAAGR;AADN,KAEMS,UAFN,EAGMC,OAHN;AAIC,IAAA,SAAS,EAAGC,OAJb;AAKC,IAAA,GAAG,EAAGL;AALP,MAOC,cAAC,kBAAD,QAAsBC,QAAtB,CAPD,CADD;AAWA;;AAED,eAAeT,cAAc,CAAEM,cAAF,EAAkB,gBAAlB,CAA7B","sourcesContent":["/**\n * External dependencies\n */\n// Disable reason: Temporarily disable for existing usages\n// until we remove them as part of https://github.com/WordPress/gutenberg/issues/30503#deprecating-emotion-css\n// eslint-disable-next-line no-restricted-imports\nimport { cx } from '@emotion/css';\n// eslint-disable-next-line no-restricted-imports\nimport { Tooltip as ReakitTooltip } from 'reakit';\n\n/**\n * Internal dependencies\n */\nimport { contextConnect, useContextSystem } from '../context';\nimport { View } from '../../view';\nimport { useTooltipContext } from './context';\nimport * as styles from './styles';\n\nconst { TooltipPopoverView } = styles;\n\n/**\n *\n * @param {import('../context').PolymorphicComponentProps<import('./types').ContentProps, 'div'>} props\n * @param {import('react').Ref<any>}                                                              forwardedRef\n */\nfunction TooltipContent( props, forwardedRef ) {\n\tconst { children, className, ...otherProps } = useContextSystem(\n\t\tprops,\n\t\t'TooltipContent'\n\t);\n\tconst { tooltip } = useTooltipContext();\n\tconst classes = cx( styles.TooltipContent, className );\n\n\treturn (\n\t\t<ReakitTooltip\n\t\t\tas={ View }\n\t\t\t{ ...otherProps }\n\t\t\t{ ...tooltip }\n\t\t\tclassName={ classes }\n\t\t\tref={ forwardedRef }\n\t\t>\n\t\t\t<TooltipPopoverView>{ children }</TooltipPopoverView>\n\t\t</ReakitTooltip>\n\t);\n}\n\nexport default contextConnect( TooltipContent, 'TooltipContent' );\n"]}