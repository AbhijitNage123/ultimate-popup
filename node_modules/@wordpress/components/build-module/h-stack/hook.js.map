{"version":3,"sources":["@wordpress/components/src/h-stack/hook.js"],"names":["hasConnectNamespace","useContextSystem","FlexItem","useFlex","getAlignmentProps","getValidChildren","useHStack","props","alignment","children","direction","spacing","otherProps","align","validChildren","clonedChildren","map","child","index","_key","key","_isSpacer","propsForFlex","justify","gap","flexProps"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,mBAAT,EAA8BC,gBAA9B,QAAsD,eAAtD;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,SAAlC;AACA,SAASC,iBAAT,QAAkC,SAAlC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAoBC,KAApB,EAA4B;AAClC,QAAM;AACLC,IAAAA,SAAS,GAAG,MADP;AAELC,IAAAA,QAFK;AAGLC,IAAAA,SAHK;AAILC,IAAAA,OAAO,GAAG,CAJL;AAKL,OAAGC;AALE,MAMFX,gBAAgB,CAAEM,KAAF,EAAS,QAAT,CANpB;AAQA,QAAMM,KAAK,GAAGT,iBAAiB,CAAEI,SAAF,EAAaE,SAAb,CAA/B;AAEA,QAAMI,aAAa,GAAGT,gBAAgB,CAAEI,QAAF,CAAtC;AACA,QAAMM,cAAc,GAAGD,aAAa,CAACE,GAAd,EACtB;AACA;AAAE;AAA4CC,EAAAA,KAA9C,EAAqDC,KAArD,KAAgE;AAC/D,UAAMC,IAAI,GAAGF,KAAK,CAACG,GAAN,IAAc,UAAUF,KAAO,EAA5C;;AACA,UAAMG,SAAS,GAAGrB,mBAAmB,CAAEiB,KAAF,EAAS,CAAE,QAAF,CAAT,CAArC;;AAEA,QAAKI,SAAL,EAAiB;AAChB,aAAO,cAAC,QAAD;AAAU,QAAA,OAAO,MAAjB;AAAkB,QAAA,GAAG,EAAGF;AAAxB,SAAoCF,KAAK,CAACV,KAA1C,EAAP;AACA;;AAED,WAAOU,KAAP;AACA,GAXqB,CAAvB;AAcA,QAAMK,YAAY,GAAG;AACpBb,IAAAA,QAAQ,EAAEM,cADU;AAEpBL,IAAAA,SAFoB;AAGpBa,IAAAA,OAAO,EAAE,QAHW;AAIpB,OAAGV,KAJiB;AAKpB,OAAGD,UALiB;AAMpBY,IAAAA,GAAG,EAAEb;AANe,GAArB;AASA,QAAMc,SAAS,GAAGtB,OAAO,CAAEmB,YAAF,CAAzB;AAEA,SAAOG,SAAP;AACA","sourcesContent":["/**\n * Internal dependencies\n */\nimport { hasConnectNamespace, useContextSystem } from '../ui/context';\nimport { FlexItem, useFlex } from '../flex';\nimport { getAlignmentProps } from './utils';\nimport { getValidChildren } from '../ui/utils/get-valid-children';\n\n/**\n *\n * @param {import('../ui/context').PolymorphicComponentProps<import('./types').Props, 'div'>} props\n */\nexport function useHStack( props ) {\n\tconst {\n\t\talignment = 'edge',\n\t\tchildren,\n\t\tdirection,\n\t\tspacing = 2,\n\t\t...otherProps\n\t} = useContextSystem( props, 'HStack' );\n\n\tconst align = getAlignmentProps( alignment, direction );\n\n\tconst validChildren = getValidChildren( children );\n\tconst clonedChildren = validChildren.map(\n\t\t// @ts-ignore\n\t\t( /** @type {import('react').ReactElement} */ child, index ) => {\n\t\t\tconst _key = child.key || `hstack-${ index }`;\n\t\t\tconst _isSpacer = hasConnectNamespace( child, [ 'Spacer' ] );\n\n\t\t\tif ( _isSpacer ) {\n\t\t\t\treturn <FlexItem isBlock key={ _key } { ...child.props } />;\n\t\t\t}\n\n\t\t\treturn child;\n\t\t}\n\t);\n\n\tconst propsForFlex = {\n\t\tchildren: clonedChildren,\n\t\tdirection,\n\t\tjustify: 'center',\n\t\t...align,\n\t\t...otherProps,\n\t\tgap: spacing,\n\t};\n\n\tconst flexProps = useFlex( propsForFlex );\n\n\treturn flexProps;\n}\n"]}