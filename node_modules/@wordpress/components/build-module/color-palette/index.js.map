{"version":3,"sources":["@wordpress/components/src/color-palette/index.js"],"names":["map","tinycolor","__","sprintf","useCallback","useMemo","ColorPicker","CircularOptionPicker","ColorPalette","clearable","className","colors","disableCustomColors","onChange","value","clearColor","undefined","colorOptions","color","name","fill","mostReadable","toHexString","backgroundColor","renderCustomColorPicker","hex","renderContent","contentClassName"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,GAAT,QAAoB,QAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;AACA;AACA;;AACA,SAASC,EAAT,EAAaC,OAAb,QAA4B,iBAA5B;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,oBAArC;AAEA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AAEA,eAAe,SAASC,YAAT,CAAuB;AACrCC,EAAAA,SAAS,GAAG,IADyB;AAErCC,EAAAA,SAFqC;AAGrCC,EAAAA,MAHqC;AAIrCC,EAAAA,mBAAmB,GAAG,KAJe;AAKrCC,EAAAA,QALqC;AAMrCC,EAAAA;AANqC,CAAvB,EAOX;AACH,QAAMC,UAAU,GAAGX,WAAW,CAAE,MAAMS,QAAQ,CAAEG,SAAF,CAAhB,EAA+B,CAAEH,QAAF,CAA/B,CAA9B;AACA,QAAMI,YAAY,GAAGZ,OAAO,CAAE,MAAM;AACnC,WAAOL,GAAG,CAAEW,MAAF,EAAU,CAAE;AAAEO,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAF,KACnB,cAAC,oBAAD,CAAsB,MAAtB;AACC,MAAA,GAAG,EAAGD,KADP;AAEC,MAAA,UAAU,EAAGJ,KAAK,KAAKI,KAFxB;AAGC,MAAA,iBAAiB,EAChBJ,KAAK,KAAKI,KAAV,GACG;AACAE,QAAAA,IAAI,EAAEnB,SAAS,CACboB,YADI,CACUH,KADV,EACiB,CAAE,MAAF,EAAU,MAAV,CADjB,EAEJI,WAFI;AADN,OADH,GAMG,EAVL;AAYC,MAAA,WAAW,EACVH,IAAI,IACJ;AACAhB,MAAAA,OAAO,CAAED,EAAE,CAAE,gBAAF,CAAJ,EAA0BgB,KAA1B,CAfT;AAiBC,MAAA,KAAK,EAAG;AAAEK,QAAAA,eAAe,EAAEL,KAAnB;AAA0BA,QAAAA;AAA1B,OAjBT;AAkBC,MAAA,OAAO,EACNJ,KAAK,KAAKI,KAAV,GAAkBH,UAAlB,GAA+B,MAAMF,QAAQ,CAAEK,KAAF,CAnB/C;AAqBC,oBACCC,IAAI,GACD;AACAhB,MAAAA,OAAO,CAAED,EAAE,CAAE,WAAF,CAAJ,EAAqBiB,IAArB,CAFN,GAGD;AACAhB,MAAAA,OAAO,CAAED,EAAE,CAAE,gBAAF,CAAJ,EAA0BgB,KAA1B;AA1BZ,MADS,CAAV;AA+BA,GAhC2B,EAgCzB,CAAEP,MAAF,EAAUG,KAAV,EAAiBD,QAAjB,EAA2BE,UAA3B,CAhCyB,CAA5B;;AAiCA,QAAMS,uBAAuB,GAAG,MAC/B,cAAC,WAAD;AACC,IAAA,KAAK,EAAGV,KADT;AAEC,IAAA,gBAAgB,EAAKI,KAAF,IAAaL,QAAQ,CAAEK,KAAK,CAACO,GAAR,CAFzC;AAGC,IAAA,YAAY;AAHb,IADD;;AAQA,SACC,cAAC,oBAAD;AACC,IAAA,SAAS,EAAGf,SADb;AAEC,IAAA,OAAO,EAAGO,YAFX;AAGC,IAAA,OAAO,EACN,8BACG,CAAEL,mBAAF,IACD,cAAC,oBAAD,CAAsB,kBAAtB;AACC,MAAA,aAAa,EAAG;AACfc,QAAAA,aAAa,EAAEF,uBADA;AAEfG,QAAAA,gBAAgB,EACf;AAHc,OADjB;AAMC,MAAA,WAAW,EAAG;AACb,sBAAczB,EAAE,CAAE,qBAAF;AADH,OANf;AASC,MAAA,QAAQ,EAAGA,EAAE,CAAE,cAAF;AATd,MAFF,EAcG,CAAC,CAAEO,SAAH,IACD,cAAC,oBAAD,CAAsB,YAAtB;AACC,MAAA,OAAO,EAAGM;AADX,OAGGb,EAAE,CAAE,OAAF,CAHL,CAfF;AAJF,IADD;AA8BA","sourcesContent":["/**\n * External dependencies\n */\nimport { map } from 'lodash';\nimport tinycolor from 'tinycolor2';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { useCallback, useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport ColorPicker from '../color-picker';\nimport CircularOptionPicker from '../circular-option-picker';\n\nexport default function ColorPalette( {\n\tclearable = true,\n\tclassName,\n\tcolors,\n\tdisableCustomColors = false,\n\tonChange,\n\tvalue,\n} ) {\n\tconst clearColor = useCallback( () => onChange( undefined ), [ onChange ] );\n\tconst colorOptions = useMemo( () => {\n\t\treturn map( colors, ( { color, name } ) => (\n\t\t\t<CircularOptionPicker.Option\n\t\t\t\tkey={ color }\n\t\t\t\tisSelected={ value === color }\n\t\t\t\tselectedIconProps={\n\t\t\t\t\tvalue === color\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\tfill: tinycolor\n\t\t\t\t\t\t\t\t\t.mostReadable( color, [ '#000', '#fff' ] )\n\t\t\t\t\t\t\t\t\t.toHexString(),\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {}\n\t\t\t\t}\n\t\t\t\ttooltipText={\n\t\t\t\t\tname ||\n\t\t\t\t\t// translators: %s: color hex code e.g: \"#f00\".\n\t\t\t\t\tsprintf( __( 'Color code: %s' ), color )\n\t\t\t\t}\n\t\t\t\tstyle={ { backgroundColor: color, color } }\n\t\t\t\tonClick={\n\t\t\t\t\tvalue === color ? clearColor : () => onChange( color )\n\t\t\t\t}\n\t\t\t\taria-label={\n\t\t\t\t\tname\n\t\t\t\t\t\t? // translators: %s: The name of the color e.g: \"vivid red\".\n\t\t\t\t\t\t  sprintf( __( 'Color: %s' ), name )\n\t\t\t\t\t\t: // translators: %s: color hex code e.g: \"#f00\".\n\t\t\t\t\t\t  sprintf( __( 'Color code: %s' ), color )\n\t\t\t\t}\n\t\t\t/>\n\t\t) );\n\t}, [ colors, value, onChange, clearColor ] );\n\tconst renderCustomColorPicker = () => (\n\t\t<ColorPicker\n\t\t\tcolor={ value }\n\t\t\tonChangeComplete={ ( color ) => onChange( color.hex ) }\n\t\t\tdisableAlpha\n\t\t/>\n\t);\n\n\treturn (\n\t\t<CircularOptionPicker\n\t\t\tclassName={ className }\n\t\t\toptions={ colorOptions }\n\t\t\tactions={\n\t\t\t\t<>\n\t\t\t\t\t{ ! disableCustomColors && (\n\t\t\t\t\t\t<CircularOptionPicker.DropdownLinkAction\n\t\t\t\t\t\t\tdropdownProps={ {\n\t\t\t\t\t\t\t\trenderContent: renderCustomColorPicker,\n\t\t\t\t\t\t\t\tcontentClassName:\n\t\t\t\t\t\t\t\t\t'components-color-palette__picker',\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tbuttonProps={ {\n\t\t\t\t\t\t\t\t'aria-label': __( 'Custom color picker' ),\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tlinkText={ __( 'Custom color' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ !! clearable && (\n\t\t\t\t\t\t<CircularOptionPicker.ButtonAction\n\t\t\t\t\t\t\tonClick={ clearColor }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Clear' ) }\n\t\t\t\t\t\t</CircularOptionPicker.ButtonAction>\n\t\t\t\t\t) }\n\t\t\t\t</>\n\t\t\t}\n\t\t/>\n\t);\n}\n"]}