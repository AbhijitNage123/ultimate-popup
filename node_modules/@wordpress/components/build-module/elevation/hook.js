/**
 * External dependencies
 */
// Disable reason: Temporarily disable for existing usages
// until we remove them as part of https://github.com/WordPress/gutenberg/issues/30503#deprecating-emotion-css
// eslint-disable-next-line no-restricted-imports
import { css, cx } from '@emotion/css';
import { isNil } from 'lodash';
/**
 * WordPress dependencies
 */

import { useMemo } from '@wordpress/element';
/**
 * Internal dependencies
 */

import { useContextSystem } from '../ui/context';
import * as styles from './styles';
import CONFIG from '../utils/config-values';
/**
 * @param {number} value
 * @return {string} The box shadow value.
 */

export function getBoxShadow(value) {
  const boxShadowColor = `rgba(0 ,0, 0, ${value / 20})`;
  const boxShadow = `0 ${value}px ${value * 2}px 0
	${boxShadowColor}`;
  return boxShadow;
}
/**
 * @param {import('../ui/context').PolymorphicComponentProps<import('./types').Props, 'div'>} props
 */

export function useElevation(props) {
  const {
    active,
    borderRadius = 'inherit',
    className,
    focus,
    hover,
    isInteractive = false,
    offset = 0,
    value = 0,
    ...otherProps
  } = useContextSystem(props, 'Elevation');
  const classes = useMemo(() => {
    /** @type {number | undefined} */
    let hoverValue = !isNil(hover) ? hover : value * 2;
    /** @type {number | undefined} */

    let activeValue = !isNil(active) ? active : value / 2;

    if (!isInteractive) {
      hoverValue = !isNil(hover) ? hover : undefined;
      activeValue = !isNil(active) ? active : undefined;
    }

    const transition = `box-shadow ${CONFIG.transitionDuration} ${CONFIG.transitionTimingFunction}`;
    const sx = {};
    sx.Base = /*#__PURE__*/css({
      borderRadius,
      bottom: offset,
      boxShadow: getBoxShadow(value),
      opacity: CONFIG.elevationIntensity,
      left: offset,
      right: offset,
      top: offset,
      transition
    }, process.env.NODE_ENV === "production" ? "" : ";label:sx-Base;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvZWxldmF0aW9uL2hvb2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0VZIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvZWxldmF0aW9uL2hvb2suanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG4vLyBEaXNhYmxlIHJlYXNvbjogVGVtcG9yYXJpbHkgZGlzYWJsZSBmb3IgZXhpc3RpbmcgdXNhZ2VzXG4vLyB1bnRpbCB3ZSByZW1vdmUgdGhlbSBhcyBwYXJ0IG9mIGh0dHBzOi8vZ2l0aHViLmNvbS9Xb3JkUHJlc3MvZ3V0ZW5iZXJnL2lzc3Vlcy8zMDUwMyNkZXByZWNhdGluZy1lbW90aW9uLWNzc1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtaW1wb3J0c1xuaW1wb3J0IHsgY3NzLCBjeCB9IGZyb20gJ0BlbW90aW9uL2Nzcyc7XG5pbXBvcnQgeyBpc05pbCB9IGZyb20gJ2xvZGFzaCc7XG5cbi8qKlxuICogV29yZFByZXNzIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAnQHdvcmRwcmVzcy9lbGVtZW50JztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgdXNlQ29udGV4dFN5c3RlbSB9IGZyb20gJy4uL3VpL2NvbnRleHQnO1xuaW1wb3J0ICogYXMgc3R5bGVzIGZyb20gJy4vc3R5bGVzJztcbmltcG9ydCBDT05GSUcgZnJvbSAnLi4vdXRpbHMvY29uZmlnLXZhbHVlcyc7XG5cbi8qKlxuICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlXG4gKiBAcmV0dXJuIHtzdHJpbmd9IFRoZSBib3ggc2hhZG93IHZhbHVlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0Qm94U2hhZG93KCB2YWx1ZSApIHtcblx0Y29uc3QgYm94U2hhZG93Q29sb3IgPSBgcmdiYSgwICwwLCAwLCAkeyB2YWx1ZSAvIDIwIH0pYDtcblx0Y29uc3QgYm94U2hhZG93ID0gYDAgJHsgdmFsdWUgfXB4ICR7IHZhbHVlICogMiB9cHggMFxuXHQkeyBib3hTaGFkb3dDb2xvciB9YDtcblxuXHRyZXR1cm4gYm94U2hhZG93O1xufVxuXG4vKipcbiAqIEBwYXJhbSB7aW1wb3J0KCcuLi91aS9jb250ZXh0JykuUG9seW1vcnBoaWNDb21wb25lbnRQcm9wczxpbXBvcnQoJy4vdHlwZXMnKS5Qcm9wcywgJ2Rpdic+fSBwcm9wc1xuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlRWxldmF0aW9uKCBwcm9wcyApIHtcblx0Y29uc3Qge1xuXHRcdGFjdGl2ZSxcblx0XHRib3JkZXJSYWRpdXMgPSAnaW5oZXJpdCcsXG5cdFx0Y2xhc3NOYW1lLFxuXHRcdGZvY3VzLFxuXHRcdGhvdmVyLFxuXHRcdGlzSW50ZXJhY3RpdmUgPSBmYWxzZSxcblx0XHRvZmZzZXQgPSAwLFxuXHRcdHZhbHVlID0gMCxcblx0XHQuLi5vdGhlclByb3BzXG5cdH0gPSB1c2VDb250ZXh0U3lzdGVtKCBwcm9wcywgJ0VsZXZhdGlvbicgKTtcblxuXHRjb25zdCBjbGFzc2VzID0gdXNlTWVtbyggKCkgPT4ge1xuXHRcdC8qKiBAdHlwZSB7bnVtYmVyIHwgdW5kZWZpbmVkfSAqL1xuXHRcdGxldCBob3ZlclZhbHVlID0gISBpc05pbCggaG92ZXIgKSA/IGhvdmVyIDogdmFsdWUgKiAyO1xuXHRcdC8qKiBAdHlwZSB7bnVtYmVyIHwgdW5kZWZpbmVkfSAqL1xuXHRcdGxldCBhY3RpdmVWYWx1ZSA9ICEgaXNOaWwoIGFjdGl2ZSApID8gYWN0aXZlIDogdmFsdWUgLyAyO1xuXG5cdFx0aWYgKCAhIGlzSW50ZXJhY3RpdmUgKSB7XG5cdFx0XHRob3ZlclZhbHVlID0gISBpc05pbCggaG92ZXIgKSA/IGhvdmVyIDogdW5kZWZpbmVkO1xuXHRcdFx0YWN0aXZlVmFsdWUgPSAhIGlzTmlsKCBhY3RpdmUgKSA/IGFjdGl2ZSA6IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHRjb25zdCB0cmFuc2l0aW9uID0gYGJveC1zaGFkb3cgJHsgQ09ORklHLnRyYW5zaXRpb25EdXJhdGlvbiB9ICR7IENPTkZJRy50cmFuc2l0aW9uVGltaW5nRnVuY3Rpb24gfWA7XG5cblx0XHRjb25zdCBzeCA9IHt9O1xuXG5cdFx0c3guQmFzZSA9IGNzcygge1xuXHRcdFx0Ym9yZGVyUmFkaXVzLFxuXHRcdFx0Ym90dG9tOiBvZmZzZXQsXG5cdFx0XHRib3hTaGFkb3c6IGdldEJveFNoYWRvdyggdmFsdWUgKSxcblx0XHRcdG9wYWNpdHk6IENPTkZJRy5lbGV2YXRpb25JbnRlbnNpdHksXG5cdFx0XHRsZWZ0OiBvZmZzZXQsXG5cdFx0XHRyaWdodDogb2Zmc2V0LFxuXHRcdFx0dG9wOiBvZmZzZXQsXG5cdFx0XHR0cmFuc2l0aW9uLFxuXHRcdH0gKTtcblxuXHRcdGlmICggISBpc05pbCggaG92ZXJWYWx1ZSApICkge1xuXHRcdFx0c3guaG92ZXIgPSBjc3NgXG5cdFx0XHRcdCo6aG92ZXIgPiAmIHtcblx0XHRcdFx0XHRib3gtc2hhZG93OiAkeyBnZXRCb3hTaGFkb3coIGhvdmVyVmFsdWUgKSB9O1xuXHRcdFx0XHR9XG5cdFx0XHRgO1xuXHRcdH1cblxuXHRcdGlmICggISBpc05pbCggYWN0aXZlVmFsdWUgKSApIHtcblx0XHRcdHN4LmFjdGl2ZSA9IGNzc2Bcblx0XHRcdFx0KjphY3RpdmUgPiAmIHtcblx0XHRcdFx0XHRib3gtc2hhZG93OiAkeyBnZXRCb3hTaGFkb3coIGFjdGl2ZVZhbHVlICkgfTtcblx0XHRcdFx0fVxuXHRcdFx0YDtcblx0XHR9XG5cblx0XHRpZiAoICEgaXNOaWwoIGZvY3VzICkgKSB7XG5cdFx0XHRzeC5mb2N1cyA9IGNzc2Bcblx0XHRcdFx0Kjpmb2N1cyA+ICYge1xuXHRcdFx0XHRcdGJveC1zaGFkb3c6ICR7IGdldEJveFNoYWRvdyggZm9jdXMgKSB9O1xuXHRcdFx0XHR9XG5cdFx0XHRgO1xuXHRcdH1cblxuXHRcdHJldHVybiBjeChcblx0XHRcdHN0eWxlcy5FbGV2YXRpb24sXG5cdFx0XHRzeC5CYXNlLFxuXHRcdFx0c3guaG92ZXIgJiYgc3guaG92ZXIsXG5cdFx0XHRzeC5mb2N1cyAmJiBzeC5mb2N1cyxcblx0XHRcdHN4LmFjdGl2ZSAmJiBzeC5hY3RpdmUsXG5cdFx0XHRjbGFzc05hbWVcblx0XHQpO1xuXHR9LCBbXG5cdFx0YWN0aXZlLFxuXHRcdGJvcmRlclJhZGl1cyxcblx0XHRjbGFzc05hbWUsXG5cdFx0Zm9jdXMsXG5cdFx0aG92ZXIsXG5cdFx0aXNJbnRlcmFjdGl2ZSxcblx0XHRvZmZzZXQsXG5cdFx0dmFsdWUsXG5cdF0gKTtcblxuXHRyZXR1cm4geyAuLi5vdGhlclByb3BzLCBjbGFzc05hbWU6IGNsYXNzZXMsICdhcmlhLWhpZGRlbic6IHRydWUgfTtcbn1cbiJdfQ== */");

    if (!isNil(hoverValue)) {
      sx.hover = /*#__PURE__*/css("*:hover>&{box-shadow:", getBoxShadow(hoverValue), ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:sx-hover;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvZWxldmF0aW9uL2hvb2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEVpQiIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2VsZXZhdGlvbi9ob29rLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuLy8gRGlzYWJsZSByZWFzb246IFRlbXBvcmFyaWx5IGRpc2FibGUgZm9yIGV4aXN0aW5nIHVzYWdlc1xuLy8gdW50aWwgd2UgcmVtb3ZlIHRoZW0gYXMgcGFydCBvZiBodHRwczovL2dpdGh1Yi5jb20vV29yZFByZXNzL2d1dGVuYmVyZy9pc3N1ZXMvMzA1MDMjZGVwcmVjYXRpbmctZW1vdGlvbi1jc3Ncbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLWltcG9ydHNcbmltcG9ydCB7IGNzcywgY3ggfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xuaW1wb3J0IHsgaXNOaWwgfSBmcm9tICdsb2Rhc2gnO1xuXG4vKipcbiAqIFdvcmRQcmVzcyBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ0B3b3JkcHJlc3MvZWxlbWVudCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IHVzZUNvbnRleHRTeXN0ZW0gfSBmcm9tICcuLi91aS9jb250ZXh0JztcbmltcG9ydCAqIGFzIHN0eWxlcyBmcm9tICcuL3N0eWxlcyc7XG5pbXBvcnQgQ09ORklHIGZyb20gJy4uL3V0aWxzL2NvbmZpZy12YWx1ZXMnO1xuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZVxuICogQHJldHVybiB7c3RyaW5nfSBUaGUgYm94IHNoYWRvdyB2YWx1ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJveFNoYWRvdyggdmFsdWUgKSB7XG5cdGNvbnN0IGJveFNoYWRvd0NvbG9yID0gYHJnYmEoMCAsMCwgMCwgJHsgdmFsdWUgLyAyMCB9KWA7XG5cdGNvbnN0IGJveFNoYWRvdyA9IGAwICR7IHZhbHVlIH1weCAkeyB2YWx1ZSAqIDIgfXB4IDBcblx0JHsgYm94U2hhZG93Q29sb3IgfWA7XG5cblx0cmV0dXJuIGJveFNoYWRvdztcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vdWkvY29udGV4dCcpLlBvbHltb3JwaGljQ29tcG9uZW50UHJvcHM8aW1wb3J0KCcuL3R5cGVzJykuUHJvcHMsICdkaXYnPn0gcHJvcHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUVsZXZhdGlvbiggcHJvcHMgKSB7XG5cdGNvbnN0IHtcblx0XHRhY3RpdmUsXG5cdFx0Ym9yZGVyUmFkaXVzID0gJ2luaGVyaXQnLFxuXHRcdGNsYXNzTmFtZSxcblx0XHRmb2N1cyxcblx0XHRob3Zlcixcblx0XHRpc0ludGVyYWN0aXZlID0gZmFsc2UsXG5cdFx0b2Zmc2V0ID0gMCxcblx0XHR2YWx1ZSA9IDAsXG5cdFx0Li4ub3RoZXJQcm9wc1xuXHR9ID0gdXNlQ29udGV4dFN5c3RlbSggcHJvcHMsICdFbGV2YXRpb24nICk7XG5cblx0Y29uc3QgY2xhc3NlcyA9IHVzZU1lbW8oICgpID0+IHtcblx0XHQvKiogQHR5cGUge251bWJlciB8IHVuZGVmaW5lZH0gKi9cblx0XHRsZXQgaG92ZXJWYWx1ZSA9ICEgaXNOaWwoIGhvdmVyICkgPyBob3ZlciA6IHZhbHVlICogMjtcblx0XHQvKiogQHR5cGUge251bWJlciB8IHVuZGVmaW5lZH0gKi9cblx0XHRsZXQgYWN0aXZlVmFsdWUgPSAhIGlzTmlsKCBhY3RpdmUgKSA/IGFjdGl2ZSA6IHZhbHVlIC8gMjtcblxuXHRcdGlmICggISBpc0ludGVyYWN0aXZlICkge1xuXHRcdFx0aG92ZXJWYWx1ZSA9ICEgaXNOaWwoIGhvdmVyICkgPyBob3ZlciA6IHVuZGVmaW5lZDtcblx0XHRcdGFjdGl2ZVZhbHVlID0gISBpc05pbCggYWN0aXZlICkgPyBhY3RpdmUgOiB1bmRlZmluZWQ7XG5cdFx0fVxuXG5cdFx0Y29uc3QgdHJhbnNpdGlvbiA9IGBib3gtc2hhZG93ICR7IENPTkZJRy50cmFuc2l0aW9uRHVyYXRpb24gfSAkeyBDT05GSUcudHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uIH1gO1xuXG5cdFx0Y29uc3Qgc3ggPSB7fTtcblxuXHRcdHN4LkJhc2UgPSBjc3MoIHtcblx0XHRcdGJvcmRlclJhZGl1cyxcblx0XHRcdGJvdHRvbTogb2Zmc2V0LFxuXHRcdFx0Ym94U2hhZG93OiBnZXRCb3hTaGFkb3coIHZhbHVlICksXG5cdFx0XHRvcGFjaXR5OiBDT05GSUcuZWxldmF0aW9uSW50ZW5zaXR5LFxuXHRcdFx0bGVmdDogb2Zmc2V0LFxuXHRcdFx0cmlnaHQ6IG9mZnNldCxcblx0XHRcdHRvcDogb2Zmc2V0LFxuXHRcdFx0dHJhbnNpdGlvbixcblx0XHR9ICk7XG5cblx0XHRpZiAoICEgaXNOaWwoIGhvdmVyVmFsdWUgKSApIHtcblx0XHRcdHN4LmhvdmVyID0gY3NzYFxuXHRcdFx0XHQqOmhvdmVyID4gJiB7XG5cdFx0XHRcdFx0Ym94LXNoYWRvdzogJHsgZ2V0Qm94U2hhZG93KCBob3ZlclZhbHVlICkgfTtcblx0XHRcdFx0fVxuXHRcdFx0YDtcblx0XHR9XG5cblx0XHRpZiAoICEgaXNOaWwoIGFjdGl2ZVZhbHVlICkgKSB7XG5cdFx0XHRzeC5hY3RpdmUgPSBjc3NgXG5cdFx0XHRcdCo6YWN0aXZlID4gJiB7XG5cdFx0XHRcdFx0Ym94LXNoYWRvdzogJHsgZ2V0Qm94U2hhZG93KCBhY3RpdmVWYWx1ZSApIH07XG5cdFx0XHRcdH1cblx0XHRcdGA7XG5cdFx0fVxuXG5cdFx0aWYgKCAhIGlzTmlsKCBmb2N1cyApICkge1xuXHRcdFx0c3guZm9jdXMgPSBjc3NgXG5cdFx0XHRcdCo6Zm9jdXMgPiAmIHtcblx0XHRcdFx0XHRib3gtc2hhZG93OiAkeyBnZXRCb3hTaGFkb3coIGZvY3VzICkgfTtcblx0XHRcdFx0fVxuXHRcdFx0YDtcblx0XHR9XG5cblx0XHRyZXR1cm4gY3goXG5cdFx0XHRzdHlsZXMuRWxldmF0aW9uLFxuXHRcdFx0c3guQmFzZSxcblx0XHRcdHN4LmhvdmVyICYmIHN4LmhvdmVyLFxuXHRcdFx0c3guZm9jdXMgJiYgc3guZm9jdXMsXG5cdFx0XHRzeC5hY3RpdmUgJiYgc3guYWN0aXZlLFxuXHRcdFx0Y2xhc3NOYW1lXG5cdFx0KTtcblx0fSwgW1xuXHRcdGFjdGl2ZSxcblx0XHRib3JkZXJSYWRpdXMsXG5cdFx0Y2xhc3NOYW1lLFxuXHRcdGZvY3VzLFxuXHRcdGhvdmVyLFxuXHRcdGlzSW50ZXJhY3RpdmUsXG5cdFx0b2Zmc2V0LFxuXHRcdHZhbHVlLFxuXHRdICk7XG5cblx0cmV0dXJuIHsgLi4ub3RoZXJQcm9wcywgY2xhc3NOYW1lOiBjbGFzc2VzLCAnYXJpYS1oaWRkZW4nOiB0cnVlIH07XG59XG4iXX0= */");
    }

    if (!isNil(activeValue)) {
      sx.active = /*#__PURE__*/css("*:active>&{box-shadow:", getBoxShadow(activeValue), ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:sx-active;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvZWxldmF0aW9uL2hvb2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0ZrQiIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2VsZXZhdGlvbi9ob29rLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuLy8gRGlzYWJsZSByZWFzb246IFRlbXBvcmFyaWx5IGRpc2FibGUgZm9yIGV4aXN0aW5nIHVzYWdlc1xuLy8gdW50aWwgd2UgcmVtb3ZlIHRoZW0gYXMgcGFydCBvZiBodHRwczovL2dpdGh1Yi5jb20vV29yZFByZXNzL2d1dGVuYmVyZy9pc3N1ZXMvMzA1MDMjZGVwcmVjYXRpbmctZW1vdGlvbi1jc3Ncbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLWltcG9ydHNcbmltcG9ydCB7IGNzcywgY3ggfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xuaW1wb3J0IHsgaXNOaWwgfSBmcm9tICdsb2Rhc2gnO1xuXG4vKipcbiAqIFdvcmRQcmVzcyBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ0B3b3JkcHJlc3MvZWxlbWVudCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IHVzZUNvbnRleHRTeXN0ZW0gfSBmcm9tICcuLi91aS9jb250ZXh0JztcbmltcG9ydCAqIGFzIHN0eWxlcyBmcm9tICcuL3N0eWxlcyc7XG5pbXBvcnQgQ09ORklHIGZyb20gJy4uL3V0aWxzL2NvbmZpZy12YWx1ZXMnO1xuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZVxuICogQHJldHVybiB7c3RyaW5nfSBUaGUgYm94IHNoYWRvdyB2YWx1ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJveFNoYWRvdyggdmFsdWUgKSB7XG5cdGNvbnN0IGJveFNoYWRvd0NvbG9yID0gYHJnYmEoMCAsMCwgMCwgJHsgdmFsdWUgLyAyMCB9KWA7XG5cdGNvbnN0IGJveFNoYWRvdyA9IGAwICR7IHZhbHVlIH1weCAkeyB2YWx1ZSAqIDIgfXB4IDBcblx0JHsgYm94U2hhZG93Q29sb3IgfWA7XG5cblx0cmV0dXJuIGJveFNoYWRvdztcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vdWkvY29udGV4dCcpLlBvbHltb3JwaGljQ29tcG9uZW50UHJvcHM8aW1wb3J0KCcuL3R5cGVzJykuUHJvcHMsICdkaXYnPn0gcHJvcHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUVsZXZhdGlvbiggcHJvcHMgKSB7XG5cdGNvbnN0IHtcblx0XHRhY3RpdmUsXG5cdFx0Ym9yZGVyUmFkaXVzID0gJ2luaGVyaXQnLFxuXHRcdGNsYXNzTmFtZSxcblx0XHRmb2N1cyxcblx0XHRob3Zlcixcblx0XHRpc0ludGVyYWN0aXZlID0gZmFsc2UsXG5cdFx0b2Zmc2V0ID0gMCxcblx0XHR2YWx1ZSA9IDAsXG5cdFx0Li4ub3RoZXJQcm9wc1xuXHR9ID0gdXNlQ29udGV4dFN5c3RlbSggcHJvcHMsICdFbGV2YXRpb24nICk7XG5cblx0Y29uc3QgY2xhc3NlcyA9IHVzZU1lbW8oICgpID0+IHtcblx0XHQvKiogQHR5cGUge251bWJlciB8IHVuZGVmaW5lZH0gKi9cblx0XHRsZXQgaG92ZXJWYWx1ZSA9ICEgaXNOaWwoIGhvdmVyICkgPyBob3ZlciA6IHZhbHVlICogMjtcblx0XHQvKiogQHR5cGUge251bWJlciB8IHVuZGVmaW5lZH0gKi9cblx0XHRsZXQgYWN0aXZlVmFsdWUgPSAhIGlzTmlsKCBhY3RpdmUgKSA/IGFjdGl2ZSA6IHZhbHVlIC8gMjtcblxuXHRcdGlmICggISBpc0ludGVyYWN0aXZlICkge1xuXHRcdFx0aG92ZXJWYWx1ZSA9ICEgaXNOaWwoIGhvdmVyICkgPyBob3ZlciA6IHVuZGVmaW5lZDtcblx0XHRcdGFjdGl2ZVZhbHVlID0gISBpc05pbCggYWN0aXZlICkgPyBhY3RpdmUgOiB1bmRlZmluZWQ7XG5cdFx0fVxuXG5cdFx0Y29uc3QgdHJhbnNpdGlvbiA9IGBib3gtc2hhZG93ICR7IENPTkZJRy50cmFuc2l0aW9uRHVyYXRpb24gfSAkeyBDT05GSUcudHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uIH1gO1xuXG5cdFx0Y29uc3Qgc3ggPSB7fTtcblxuXHRcdHN4LkJhc2UgPSBjc3MoIHtcblx0XHRcdGJvcmRlclJhZGl1cyxcblx0XHRcdGJvdHRvbTogb2Zmc2V0LFxuXHRcdFx0Ym94U2hhZG93OiBnZXRCb3hTaGFkb3coIHZhbHVlICksXG5cdFx0XHRvcGFjaXR5OiBDT05GSUcuZWxldmF0aW9uSW50ZW5zaXR5LFxuXHRcdFx0bGVmdDogb2Zmc2V0LFxuXHRcdFx0cmlnaHQ6IG9mZnNldCxcblx0XHRcdHRvcDogb2Zmc2V0LFxuXHRcdFx0dHJhbnNpdGlvbixcblx0XHR9ICk7XG5cblx0XHRpZiAoICEgaXNOaWwoIGhvdmVyVmFsdWUgKSApIHtcblx0XHRcdHN4LmhvdmVyID0gY3NzYFxuXHRcdFx0XHQqOmhvdmVyID4gJiB7XG5cdFx0XHRcdFx0Ym94LXNoYWRvdzogJHsgZ2V0Qm94U2hhZG93KCBob3ZlclZhbHVlICkgfTtcblx0XHRcdFx0fVxuXHRcdFx0YDtcblx0XHR9XG5cblx0XHRpZiAoICEgaXNOaWwoIGFjdGl2ZVZhbHVlICkgKSB7XG5cdFx0XHRzeC5hY3RpdmUgPSBjc3NgXG5cdFx0XHRcdCo6YWN0aXZlID4gJiB7XG5cdFx0XHRcdFx0Ym94LXNoYWRvdzogJHsgZ2V0Qm94U2hhZG93KCBhY3RpdmVWYWx1ZSApIH07XG5cdFx0XHRcdH1cblx0XHRcdGA7XG5cdFx0fVxuXG5cdFx0aWYgKCAhIGlzTmlsKCBmb2N1cyApICkge1xuXHRcdFx0c3guZm9jdXMgPSBjc3NgXG5cdFx0XHRcdCo6Zm9jdXMgPiAmIHtcblx0XHRcdFx0XHRib3gtc2hhZG93OiAkeyBnZXRCb3hTaGFkb3coIGZvY3VzICkgfTtcblx0XHRcdFx0fVxuXHRcdFx0YDtcblx0XHR9XG5cblx0XHRyZXR1cm4gY3goXG5cdFx0XHRzdHlsZXMuRWxldmF0aW9uLFxuXHRcdFx0c3guQmFzZSxcblx0XHRcdHN4LmhvdmVyICYmIHN4LmhvdmVyLFxuXHRcdFx0c3guZm9jdXMgJiYgc3guZm9jdXMsXG5cdFx0XHRzeC5hY3RpdmUgJiYgc3guYWN0aXZlLFxuXHRcdFx0Y2xhc3NOYW1lXG5cdFx0KTtcblx0fSwgW1xuXHRcdGFjdGl2ZSxcblx0XHRib3JkZXJSYWRpdXMsXG5cdFx0Y2xhc3NOYW1lLFxuXHRcdGZvY3VzLFxuXHRcdGhvdmVyLFxuXHRcdGlzSW50ZXJhY3RpdmUsXG5cdFx0b2Zmc2V0LFxuXHRcdHZhbHVlLFxuXHRdICk7XG5cblx0cmV0dXJuIHsgLi4ub3RoZXJQcm9wcywgY2xhc3NOYW1lOiBjbGFzc2VzLCAnYXJpYS1oaWRkZW4nOiB0cnVlIH07XG59XG4iXX0= */");
    }

    if (!isNil(focus)) {
      sx.focus = /*#__PURE__*/css("*:focus>&{box-shadow:", getBoxShadow(focus), ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:sx-focus;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvZWxldmF0aW9uL2hvb2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEZpQiIsImZpbGUiOiJAd29yZHByZXNzL2NvbXBvbmVudHMvc3JjL2VsZXZhdGlvbi9ob29rLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuLy8gRGlzYWJsZSByZWFzb246IFRlbXBvcmFyaWx5IGRpc2FibGUgZm9yIGV4aXN0aW5nIHVzYWdlc1xuLy8gdW50aWwgd2UgcmVtb3ZlIHRoZW0gYXMgcGFydCBvZiBodHRwczovL2dpdGh1Yi5jb20vV29yZFByZXNzL2d1dGVuYmVyZy9pc3N1ZXMvMzA1MDMjZGVwcmVjYXRpbmctZW1vdGlvbi1jc3Ncbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLWltcG9ydHNcbmltcG9ydCB7IGNzcywgY3ggfSBmcm9tICdAZW1vdGlvbi9jc3MnO1xuaW1wb3J0IHsgaXNOaWwgfSBmcm9tICdsb2Rhc2gnO1xuXG4vKipcbiAqIFdvcmRQcmVzcyBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ0B3b3JkcHJlc3MvZWxlbWVudCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IHVzZUNvbnRleHRTeXN0ZW0gfSBmcm9tICcuLi91aS9jb250ZXh0JztcbmltcG9ydCAqIGFzIHN0eWxlcyBmcm9tICcuL3N0eWxlcyc7XG5pbXBvcnQgQ09ORklHIGZyb20gJy4uL3V0aWxzL2NvbmZpZy12YWx1ZXMnO1xuXG4vKipcbiAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZVxuICogQHJldHVybiB7c3RyaW5nfSBUaGUgYm94IHNoYWRvdyB2YWx1ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEJveFNoYWRvdyggdmFsdWUgKSB7XG5cdGNvbnN0IGJveFNoYWRvd0NvbG9yID0gYHJnYmEoMCAsMCwgMCwgJHsgdmFsdWUgLyAyMCB9KWA7XG5cdGNvbnN0IGJveFNoYWRvdyA9IGAwICR7IHZhbHVlIH1weCAkeyB2YWx1ZSAqIDIgfXB4IDBcblx0JHsgYm94U2hhZG93Q29sb3IgfWA7XG5cblx0cmV0dXJuIGJveFNoYWRvdztcbn1cblxuLyoqXG4gKiBAcGFyYW0ge2ltcG9ydCgnLi4vdWkvY29udGV4dCcpLlBvbHltb3JwaGljQ29tcG9uZW50UHJvcHM8aW1wb3J0KCcuL3R5cGVzJykuUHJvcHMsICdkaXYnPn0gcHJvcHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUVsZXZhdGlvbiggcHJvcHMgKSB7XG5cdGNvbnN0IHtcblx0XHRhY3RpdmUsXG5cdFx0Ym9yZGVyUmFkaXVzID0gJ2luaGVyaXQnLFxuXHRcdGNsYXNzTmFtZSxcblx0XHRmb2N1cyxcblx0XHRob3Zlcixcblx0XHRpc0ludGVyYWN0aXZlID0gZmFsc2UsXG5cdFx0b2Zmc2V0ID0gMCxcblx0XHR2YWx1ZSA9IDAsXG5cdFx0Li4ub3RoZXJQcm9wc1xuXHR9ID0gdXNlQ29udGV4dFN5c3RlbSggcHJvcHMsICdFbGV2YXRpb24nICk7XG5cblx0Y29uc3QgY2xhc3NlcyA9IHVzZU1lbW8oICgpID0+IHtcblx0XHQvKiogQHR5cGUge251bWJlciB8IHVuZGVmaW5lZH0gKi9cblx0XHRsZXQgaG92ZXJWYWx1ZSA9ICEgaXNOaWwoIGhvdmVyICkgPyBob3ZlciA6IHZhbHVlICogMjtcblx0XHQvKiogQHR5cGUge251bWJlciB8IHVuZGVmaW5lZH0gKi9cblx0XHRsZXQgYWN0aXZlVmFsdWUgPSAhIGlzTmlsKCBhY3RpdmUgKSA/IGFjdGl2ZSA6IHZhbHVlIC8gMjtcblxuXHRcdGlmICggISBpc0ludGVyYWN0aXZlICkge1xuXHRcdFx0aG92ZXJWYWx1ZSA9ICEgaXNOaWwoIGhvdmVyICkgPyBob3ZlciA6IHVuZGVmaW5lZDtcblx0XHRcdGFjdGl2ZVZhbHVlID0gISBpc05pbCggYWN0aXZlICkgPyBhY3RpdmUgOiB1bmRlZmluZWQ7XG5cdFx0fVxuXG5cdFx0Y29uc3QgdHJhbnNpdGlvbiA9IGBib3gtc2hhZG93ICR7IENPTkZJRy50cmFuc2l0aW9uRHVyYXRpb24gfSAkeyBDT05GSUcudHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uIH1gO1xuXG5cdFx0Y29uc3Qgc3ggPSB7fTtcblxuXHRcdHN4LkJhc2UgPSBjc3MoIHtcblx0XHRcdGJvcmRlclJhZGl1cyxcblx0XHRcdGJvdHRvbTogb2Zmc2V0LFxuXHRcdFx0Ym94U2hhZG93OiBnZXRCb3hTaGFkb3coIHZhbHVlICksXG5cdFx0XHRvcGFjaXR5OiBDT05GSUcuZWxldmF0aW9uSW50ZW5zaXR5LFxuXHRcdFx0bGVmdDogb2Zmc2V0LFxuXHRcdFx0cmlnaHQ6IG9mZnNldCxcblx0XHRcdHRvcDogb2Zmc2V0LFxuXHRcdFx0dHJhbnNpdGlvbixcblx0XHR9ICk7XG5cblx0XHRpZiAoICEgaXNOaWwoIGhvdmVyVmFsdWUgKSApIHtcblx0XHRcdHN4LmhvdmVyID0gY3NzYFxuXHRcdFx0XHQqOmhvdmVyID4gJiB7XG5cdFx0XHRcdFx0Ym94LXNoYWRvdzogJHsgZ2V0Qm94U2hhZG93KCBob3ZlclZhbHVlICkgfTtcblx0XHRcdFx0fVxuXHRcdFx0YDtcblx0XHR9XG5cblx0XHRpZiAoICEgaXNOaWwoIGFjdGl2ZVZhbHVlICkgKSB7XG5cdFx0XHRzeC5hY3RpdmUgPSBjc3NgXG5cdFx0XHRcdCo6YWN0aXZlID4gJiB7XG5cdFx0XHRcdFx0Ym94LXNoYWRvdzogJHsgZ2V0Qm94U2hhZG93KCBhY3RpdmVWYWx1ZSApIH07XG5cdFx0XHRcdH1cblx0XHRcdGA7XG5cdFx0fVxuXG5cdFx0aWYgKCAhIGlzTmlsKCBmb2N1cyApICkge1xuXHRcdFx0c3guZm9jdXMgPSBjc3NgXG5cdFx0XHRcdCo6Zm9jdXMgPiAmIHtcblx0XHRcdFx0XHRib3gtc2hhZG93OiAkeyBnZXRCb3hTaGFkb3coIGZvY3VzICkgfTtcblx0XHRcdFx0fVxuXHRcdFx0YDtcblx0XHR9XG5cblx0XHRyZXR1cm4gY3goXG5cdFx0XHRzdHlsZXMuRWxldmF0aW9uLFxuXHRcdFx0c3guQmFzZSxcblx0XHRcdHN4LmhvdmVyICYmIHN4LmhvdmVyLFxuXHRcdFx0c3guZm9jdXMgJiYgc3guZm9jdXMsXG5cdFx0XHRzeC5hY3RpdmUgJiYgc3guYWN0aXZlLFxuXHRcdFx0Y2xhc3NOYW1lXG5cdFx0KTtcblx0fSwgW1xuXHRcdGFjdGl2ZSxcblx0XHRib3JkZXJSYWRpdXMsXG5cdFx0Y2xhc3NOYW1lLFxuXHRcdGZvY3VzLFxuXHRcdGhvdmVyLFxuXHRcdGlzSW50ZXJhY3RpdmUsXG5cdFx0b2Zmc2V0LFxuXHRcdHZhbHVlLFxuXHRdICk7XG5cblx0cmV0dXJuIHsgLi4ub3RoZXJQcm9wcywgY2xhc3NOYW1lOiBjbGFzc2VzLCAnYXJpYS1oaWRkZW4nOiB0cnVlIH07XG59XG4iXX0= */");
    }

    return cx(styles.Elevation, sx.Base, sx.hover && sx.hover, sx.focus && sx.focus, sx.active && sx.active, className);
  }, [active, borderRadius, className, focus, hover, isInteractive, offset, value]);
  return { ...otherProps,
    className: classes,
    'aria-hidden': true
  };
}
//# sourceMappingURL=hook.js.map