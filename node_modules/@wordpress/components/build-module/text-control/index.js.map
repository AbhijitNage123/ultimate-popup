{"version":3,"sources":["@wordpress/components/src/text-control/index.js"],"names":["useInstanceId","forwardRef","BaseControl","TextControl","label","hideLabelFromVision","value","help","className","onChange","type","props","ref","instanceId","id","onChangeValue","event","target","undefined"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA;AACA;AACA;;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CACC;AACCC,EAAAA,KADD;AAECC,EAAAA,mBAFD;AAGCC,EAAAA,KAHD;AAICC,EAAAA,IAJD;AAKCC,EAAAA,SALD;AAMCC,EAAAA,QAND;AAOCC,EAAAA,IAAI,GAAG,MAPR;AAQC,KAAGC;AARJ,CADD,EAWCC,GAXD,EAYE;AACD,QAAMC,UAAU,GAAGb,aAAa,CAAEG,WAAF,CAAhC;AACA,QAAMW,EAAE,GAAI,0BAA0BD,UAAY,EAAlD;;AACA,QAAME,aAAa;AAClB;AACAC,EAAAA,KAFqB,IAGjBP,QAAQ,CAAEO,KAAK,CAACC,MAAN,CAAaX,KAAf,CAHb;;AAKA,SACC,cAAC,WAAD;AACC,IAAA,KAAK,EAAGF,KADT;AAEC,IAAA,mBAAmB,EAAGC,mBAFvB;AAGC,IAAA,EAAE,EAAGS,EAHN;AAIC,IAAA,IAAI,EAAGP,IAJR;AAKC,IAAA,SAAS,EAAGC;AALb,KAOC;AACC,IAAA,SAAS,EAAC,gCADX;AAEC,IAAA,IAAI,EAAGE,IAFR;AAGC,IAAA,EAAE,EAAGI,EAHN;AAIC,IAAA,KAAK,EAAGR,KAJT;AAKC,IAAA,QAAQ,EAAGS,aALZ;AAMC,wBAAmB,CAAC,CAAER,IAAH,GAAUO,EAAE,GAAG,QAAf,GAA0BI,SAN9C;AAOC,IAAA,GAAG,EAAGN;AAPP,KAQMD,KARN,EAPD,CADD;AAoBA;;AAED,eAAeV,UAAU,CAAEE,WAAF,CAAzB","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useInstanceId } from '@wordpress/compose';\nimport { forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport BaseControl from '../base-control';\n\n/**\n * @typedef OwnProps\n * @property {string}                  label                 Label for the control.\n * @property {boolean}                 [hideLabelFromVision] Whether to accessibly hide the label.\n * @property {string}                  value                 Value of the input.\n * @property {string}                  [help]                Optional help text for the control.\n * @property {string}                  [className]           Classname passed to BaseControl wrapper\n * @property {(value: string) => void} onChange              Handle changes.\n * @property {string}                  [type='text']         Type of the input.\n */\n\n/** @typedef {OwnProps & import('react').ComponentProps<'input'>} Props */\n\n/**\n *\n * @param {Props}                                 props Props\n * @param {import('react').Ref<HTMLInputElement>} [ref]\n */\nfunction TextControl(\n\t{\n\t\tlabel,\n\t\thideLabelFromVision,\n\t\tvalue,\n\t\thelp,\n\t\tclassName,\n\t\tonChange,\n\t\ttype = 'text',\n\t\t...props\n\t},\n\tref\n) {\n\tconst instanceId = useInstanceId( TextControl );\n\tconst id = `inspector-text-control-${ instanceId }`;\n\tconst onChangeValue = (\n\t\t/** @type {import('react').ChangeEvent<HTMLInputElement>} */\n\t\tevent\n\t) => onChange( event.target.value );\n\n\treturn (\n\t\t<BaseControl\n\t\t\tlabel={ label }\n\t\t\thideLabelFromVision={ hideLabelFromVision }\n\t\t\tid={ id }\n\t\t\thelp={ help }\n\t\t\tclassName={ className }\n\t\t>\n\t\t\t<input\n\t\t\t\tclassName=\"components-text-control__input\"\n\t\t\t\ttype={ type }\n\t\t\t\tid={ id }\n\t\t\t\tvalue={ value }\n\t\t\t\tonChange={ onChangeValue }\n\t\t\t\taria-describedby={ !! help ? id + '__help' : undefined }\n\t\t\t\tref={ ref }\n\t\t\t\t{ ...props }\n\t\t\t/>\n\t\t</BaseControl>\n\t);\n}\n\nexport default forwardRef( TextControl );\n"]}