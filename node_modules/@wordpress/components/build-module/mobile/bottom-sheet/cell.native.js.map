{"version":3,"sources":["@wordpress/components/src/mobile/bottom-sheet/cell.native.js"],"names":["TouchableOpacity","Text","View","TextInput","I18nManager","AccessibilityInfo","Platform","isEmpty","get","Icon","check","Component","__","_x","sprintf","withPreferredColorScheme","styles","platformStyles","TouchableRipple","isIOS","OS","BottomSheetCell","constructor","props","arguments","state","isEditingValue","autoFocus","isScreenReaderEnabled","handleScreenReaderToggled","bind","isCurrent","componentDidUpdate","prevProps","prevState","_valueTextInput","focus","componentDidMount","addEventListener","then","setState","componentWillUnmount","removeEventListener","typeToKeyboardType","type","step","keyboardType","Math","abs","render","accessible","accessibilityLabel","accessibilityHint","accessibilityRole","disabled","activeOpacity","onPress","onLongPress","label","value","valuePlaceholder","icon","leftAlign","labelStyle","valueStyle","cellContainerStyle","cellRowContainerStyle","onChangeValue","onSubmit","children","editable","isSelected","separatorType","style","getStylesFromColorScheme","customActionButton","borderless","help","valueProps","showValue","undefined","isValueEditable","cellLabelStyle","cellLabel","cellTextDark","cellLabelCenteredStyle","cellLabelCentered","cellLabelLeftAlignNoIconStyle","cellLabelLeftAlignNoIcon","defaultMissingIconAndValue","defaultLabelStyle","drawSeparator","separatorStyle","drawTopSeparator","cellContainerStyles","cellContainer","rowContainerStyles","cellRowContainer","isInteractive","onCellPress","startEditing","finishEditing","defaultSeparatorStyle","separator","separatorDark","cellSeparatorStyle","cellSeparator","cellSeparatorDark","leftMarginStyle","separatorMarginLeft","getValueComponent","styleRTL","isRTL","cellValueRTL","cellValueStyle","cellValue","finalStyle","shouldShowPlaceholder","c","getAccessibilityLabel","iconStyle","iconDark","resetButtonStyle","resetButton","resetButtonDark","cellHelpStyle","cellHelpLabel","cellHelpLabelIOS","containerPointerEvents","title","handler","opacity","clipToBounds","color","labelIconSeparator","placeholderColor"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tTouchableOpacity,\n\tText,\n\tView,\n\tTextInput,\n\tI18nManager,\n\tAccessibilityInfo,\n\tPlatform,\n} from 'react-native';\nimport { isEmpty, get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Icon } from '@wordpress/components';\nimport { check } from '@wordpress/icons';\nimport { Component } from '@wordpress/element';\nimport { __, _x, sprintf } from '@wordpress/i18n';\nimport { withPreferredColorScheme } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport styles from './styles.scss';\nimport platformStyles from './cellStyles.scss';\nimport TouchableRipple from './ripple';\n\nconst isIOS = Platform.OS === 'ios';\nclass BottomSheetCell extends Component {\n\tconstructor( props ) {\n\t\tsuper( ...arguments );\n\t\tthis.state = {\n\t\t\tisEditingValue: props.autoFocus || false,\n\t\t\tisScreenReaderEnabled: false,\n\t\t};\n\n\t\tthis.handleScreenReaderToggled = this.handleScreenReaderToggled.bind(\n\t\t\tthis\n\t\t);\n\n\t\tthis.isCurrent = false;\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tif ( ! prevState.isEditingValue && this.state.isEditingValue ) {\n\t\t\tthis._valueTextInput.focus();\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.isCurrent = true;\n\t\tAccessibilityInfo.addEventListener(\n\t\t\t'screenReaderChanged',\n\t\t\tthis.handleScreenReaderToggled\n\t\t);\n\n\t\tAccessibilityInfo.isScreenReaderEnabled().then(\n\t\t\t( isScreenReaderEnabled ) => {\n\t\t\t\tif ( this.isCurrent ) {\n\t\t\t\t\tthis.setState( { isScreenReaderEnabled } );\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.isCurrent = false;\n\t\tAccessibilityInfo.removeEventListener(\n\t\t\t'screenReaderChanged',\n\t\t\tthis.handleScreenReaderToggled\n\t\t);\n\t}\n\n\thandleScreenReaderToggled( isScreenReaderEnabled ) {\n\t\tthis.setState( { isScreenReaderEnabled } );\n\t}\n\n\ttypeToKeyboardType( type, step ) {\n\t\tlet keyboardType = `default`;\n\t\tif ( type === `number` ) {\n\t\t\tif ( step && Math.abs( step ) < 1 ) {\n\t\t\t\tkeyboardType = `decimal-pad`;\n\t\t\t} else {\n\t\t\t\tkeyboardType = `number-pad`;\n\t\t\t}\n\t\t}\n\t\treturn keyboardType;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\taccessible,\n\t\t\taccessibilityLabel,\n\t\t\taccessibilityHint,\n\t\t\taccessibilityRole,\n\t\t\tdisabled = false,\n\t\t\tactiveOpacity,\n\t\t\tonPress,\n\t\t\tonLongPress,\n\t\t\tlabel,\n\t\t\tvalue,\n\t\t\tvaluePlaceholder = '',\n\t\t\ticon,\n\t\t\tleftAlign,\n\t\t\tlabelStyle = {},\n\t\t\tvalueStyle = {},\n\t\t\tcellContainerStyle = {},\n\t\t\tcellRowContainerStyle = {},\n\t\t\tonChangeValue,\n\t\t\tonSubmit,\n\t\t\tchildren,\n\t\t\teditable = true,\n\t\t\tisSelected = false,\n\t\t\tseparatorType,\n\t\t\tstyle = {},\n\t\t\tgetStylesFromColorScheme,\n\t\t\tcustomActionButton,\n\t\t\ttype,\n\t\t\tstep,\n\t\t\tborderless,\n\t\t\thelp,\n\t\t\t...valueProps\n\t\t} = this.props;\n\n\t\tconst showValue = value !== undefined;\n\t\tconst isValueEditable = editable && onChangeValue !== undefined;\n\t\tconst cellLabelStyle = getStylesFromColorScheme(\n\t\t\tstyles.cellLabel,\n\t\t\tstyles.cellTextDark\n\t\t);\n\t\tconst cellLabelCenteredStyle = getStylesFromColorScheme(\n\t\t\tstyles.cellLabelCentered,\n\t\t\tstyles.cellTextDark\n\t\t);\n\t\tconst cellLabelLeftAlignNoIconStyle = getStylesFromColorScheme(\n\t\t\tstyles.cellLabelLeftAlignNoIcon,\n\t\t\tstyles.cellTextDark\n\t\t);\n\t\tconst defaultMissingIconAndValue = leftAlign\n\t\t\t? cellLabelLeftAlignNoIconStyle\n\t\t\t: cellLabelCenteredStyle;\n\t\tconst defaultLabelStyle =\n\t\t\tshowValue || customActionButton || icon\n\t\t\t\t? cellLabelStyle\n\t\t\t\t: defaultMissingIconAndValue;\n\n\t\tconst drawSeparator =\n\t\t\t( separatorType && separatorType !== 'none' ) ||\n\t\t\tseparatorStyle === undefined;\n\t\tconst drawTopSeparator =\n\t\t\tdrawSeparator && separatorType === 'topFullWidth';\n\n\t\tconst cellContainerStyles = [\n\t\t\tstyles.cellContainer,\n\t\t\tcellContainerStyle,\n\t\t];\n\t\tconst rowContainerStyles = [\n\t\t\tstyles.cellRowContainer,\n\t\t\tcellRowContainerStyle,\n\t\t];\n\n\t\tconst isInteractive =\n\t\t\tisValueEditable ||\n\t\t\tonPress !== undefined ||\n\t\t\tonLongPress !== undefined;\n\n\t\tconst onCellPress = () => {\n\t\t\tif ( isValueEditable ) {\n\t\t\t\tstartEditing();\n\t\t\t} else if ( onPress !== undefined ) {\n\t\t\t\tonPress();\n\t\t\t}\n\t\t};\n\n\t\tconst finishEditing = () => {\n\t\t\tthis.setState( { isEditingValue: false } );\n\t\t};\n\n\t\tconst startEditing = () => {\n\t\t\tif ( this.state.isEditingValue === false ) {\n\t\t\t\tthis.setState( { isEditingValue: true } );\n\t\t\t}\n\t\t};\n\n\t\tconst separatorStyle = () => {\n\t\t\t//eslint-disable-next-line @wordpress/no-unused-vars-before-return\n\t\t\tconst defaultSeparatorStyle = this.props.getStylesFromColorScheme(\n\t\t\t\tstyles.separator,\n\t\t\t\tstyles.separatorDark\n\t\t\t);\n\t\t\tconst cellSeparatorStyle = this.props.getStylesFromColorScheme(\n\t\t\t\tstyles.cellSeparator,\n\t\t\t\tstyles.cellSeparatorDark\n\t\t\t);\n\t\t\tconst leftMarginStyle = {\n\t\t\t\t...cellSeparatorStyle,\n\t\t\t\t...platformStyles.separatorMarginLeft,\n\t\t\t};\n\t\t\tswitch ( separatorType ) {\n\t\t\t\tcase 'leftMargin':\n\t\t\t\t\treturn leftMarginStyle;\n\t\t\t\tcase 'fullWidth':\n\t\t\t\tcase 'topFullWidth':\n\t\t\t\t\treturn defaultSeparatorStyle;\n\t\t\t\tcase 'none':\n\t\t\t\t\treturn undefined;\n\t\t\t\tcase undefined:\n\t\t\t\t\tif ( showValue && icon ) {\n\t\t\t\t\t\treturn leftMarginStyle;\n\t\t\t\t\t}\n\t\t\t\t\treturn defaultSeparatorStyle;\n\t\t\t}\n\t\t};\n\n\t\tconst getValueComponent = () => {\n\t\t\tconst styleRTL = I18nManager.isRTL && styles.cellValueRTL;\n\t\t\tconst cellValueStyle = this.props.getStylesFromColorScheme(\n\t\t\t\tstyles.cellValue,\n\t\t\t\tstyles.cellTextDark\n\t\t\t);\n\t\t\tconst finalStyle = {\n\t\t\t\t...cellValueStyle,\n\t\t\t\t...valueStyle,\n\t\t\t\t...styleRTL,\n\t\t\t};\n\n\t\t\t// To be able to show the `middle` ellipsizeMode on editable cells\n\t\t\t// we show the TextInput just when the user wants to edit the value,\n\t\t\t// and the Text component to display it.\n\t\t\t// We also show the TextInput to display placeholder.\n\t\t\tconst shouldShowPlaceholder = isValueEditable && value === '';\n\t\t\treturn this.state.isEditingValue || shouldShowPlaceholder ? (\n\t\t\t\t<TextInput\n\t\t\t\t\tref={ ( c ) => ( this._valueTextInput = c ) }\n\t\t\t\t\tnumberOfLines={ 1 }\n\t\t\t\t\tstyle={ finalStyle }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tplaceholder={ valuePlaceholder }\n\t\t\t\t\tplaceholderTextColor={ '#87a6bc' }\n\t\t\t\t\tonChangeText={ onChangeValue }\n\t\t\t\t\teditable={ isValueEditable }\n\t\t\t\t\tpointerEvents={\n\t\t\t\t\t\tthis.state.isEditingValue ? 'auto' : 'none'\n\t\t\t\t\t}\n\t\t\t\t\tonFocus={ startEditing }\n\t\t\t\t\tonBlur={ finishEditing }\n\t\t\t\t\tonSubmitEditing={ onSubmit }\n\t\t\t\t\tkeyboardType={ this.typeToKeyboardType( type, step ) }\n\t\t\t\t\t{ ...valueProps }\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<Text\n\t\t\t\t\tstyle={ { ...cellValueStyle, ...valueStyle } }\n\t\t\t\t\tnumberOfLines={ 1 }\n\t\t\t\t\tellipsizeMode={ 'middle' }\n\t\t\t\t>\n\t\t\t\t\t{ value }\n\t\t\t\t</Text>\n\t\t\t);\n\t\t};\n\n\t\tconst getAccessibilityLabel = () => {\n\t\t\tif ( accessible === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( accessibilityLabel || ! showValue ) {\n\t\t\t\treturn accessibilityLabel || label;\n\t\t\t}\n\n\t\t\tif ( isEmpty( value ) ) {\n\t\t\t\treturn isEmpty( help )\n\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t/* translators: accessibility text. Empty state of a inline textinput cell. %s: The cell's title */\n\t\t\t\t\t\t\t_x( '%s. Empty', 'inline textinput cell' ),\n\t\t\t\t\t\t\tlabel\n\t\t\t\t\t  )\n\t\t\t\t\t: // Separating by ',' is necessary to make a pause on urls (non-capitalized text)\n\t\t\t\t\t  sprintf(\n\t\t\t\t\t\t\t/* translators: accessibility text. Empty state of a inline textinput cell. %1: Cell title, %2: cell help. */\n\t\t\t\t\t\t\t_x( '%1$s, %2$s. Empty', 'inline textinput cell' ),\n\t\t\t\t\t\t\tlabel,\n\t\t\t\t\t\t\thelp\n\t\t\t\t\t  );\n\t\t\t}\n\t\t\treturn isEmpty( help )\n\t\t\t\t? sprintf(\n\t\t\t\t\t\t/* translators: accessibility text. Inline textinput title and value.%1: Cell title, %2: cell value. */\n\t\t\t\t\t\t_x( '%1$s, %2$s', 'inline textinput cell' ),\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tvalue\n\t\t\t\t  ) // Separating by ',' is necessary to make a pause on urls (non-capitalized text)\n\t\t\t\t: sprintf(\n\t\t\t\t\t\t/* translators: accessibility text. Inline textinput title, value and help text.%1: Cell title, %2: cell value, , %3: cell help. */\n\t\t\t\t\t\t_x( '%1$s, %2$s, %3$s', 'inline textinput cell' ),\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\thelp\n\t\t\t\t  );\n\t\t};\n\n\t\tconst iconStyle = getStylesFromColorScheme(\n\t\t\tstyles.icon,\n\t\t\tstyles.iconDark\n\t\t);\n\t\tconst resetButtonStyle = getStylesFromColorScheme(\n\t\t\tstyles.resetButton,\n\t\t\tstyles.resetButtonDark\n\t\t);\n\t\tconst cellHelpStyle = [\n\t\t\tstyles.cellHelpLabel,\n\t\t\tisIOS && styles.cellHelpLabelIOS,\n\t\t];\n\t\tconst containerPointerEvents =\n\t\t\tthis.state.isScreenReaderEnabled && accessible ? 'none' : 'auto';\n\t\tconst { title, handler } = customActionButton || {};\n\n\t\tconst opacity =\n\t\t\tactiveOpacity !== undefined\n\t\t\t\t? activeOpacity\n\t\t\t\t: get( platformStyles, 'activeOpacity.opacity' );\n\n\t\treturn (\n\t\t\t<TouchableRipple\n\t\t\t\taccessible={\n\t\t\t\t\taccessible !== undefined\n\t\t\t\t\t\t? accessible\n\t\t\t\t\t\t: ! this.state.isEditingValue\n\t\t\t\t}\n\t\t\t\taccessibilityLabel={ getAccessibilityLabel() }\n\t\t\t\taccessibilityRole={ accessibilityRole || 'button' }\n\t\t\t\taccessibilityHint={\n\t\t\t\t\tisValueEditable\n\t\t\t\t\t\t? /* translators: accessibility text */\n\t\t\t\t\t\t  __( 'Double tap to edit this value' )\n\t\t\t\t\t\t: accessibilityHint\n\t\t\t\t}\n\t\t\t\tdisabled={ disabled || ! isInteractive }\n\t\t\t\tactiveOpacity={ opacity }\n\t\t\t\tonPress={ onCellPress }\n\t\t\t\tonLongPress={ onLongPress }\n\t\t\t\tstyle={ [ styles.clipToBounds, style ] }\n\t\t\t\tborderless={ borderless }\n\t\t\t>\n\t\t\t\t{ drawTopSeparator && <View style={ separatorStyle() } /> }\n\t\t\t\t<View\n\t\t\t\t\tstyle={ cellContainerStyles }\n\t\t\t\t\tpointerEvents={ containerPointerEvents }\n\t\t\t\t>\n\t\t\t\t\t<View style={ rowContainerStyles }>\n\t\t\t\t\t\t<View style={ styles.cellRowContainer }>\n\t\t\t\t\t\t\t{ icon && (\n\t\t\t\t\t\t\t\t<View style={ styles.cellRowContainer }>\n\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\t\t\t\t\tsize={ 24 }\n\t\t\t\t\t\t\t\t\t\tfill={ iconStyle.color }\n\t\t\t\t\t\t\t\t\t\tisPressed={ false }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\t\t\tplatformStyles.labelIconSeparator\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ label && (\n\t\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\t\tstyle={ [ defaultLabelStyle, labelStyle ] }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</View>\n\t\t\t\t\t\t{ customActionButton && (\n\t\t\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\t\t\tonPress={ handler }\n\t\t\t\t\t\t\t\taccessibilityRole={ 'button' }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Text style={ resetButtonStyle }>\n\t\t\t\t\t\t\t\t\t{ title }\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</View>\n\t\t\t\t\t{ isSelected && (\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\ticon={ check }\n\t\t\t\t\t\t\tfill={ platformStyles.isSelected.color }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ showValue && getValueComponent() }\n\t\t\t\t\t{ children }\n\t\t\t\t</View>\n\t\t\t\t{ help && (\n\t\t\t\t\t<Text style={ [ cellHelpStyle, styles.placeholderColor ] }>\n\t\t\t\t\t\t{ help }\n\t\t\t\t\t</Text>\n\t\t\t\t) }\n\t\t\t\t{ ! drawTopSeparator && <View style={ separatorStyle() } /> }\n\t\t\t</TouchableRipple>\n\t\t);\n\t}\n}\n\nexport default withPreferredColorScheme( BottomSheetCell );\n"]}