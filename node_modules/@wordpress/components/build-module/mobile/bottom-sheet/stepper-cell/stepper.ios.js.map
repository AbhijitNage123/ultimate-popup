{"version":3,"sources":["@wordpress/components/src/mobile/bottom-sheet/stepper-cell/stepper.ios.js"],"names":["Text","TouchableOpacity","View","withPreferredColorScheme","Icon","minus","plus","styles","Stepper","getStylesFromColorScheme","isMaxValue","isMinValue","onPressInDecrement","onPressInIncrement","onPressOut","value","children","shouldDisplayTextInput","valueStyle","valueTextDark","buttonStyle","button","buttonDark","container","opacity","color"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,IAAT,EAAeC,gBAAf,EAAiCC,IAAjC,QAA6C,cAA7C;AAEA;AACA;AACA;;AACA,SAASC,wBAAT,QAAyC,oBAAzC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,QAAkC,kBAAlC;AAEA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,OAAT,CAAkB;AACjBC,EAAAA,wBADiB;AAEjBC,EAAAA,UAFiB;AAGjBC,EAAAA,UAHiB;AAIjBC,EAAAA,kBAJiB;AAKjBC,EAAAA,kBALiB;AAMjBC,EAAAA,UANiB;AAOjBC,EAAAA,KAPiB;AAQjBC,EAAAA,QARiB;AASjBC,EAAAA;AATiB,CAAlB,EAUI;AACH,QAAMC,UAAU,GAAGT,wBAAwB,CAC1CF,MAAM,CAACQ,KADmC,EAE1CR,MAAM,CAACY,aAFmC,CAA3C;AAIA,QAAMC,WAAW,GAAGX,wBAAwB,CAC3CF,MAAM,CAACc,MADoC,EAE3Cd,MAAM,CAACe,UAFoC,CAA5C;AAKA,SACC,cAAC,IAAD;AAAM,IAAA,KAAK,EAAGf,MAAM,CAACgB;AAArB,KACG,CAAEN,sBAAF,IACD,cAAC,IAAD;AAAM,IAAA,KAAK,EAAGC;AAAd,KAA6BH,KAA7B,CAFF,EAIGC,QAJH,EAKC,cAAC,gBAAD;AACC,IAAA,QAAQ,EAAGL,UADZ;AAEC,IAAA,SAAS,EAAGC,kBAFb;AAGC,IAAA,UAAU,EAAGE,UAHd;AAIC,IAAA,KAAK,EAAG,CAAEM,WAAF,EAAeT,UAAU,GAAG;AAAEa,MAAAA,OAAO,EAAE;AAAX,KAAH,GAAsB,IAA/C;AAJT,KAMC,cAAC,IAAD;AAAM,IAAA,IAAI,EAAGnB,KAAb;AAAqB,IAAA,IAAI,EAAG,EAA5B;AAAiC,IAAA,KAAK,EAAGe,WAAW,CAACK;AAArD,IAND,CALD,EAaC,cAAC,gBAAD;AACC,IAAA,QAAQ,EAAGf,UADZ;AAEC,IAAA,SAAS,EAAGG,kBAFb;AAGC,IAAA,UAAU,EAAGC,UAHd;AAIC,IAAA,KAAK,EAAG,CAAEM,WAAF,EAAeV,UAAU,GAAG;AAAEc,MAAAA,OAAO,EAAE;AAAX,KAAH,GAAsB,IAA/C;AAJT,KAMC,cAAC,IAAD;AAAM,IAAA,IAAI,EAAGlB,IAAb;AAAoB,IAAA,IAAI,EAAG,EAA3B;AAAgC,IAAA,KAAK,EAAGc,WAAW,CAACK;AAApD,IAND,CAbD,CADD;AAwBA;;AAED,eAAetB,wBAAwB,CAAEK,OAAF,CAAvC","sourcesContent":["/**\n * External dependencies\n */\nimport { Text, TouchableOpacity, View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { withPreferredColorScheme } from '@wordpress/compose';\nimport { Icon, minus, plus } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nfunction Stepper( {\n\tgetStylesFromColorScheme,\n\tisMaxValue,\n\tisMinValue,\n\tonPressInDecrement,\n\tonPressInIncrement,\n\tonPressOut,\n\tvalue,\n\tchildren,\n\tshouldDisplayTextInput,\n} ) {\n\tconst valueStyle = getStylesFromColorScheme(\n\t\tstyles.value,\n\t\tstyles.valueTextDark\n\t);\n\tconst buttonStyle = getStylesFromColorScheme(\n\t\tstyles.button,\n\t\tstyles.buttonDark\n\t);\n\n\treturn (\n\t\t<View style={ styles.container }>\n\t\t\t{ ! shouldDisplayTextInput && (\n\t\t\t\t<Text style={ valueStyle }>{ value }</Text>\n\t\t\t) }\n\t\t\t{ children }\n\t\t\t<TouchableOpacity\n\t\t\t\tdisabled={ isMinValue }\n\t\t\t\tonPressIn={ onPressInDecrement }\n\t\t\t\tonPressOut={ onPressOut }\n\t\t\t\tstyle={ [ buttonStyle, isMinValue ? { opacity: 0.4 } : null ] }\n\t\t\t>\n\t\t\t\t<Icon icon={ minus } size={ 24 } color={ buttonStyle.color } />\n\t\t\t</TouchableOpacity>\n\t\t\t<TouchableOpacity\n\t\t\t\tdisabled={ isMaxValue }\n\t\t\t\tonPressIn={ onPressInIncrement }\n\t\t\t\tonPressOut={ onPressOut }\n\t\t\t\tstyle={ [ buttonStyle, isMaxValue ? { opacity: 0.4 } : null ] }\n\t\t\t>\n\t\t\t\t<Icon icon={ plus } size={ 24 } color={ buttonStyle.color } />\n\t\t\t</TouchableOpacity>\n\t\t</View>\n\t);\n}\n\nexport default withPreferredColorScheme( Stepper );\n"]}