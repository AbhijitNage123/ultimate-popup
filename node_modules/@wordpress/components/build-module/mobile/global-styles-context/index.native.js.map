{"version":3,"sources":["@wordpress/components/src/mobile/global-styles-context/index.native.js"],"names":["pick","createContext","useContext","BLOCK_STYLE_ATTRIBUTES","getBlockPaddings","getBlockColors","GlobalStylesContext","style","getMergedGlobalStyles","baseGlobalStyles","globalStyle","wrapperPropsStyle","blockAttributes","defaultColors","blockName","baseGlobalColors","baseColors","blockStyleAttributes","mergedStyle","blockColors","blockPaddings","useGlobalStyles","globalStyles","withGlobalStyles","WrappedComponent","props"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,IAAT,QAAqB,QAArB;AAEA;AACA;AACA;;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,oBAA1C;AAEA;AACA;AACA;;AACA,SACCC,sBADD,EAECC,gBAFD,EAGCC,cAHD,QAIO,SAJP;AAMA,MAAMC,mBAAmB,GAAGL,aAAa,CAAE;AAAEM,EAAAA,KAAK,EAAE;AAAT,CAAF,CAAzC;AAEAD,mBAAmB,CAACH,sBAApB,GAA6CA,sBAA7C;AAEA,OAAO,MAAMK,qBAAqB,GAAG,CACpCC,gBADoC,EAEpCC,WAFoC,EAGpCC,iBAHoC,EAIpCC,eAJoC,EAKpCC,aALoC,EAMpCC,SANoC,KAOhC;AACJ,QAAMC,gBAAgB,GAAG;AACxBC,IAAAA,UAAU,EAAEP,gBAAgB,IAAI;AADR,GAAzB;AAGA,QAAMQ,oBAAoB,GAAGjB,IAAI,CAChCY,eADgC,EAEhCT,sBAFgC,CAAjC;AAIA,QAAMe,WAAW,GAAG,EACnB,GAAGH,gBADgB;AAEnB,OAAGL,WAFgB;AAGnB,OAAGC;AAHgB,GAApB;AAKA,QAAMQ,WAAW,GAAGd,cAAc,CACjCY,oBADiC,EAEjCJ,aAFiC,EAGjCC,SAHiC,EAIjCL,gBAJiC,CAAlC;AAMA,QAAMW,aAAa,GAAGhB,gBAAgB,CACrCc,WADqC,EAErCP,iBAFqC,EAGrCM,oBAHqC,EAIrCE,WAJqC,CAAtC;AAOA,SAAO,EAAE,GAAGD,WAAL;AAAkB,OAAGE,aAArB;AAAoC,OAAGD;AAAvC,GAAP;AACA,CAlCM;AAoCP,OAAO,MAAME,eAAe,GAAG,MAAM;AACpC,QAAMC,YAAY,GAAGpB,UAAU,CAAEI,mBAAF,CAA/B;AAEA,SAAOgB,YAAP;AACA,CAJM;AAMP,OAAO,MAAMC,gBAAgB,GAAKC,gBAAF,IAA0BC,KAAF,IACvD,cAAC,mBAAD,CAAqB,QAArB,QACKH,YAAF,IACD,cAAC,gBAAD,eAAuBG,KAAvB;AAA+B,EAAA,YAAY,EAAGH;AAA9C,GAFF,CADM;AAQP,eAAehB,mBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { pick } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { createContext, useContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport {\n\tBLOCK_STYLE_ATTRIBUTES,\n\tgetBlockPaddings,\n\tgetBlockColors,\n} from './utils';\n\nconst GlobalStylesContext = createContext( { style: {} } );\n\nGlobalStylesContext.BLOCK_STYLE_ATTRIBUTES = BLOCK_STYLE_ATTRIBUTES;\n\nexport const getMergedGlobalStyles = (\n\tbaseGlobalStyles,\n\tglobalStyle,\n\twrapperPropsStyle,\n\tblockAttributes,\n\tdefaultColors,\n\tblockName\n) => {\n\tconst baseGlobalColors = {\n\t\tbaseColors: baseGlobalStyles || {},\n\t};\n\tconst blockStyleAttributes = pick(\n\t\tblockAttributes,\n\t\tBLOCK_STYLE_ATTRIBUTES\n\t);\n\tconst mergedStyle = {\n\t\t...baseGlobalColors,\n\t\t...globalStyle,\n\t\t...wrapperPropsStyle,\n\t};\n\tconst blockColors = getBlockColors(\n\t\tblockStyleAttributes,\n\t\tdefaultColors,\n\t\tblockName,\n\t\tbaseGlobalStyles\n\t);\n\tconst blockPaddings = getBlockPaddings(\n\t\tmergedStyle,\n\t\twrapperPropsStyle,\n\t\tblockStyleAttributes,\n\t\tblockColors\n\t);\n\n\treturn { ...mergedStyle, ...blockPaddings, ...blockColors };\n};\n\nexport const useGlobalStyles = () => {\n\tconst globalStyles = useContext( GlobalStylesContext );\n\n\treturn globalStyles;\n};\n\nexport const withGlobalStyles = ( WrappedComponent ) => ( props ) => (\n\t<GlobalStylesContext.Consumer>\n\t\t{ ( globalStyles ) => (\n\t\t\t<WrappedComponent { ...props } globalStyles={ globalStyles } />\n\t\t) }\n\t</GlobalStylesContext.Consumer>\n);\n\nexport default GlobalStylesContext;\n"]}