{"version":3,"sources":["@wordpress/components/src/focal-point-picker/utils.js"],"names":["INITIAL_BOUNDS","top","left","bottom","right","width","height","VIDEO_EXTENSIONS","getExtension","filename","parts","split","length","isVideoType","includes","fractionToPercentage","fraction","Math","round"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG;AAC7BC,EAAAA,GAAG,EAAE,CADwB;AAE7BC,EAAAA,IAAI,EAAE,CAFuB;AAG7BC,EAAAA,MAAM,EAAE,CAHqB;AAI7BC,EAAAA,KAAK,EAAE,CAJsB;AAK7BC,EAAAA,KAAK,EAAE,CALsB;AAM7BC,EAAAA,MAAM,EAAE;AANqB,CAAvB;AASP,MAAMC,gBAAgB,GAAG,CACxB,KADwB,EAExB,KAFwB,EAGxB,MAHwB,EAIxB,KAJwB,EAKxB,KALwB,EAMxB,KANwB,EAOxB,KAPwB,EAQxB,KARwB,EASxB,MATwB,EAUxB,KAVwB,CAAzB;AAaA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,CAAuBC,QAAQ,GAAG,EAAlC,EAAuC;AAC7C,QAAMC,KAAK,GAAGD,QAAQ,CAACE,KAAT,CAAgB,GAAhB,CAAd;AACA,SAAOD,KAAK,CAAEA,KAAK,CAACE,MAAN,GAAe,CAAjB,CAAZ;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAsBJ,QAAQ,GAAG,EAAjC,EAAsC;AAC5C,MAAK,CAAEA,QAAP,EAAkB,OAAO,KAAP;AAClB,SAAOF,gBAAgB,CAACO,QAAjB,CAA2BN,YAAY,CAAEC,QAAF,CAAvC,CAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASM,oBAAT,CAA+BC,QAA/B,EAA0C;AAChD,SAAOC,IAAI,CAACC,KAAL,CAAYF,QAAQ,GAAG,GAAvB,CAAP;AACA","sourcesContent":["export const INITIAL_BOUNDS = {\n\ttop: 0,\n\tleft: 0,\n\tbottom: 0,\n\tright: 0,\n\twidth: 0,\n\theight: 0,\n};\n\nconst VIDEO_EXTENSIONS = [\n\t'avi',\n\t'mpg',\n\t'mpeg',\n\t'mov',\n\t'mp4',\n\t'm4v',\n\t'ogg',\n\t'ogv',\n\t'webm',\n\t'wmv',\n];\n\n/**\n * Gets the extension of a file name.\n *\n * @param {string} filename The file name.\n * @return {string} The extension of the file name.\n */\nexport function getExtension( filename = '' ) {\n\tconst parts = filename.split( '.' );\n\treturn parts[ parts.length - 1 ];\n}\n\n/**\n * Checks if a file is a video.\n *\n * @param {string} filename The file name.\n * @return {boolean} Whether the file is a video.\n */\nexport function isVideoType( filename = '' ) {\n\tif ( ! filename ) return false;\n\treturn VIDEO_EXTENSIONS.includes( getExtension( filename ) );\n}\n\n/**\n * Transforms a fraction value to a percentage value.\n *\n * @param {number} fraction The fraction value.\n * @return {number} A percentage value.\n */\nexport function fractionToPercentage( fraction ) {\n\treturn Math.round( fraction * 100 );\n}\n"]}