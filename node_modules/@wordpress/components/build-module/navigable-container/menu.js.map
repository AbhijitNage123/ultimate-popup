{"version":3,"sources":["@wordpress/components/src/navigable-container/menu.js"],"names":["includes","forwardRef","UP","DOWN","LEFT","RIGHT","NavigableContainer","NavigableMenu","role","orientation","rest","ref","eventToOffset","evt","keyCode","next","previous"],"mappings":";;;AAAA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,QAAzB;AAEA;AACA;AACA;;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,EAAT,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,KAAzB,QAAsC,qBAAtC;AAEA;AACA;AACA;;AACA,OAAOC,kBAAP,MAA+B,aAA/B;AAEA,OAAO,SAASC,aAAT,CACN;AAAEC,EAAAA,IAAI,GAAG,MAAT;AAAiBC,EAAAA,WAAW,GAAG,UAA/B;AAA2C,KAAGC;AAA9C,CADM,EAENC,GAFM,EAGL;AACD,QAAMC,aAAa,GAAKC,GAAF,IAAW;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAcD,GAApB;AAEA,QAAIE,IAAI,GAAG,CAAEZ,IAAF,CAAX;AACA,QAAIa,QAAQ,GAAG,CAAEd,EAAF,CAAf;;AAEA,QAAKO,WAAW,KAAK,YAArB,EAAoC;AACnCM,MAAAA,IAAI,GAAG,CAAEV,KAAF,CAAP;AACAW,MAAAA,QAAQ,GAAG,CAAEZ,IAAF,CAAX;AACA;;AAED,QAAKK,WAAW,KAAK,MAArB,EAA8B;AAC7BM,MAAAA,IAAI,GAAG,CAAEV,KAAF,EAASF,IAAT,CAAP;AACAa,MAAAA,QAAQ,GAAG,CAAEZ,IAAF,EAAQF,EAAR,CAAX;AACA;;AAED,QAAKF,QAAQ,CAAEe,IAAF,EAAQD,OAAR,CAAb,EAAiC;AAChC,aAAO,CAAP;AACA,KAFD,MAEO,IAAKd,QAAQ,CAAEgB,QAAF,EAAYF,OAAZ,CAAb,EAAqC;AAC3C,aAAO,CAAC,CAAR;AACA,KAFM,MAEA,IAAKd,QAAQ,CAAE,CAAEG,IAAF,EAAQD,EAAR,EAAYE,IAAZ,EAAkBC,KAAlB,CAAF,EAA6BS,OAA7B,CAAb,EAAsD;AAC5D;AACA;AACA;AACA,aAAO,CAAP;AACA;AACD,GA1BD;;AA4BA,SACC,cAAC,kBAAD;AACC,IAAA,GAAG,EAAGH,GADP;AAEC,IAAA,oBAAoB,MAFrB;AAGC,IAAA,mBAAmB,EAAG,KAHvB;AAIC,IAAA,IAAI,EAAGH,IAJR;AAKC,wBAAmBA,IAAI,KAAK,cAAT,GAA0B,IAA1B,GAAiCC,WALrD;AAMC,IAAA,aAAa,EAAGG;AANjB,KAOMF,IAPN,EADD;AAWA;AAED,eAAeT,UAAU,CAAEM,aAAF,CAAzB","sourcesContent":["/**\n * External dependencies\n */\nimport { includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef } from '@wordpress/element';\nimport { UP, DOWN, LEFT, RIGHT } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport NavigableContainer from './container';\n\nexport function NavigableMenu(\n\t{ role = 'menu', orientation = 'vertical', ...rest },\n\tref\n) {\n\tconst eventToOffset = ( evt ) => {\n\t\tconst { keyCode } = evt;\n\n\t\tlet next = [ DOWN ];\n\t\tlet previous = [ UP ];\n\n\t\tif ( orientation === 'horizontal' ) {\n\t\t\tnext = [ RIGHT ];\n\t\t\tprevious = [ LEFT ];\n\t\t}\n\n\t\tif ( orientation === 'both' ) {\n\t\t\tnext = [ RIGHT, DOWN ];\n\t\t\tprevious = [ LEFT, UP ];\n\t\t}\n\n\t\tif ( includes( next, keyCode ) ) {\n\t\t\treturn 1;\n\t\t} else if ( includes( previous, keyCode ) ) {\n\t\t\treturn -1;\n\t\t} else if ( includes( [ DOWN, UP, LEFT, RIGHT ], keyCode ) ) {\n\t\t\t// Key press should be handled, e.g. have event propagation and\n\t\t\t// default behavior handled by NavigableContainer but not result\n\t\t\t// in an offset.\n\t\t\treturn 0;\n\t\t}\n\t};\n\n\treturn (\n\t\t<NavigableContainer\n\t\t\tref={ ref }\n\t\t\tstopNavigationEvents\n\t\t\tonlyBrowserTabstops={ false }\n\t\t\trole={ role }\n\t\t\taria-orientation={ role === 'presentation' ? null : orientation }\n\t\t\teventToOffset={ eventToOffset }\n\t\t\t{ ...rest }\n\t\t/>\n\t);\n}\n\nexport default forwardRef( NavigableMenu );\n"]}