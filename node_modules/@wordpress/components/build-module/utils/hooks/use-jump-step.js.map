{"version":3,"sources":["@wordpress/components/src/utils/hooks/use-jump-step.js"],"names":["useEffect","useState","useJumpStep","isShiftStepEnabled","shiftStep","step","isShiftKey","setIsShiftKey","handleShiftKeyToggle","event","shiftKey","window","addEventListener","removeEventListener","isEnabled"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,oBAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAsB;AACrBC,EAAAA,kBAAkB,GAAG,IADA;AAErBC,EAAAA,SAAS,GAAG,EAFS;AAGrBC,EAAAA,IAAI,GAAG;AAHc,CAAtB,EAII;AACH,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCN,QAAQ,CAAE,KAAF,CAA9C;AAEAD,EAAAA,SAAS,CAAE,MAAM;AAChB;AACA,UAAMQ,oBAAoB,GAAKC,KAAF,IAAa;AACzCF,MAAAA,aAAa,CAAEE,KAAK,CAACC,QAAR,CAAb;AACA,KAFD;;AAIAC,IAAAA,MAAM,CAACC,gBAAP,CAAyB,SAAzB,EAAoCJ,oBAApC;AACAG,IAAAA,MAAM,CAACC,gBAAP,CAAyB,OAAzB,EAAkCJ,oBAAlC;AAEA,WAAO,MAAM;AACZG,MAAAA,MAAM,CAACE,mBAAP,CAA4B,SAA5B,EAAuCL,oBAAvC;AACAG,MAAAA,MAAM,CAACE,mBAAP,CAA4B,OAA5B,EAAqCL,oBAArC;AACA,KAHD;AAIA,GAbQ,EAaN,EAbM,CAAT;AAeA,QAAMM,SAAS,GAAGX,kBAAkB,IAAIG,UAAxC;AAEA,SAAOQ,SAAS,GAAGV,SAAS,GAAGC,IAAf,GAAsBA,IAAtC;AACA;;AAED,eAAeH,WAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEffect, useState } from '@wordpress/element';\n\n/**\n * A custom hook that calculates a step value (used by elements like input\n * [type=\"number\"]). This value can be modified based on whether the Shift\n * key is being held down.\n *\n * For example, a shiftStep of 10, and a step of 1...\n * Starting from 10, the next incremented value will be 11.\n *\n * Holding down shift...\n * Starting from 10, the next incremented value will be 20.\n *\n * @param {Object}  props                           Properties for the hook.\n * @param {boolean} [props.isShiftStepEnabled=true] Determines if jumping values with shift is enabled\n * @param {number}  [props.shiftStep=10]            Multiplier to jump by, when holding shift key.\n * @param {number}  [props.step=1]                  Multiplier to jump by, when not-holding shift key.\n *\n * @return {number} The jump step value.\n */\nfunction useJumpStep( {\n\tisShiftStepEnabled = true,\n\tshiftStep = 10,\n\tstep = 1,\n} ) {\n\tconst [ isShiftKey, setIsShiftKey ] = useState( false );\n\n\tuseEffect( () => {\n\t\t/** @type {(event: KeyboardEvent)=>void} */\n\t\tconst handleShiftKeyToggle = ( event ) => {\n\t\t\tsetIsShiftKey( event.shiftKey );\n\t\t};\n\n\t\twindow.addEventListener( 'keydown', handleShiftKeyToggle );\n\t\twindow.addEventListener( 'keyup', handleShiftKeyToggle );\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener( 'keydown', handleShiftKeyToggle );\n\t\t\twindow.removeEventListener( 'keyup', handleShiftKeyToggle );\n\t\t};\n\t}, [] );\n\n\tconst isEnabled = isShiftStepEnabled && isShiftKey;\n\n\treturn isEnabled ? shiftStep * step : step;\n}\n\nexport default useJumpStep;\n"]}