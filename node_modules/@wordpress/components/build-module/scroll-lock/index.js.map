{"version":3,"sources":["@wordpress/components/src/scroll-lock/index.js"],"names":["useEffect","previousScrollTop","setLocked","locked","scrollingElement","document","body","scrollTop","methodName","classList","documentElement","lockCounter","ScrollLock"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,oBAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,iBAAiB,GAAG,CAAxB;AAEA;AACA;AACA;;AACA,SAASC,SAAT,CAAoBC,MAApB,EAA6B;AAC5B,QAAMC,gBAAgB,GAAGC,QAAQ,CAACD,gBAAT,IAA6BC,QAAQ,CAACC,IAA/D;;AAEA,MAAKH,MAAL,EAAc;AACbF,IAAAA,iBAAiB,GAAGG,gBAAgB,CAACG,SAArC;AACA;;AAED,QAAMC,UAAU,GAAGL,MAAM,GAAG,KAAH,GAAW,QAApC;AACAC,EAAAA,gBAAgB,CAACK,SAAjB,CAA4BD,UAA5B,EAA0C,YAA1C,EAR4B,CAU5B;;AACAH,EAAAA,QAAQ,CAACK,eAAT,CAAyBD,SAAzB,CAAoCD,UAApC,EAAkD,YAAlD;;AAEA,MAAK,CAAEL,MAAP,EAAgB;AACfC,IAAAA,gBAAgB,CAACG,SAAjB,GAA6BN,iBAA7B;AACA;AACD;;AAED,IAAIU,WAAW,GAAG,CAAlB;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,UAAT,GAAsB;AACpCZ,EAAAA,SAAS,CAAE,MAAM;AAChB,QAAKW,WAAW,KAAK,CAArB,EAAyB;AACxBT,MAAAA,SAAS,CAAE,IAAF,CAAT;AACA;;AAED,MAAES,WAAF;AAEA,WAAO,MAAM;AACZ,UAAKA,WAAW,KAAK,CAArB,EAAyB;AACxBT,QAAAA,SAAS,CAAE,KAAF,CAAT;AACA;;AAED,QAAES,WAAF;AACA,KAND;AAOA,GAdQ,EAcN,EAdM,CAAT;AAgBA,SAAO,IAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEffect } from '@wordpress/element';\n\n/*\n * Setting `overflow: hidden` on html and body elements resets body scroll in iOS.\n * Save scroll top so we can restore it after locking scroll.\n *\n * NOTE: It would be cleaner and possibly safer to find a localized solution such\n * as preventing default on certain touchmove events.\n */\nlet previousScrollTop = 0;\n\n/**\n * @param {boolean} locked\n */\nfunction setLocked( locked ) {\n\tconst scrollingElement = document.scrollingElement || document.body;\n\n\tif ( locked ) {\n\t\tpreviousScrollTop = scrollingElement.scrollTop;\n\t}\n\n\tconst methodName = locked ? 'add' : 'remove';\n\tscrollingElement.classList[ methodName ]( 'lockscroll' );\n\n\t// Adding the class to the document element seems to be necessary in iOS.\n\tdocument.documentElement.classList[ methodName ]( 'lockscroll' );\n\n\tif ( ! locked ) {\n\t\tscrollingElement.scrollTop = previousScrollTop;\n\t}\n}\n\nlet lockCounter = 0;\n\n/**\n * A component that will lock scrolling when it is mounted and unlock scrolling when it is unmounted.\n *\n * @return {null} Render nothing.\n */\nexport default function ScrollLock() {\n\tuseEffect( () => {\n\t\tif ( lockCounter === 0 ) {\n\t\t\tsetLocked( true );\n\t\t}\n\n\t\t++lockCounter;\n\n\t\treturn () => {\n\t\t\tif ( lockCounter === 1 ) {\n\t\t\t\tsetLocked( false );\n\t\t\t}\n\n\t\t\t--lockCounter;\n\t\t};\n\t}, [] );\n\n\treturn null;\n}\n"]}