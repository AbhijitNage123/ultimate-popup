{"version":3,"sources":["@wordpress/components/src/slot-fill/provider.js"],"names":["without","Component","SlotFillContext","SlotFillProvider","constructor","arguments","registerSlot","bind","registerFill","unregisterSlot","unregisterFill","getSlot","getFills","hasFills","subscribe","slots","fills","listeners","contextValue","name","slot","previousSlot","triggerListeners","forceUpdateSlot","forceUpdate","instance","slotInstance","length","forEach","listener","push","render","props","children"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { without } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport SlotFillContext from './context';\n\nexport default class SlotFillProvider extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.registerSlot = this.registerSlot.bind( this );\n\t\tthis.registerFill = this.registerFill.bind( this );\n\t\tthis.unregisterSlot = this.unregisterSlot.bind( this );\n\t\tthis.unregisterFill = this.unregisterFill.bind( this );\n\t\tthis.getSlot = this.getSlot.bind( this );\n\t\tthis.getFills = this.getFills.bind( this );\n\t\tthis.hasFills = this.hasFills.bind( this );\n\t\tthis.subscribe = this.subscribe.bind( this );\n\n\t\tthis.slots = {};\n\t\tthis.fills = {};\n\t\tthis.listeners = [];\n\t\tthis.contextValue = {\n\t\t\tregisterSlot: this.registerSlot,\n\t\t\tunregisterSlot: this.unregisterSlot,\n\t\t\tregisterFill: this.registerFill,\n\t\t\tunregisterFill: this.unregisterFill,\n\t\t\tgetSlot: this.getSlot,\n\t\t\tgetFills: this.getFills,\n\t\t\thasFills: this.hasFills,\n\t\t\tsubscribe: this.subscribe,\n\t\t};\n\t}\n\n\tregisterSlot( name, slot ) {\n\t\tconst previousSlot = this.slots[ name ];\n\t\tthis.slots[ name ] = slot;\n\t\tthis.triggerListeners();\n\n\t\t// Sometimes the fills are registered after the initial render of slot\n\t\t// But before the registerSlot call, we need to rerender the slot\n\t\tthis.forceUpdateSlot( name );\n\n\t\t// If a new instance of a slot is being mounted while another with the\n\t\t// same name exists, force its update _after_ the new slot has been\n\t\t// assigned into the instance, such that its own rendering of children\n\t\t// will be empty (the new Slot will subsume all fills for this name).\n\t\tif ( previousSlot ) {\n\t\t\tpreviousSlot.forceUpdate();\n\t\t}\n\t}\n\n\tregisterFill( name, instance ) {\n\t\tthis.fills[ name ] = [ ...( this.fills[ name ] || [] ), instance ];\n\t\tthis.forceUpdateSlot( name );\n\t}\n\n\tunregisterSlot( name, instance ) {\n\t\t// If a previous instance of a Slot by this name unmounts, do nothing,\n\t\t// as the slot and its fills should only be removed for the current\n\t\t// known instance.\n\t\tif ( this.slots[ name ] !== instance ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete this.slots[ name ];\n\t\tthis.triggerListeners();\n\t}\n\n\tunregisterFill( name, instance ) {\n\t\tthis.fills[ name ] = without( this.fills[ name ], instance );\n\t\tthis.forceUpdateSlot( name );\n\t}\n\n\tgetSlot( name ) {\n\t\treturn this.slots[ name ];\n\t}\n\n\tgetFills( name, slotInstance ) {\n\t\t// Fills should only be returned for the current instance of the slot\n\t\t// in which they occupy.\n\t\tif ( this.slots[ name ] !== slotInstance ) {\n\t\t\treturn [];\n\t\t}\n\t\treturn this.fills[ name ];\n\t}\n\n\thasFills( name ) {\n\t\treturn this.fills[ name ] && !! this.fills[ name ].length;\n\t}\n\n\tforceUpdateSlot( name ) {\n\t\tconst slot = this.getSlot( name );\n\n\t\tif ( slot ) {\n\t\t\tslot.forceUpdate();\n\t\t}\n\t}\n\n\ttriggerListeners() {\n\t\tthis.listeners.forEach( ( listener ) => listener() );\n\t}\n\n\tsubscribe( listener ) {\n\t\tthis.listeners.push( listener );\n\n\t\treturn () => {\n\t\t\tthis.listeners = without( this.listeners, listener );\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<SlotFillContext.Provider value={ this.contextValue }>\n\t\t\t\t{ this.props.children }\n\t\t\t</SlotFillContext.Provider>\n\t\t);\n\t}\n}\n"]}