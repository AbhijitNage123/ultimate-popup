{"version":3,"sources":["@wordpress/components/src/slot-fill/bubbles-virtually/slot.js"],"names":["useRef","useLayoutEffect","useContext","forwardRef","useMergeRefs","SlotFillContext","Slot","name","fillProps","as","Component","props","forwardedRef","registry","ref","registerSlot","unregisterSlot","updateSlot"],"mappings":";;;AAAA;AACA;AACA;AACA,SACCA,MADD,EAECC,eAFD,EAGCC,UAHD,EAICC,UAJD,QAKO,oBALP;AAMA,SAASC,YAAT,QAA6B,oBAA7B;AAEA;AACA;AACA;;AACA,OAAOC,eAAP,MAA4B,qBAA5B;;AAEA,SAASC,IAAT,CACC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAS,GAAG,EAApB;AAAwBC,EAAAA,EAAE,EAAEC,SAAS,GAAG,KAAxC;AAA+C,KAAGC;AAAlD,CADD,EAECC,YAFD,EAGE;AACD,QAAMC,QAAQ,GAAGX,UAAU,CAAEG,eAAF,CAA3B;AACA,QAAMS,GAAG,GAAGd,MAAM,EAAlB;AAEAC,EAAAA,eAAe,CAAE,MAAM;AACtBY,IAAAA,QAAQ,CAACE,YAAT,CAAuBR,IAAvB,EAA6BO,GAA7B,EAAkCN,SAAlC;AACA,WAAO,MAAM;AACZK,MAAAA,QAAQ,CAACG,cAAT,CAAyBT,IAAzB,EAA+BO,GAA/B;AACA,KAFD,CAFsB,CAKtB;AACA;AACA;AACA;AACA,GATc,EASZ,CAAED,QAAQ,CAACE,YAAX,EAAyBF,QAAQ,CAACG,cAAlC,EAAkDT,IAAlD,CATY,CAAf,CAJC,CAeD;AACA;;AACAN,EAAAA,eAAe,CAAE,MAAM;AACtBY,IAAAA,QAAQ,CAACI,UAAT,CAAqBV,IAArB,EAA2BC,SAA3B;AACA,GAFc,CAAf;AAIA,SACC,cAAC,SAAD;AAAW,IAAA,GAAG,EAAGJ,YAAY,CAAE,CAAEQ,YAAF,EAAgBE,GAAhB,CAAF;AAA7B,KAA8DH,KAA9D,EADD;AAGA;;AAED,eAAeR,UAAU,CAAEG,IAAF,CAAzB","sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tuseRef,\n\tuseLayoutEffect,\n\tuseContext,\n\tforwardRef,\n} from '@wordpress/element';\nimport { useMergeRefs } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport SlotFillContext from './slot-fill-context';\n\nfunction Slot(\n\t{ name, fillProps = {}, as: Component = 'div', ...props },\n\tforwardedRef\n) {\n\tconst registry = useContext( SlotFillContext );\n\tconst ref = useRef();\n\n\tuseLayoutEffect( () => {\n\t\tregistry.registerSlot( name, ref, fillProps );\n\t\treturn () => {\n\t\t\tregistry.unregisterSlot( name, ref );\n\t\t};\n\t\t// We are not including fillProps in the deps because we don't want to\n\t\t// unregister and register the slot whenever fillProps change, which would\n\t\t// cause the fill to be re-mounted. We are only considering the initial value\n\t\t// of fillProps.\n\t}, [ registry.registerSlot, registry.unregisterSlot, name ] );\n\n\t// fillProps may be an update that interacts with the layout, so we\n\t// useLayoutEffect\n\tuseLayoutEffect( () => {\n\t\tregistry.updateSlot( name, fillProps );\n\t} );\n\n\treturn (\n\t\t<Component ref={ useMergeRefs( [ forwardedRef, ref ] ) } { ...props } />\n\t);\n}\n\nexport default forwardRef( Slot );\n"]}