import _styled from "@emotion/styled/base";

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

/**
 * External dependencies
 */
import { css } from '@emotion/react';

/**
 * Internal dependencies
 */
import NumberControl from '../../number-control';
import { COLORS, reduceMotion, rtl } from '../../utils';
import { space } from '../../ui/utils/space';

var _ref3 = process.env.NODE_ENV === "production" ? {
  name: "b1qlpp",
  styles: "height:30px;min-height:30px"
} : {
  name: "7gitvl-rangeHeight",
  styles: "height:30px;min-height:30px;label:rangeHeight;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

const rangeHeight = () => _ref3;

const thumbSize = 20;
export const Root = _styled("div", process.env.NODE_ENV === "production" ? {
  target: "exqw8y214"
} : {
  target: "exqw8y214",
  label: "Root"
})(process.env.NODE_ENV === "production" ? {
  name: "17z6zai",
  styles: "-webkit-tap-highlight-color:transparent;box-sizing:border-box;align-items:flex-start;display:inline-flex;justify-content:flex-start;padding:0;position:relative;touch-action:none;width:100%"
} : {
  name: "17z6zai",
  styles: "-webkit-tap-highlight-color:transparent;box-sizing:border-box;align-items:flex-start;display:inline-flex;justify-content:flex-start;padding:0;position:relative;touch-action:none;width:100%",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

const wrapperColor = ({
  color: colorProp = COLORS.ui.borderFocus
}) => {
  return /*#__PURE__*/css({
    color: colorProp
  }, process.env.NODE_ENV === "production" ? "" : ";label:wrapperColor;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

const wrapperMargin = ({
  marks
}) => /*#__PURE__*/css({
  marginBottom: marks ? 16 : null
}, process.env.NODE_ENV === "production" ? "" : ";label:wrapperMargin;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");

export const Wrapper = _styled("div", process.env.NODE_ENV === "production" ? {
  target: "exqw8y213"
} : {
  target: "exqw8y213",
  label: "Wrapper"
})("box-sizing:border-box;color:", COLORS.blue.medium.focus, ";display:block;flex:1;padding-top:15px;position:relative;width:100%;", wrapperColor, ";", rangeHeight, ";", wrapperMargin, ";", rtl({
  marginLeft: 10
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
export const BeforeIconWrapper = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y212"
} : {
  target: "exqw8y212",
  label: "BeforeIconWrapper"
})("margin-top:3px;", rtl({
  marginRight: 6
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
export const AfterIconWrapper = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y211"
} : {
  target: "exqw8y211",
  label: "AfterIconWrapper"
})("margin-top:3px;", rtl({
  marginLeft: 16
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));

const railBackgroundColor = ({
  disabled,
  railColor
}) => {
  let background = railColor || null;

  if (disabled) {
    background = COLORS.lightGray[400];
  }

  return /*#__PURE__*/css({
    background
  }, process.env.NODE_ENV === "production" ? "" : ";label:railBackgroundColor;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

export const Rail = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y210"
} : {
  target: "exqw8y210",
  label: "Rail"
})("background-color:", COLORS.lightGray[600], ";box-sizing:border-box;left:0;pointer-events:none;right:0;display:block;height:3px;position:absolute;margin-top:14px;top:0;", railBackgroundColor, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));

const trackBackgroundColor = ({
  disabled,
  trackColor
}) => {
  let background = trackColor || 'currentColor';

  if (disabled) {
    background = COLORS.lightGray[800];
  }

  return /*#__PURE__*/css({
    background
  }, process.env.NODE_ENV === "production" ? "" : ";label:trackBackgroundColor;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

export const Track = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y29"
} : {
  target: "exqw8y29",
  label: "Track"
})("background-color:currentColor;border-radius:1px;box-sizing:border-box;height:3px;pointer-events:none;display:block;position:absolute;margin-top:14px;top:0;", trackBackgroundColor, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
export const MarksWrapper = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y28"
} : {
  target: "exqw8y28",
  label: "MarksWrapper"
})(process.env.NODE_ENV === "production" ? {
  name: "1xuuvmv",
  styles: "box-sizing:border-box;display:block;pointer-events:none;position:relative;width:100%;user-select:none"
} : {
  name: "1xuuvmv",
  styles: "box-sizing:border-box;display:block;pointer-events:none;position:relative;width:100%;user-select:none",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

const markFill = ({
  disabled,
  isFilled
}) => {
  let backgroundColor = isFilled ? 'currentColor' : COLORS.lightGray[600];

  if (disabled) {
    backgroundColor = COLORS.lightGray[800];
  }

  return /*#__PURE__*/css({
    backgroundColor
  }, process.env.NODE_ENV === "production" ? "" : ";label:markFill;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

export const Mark = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y27"
} : {
  target: "exqw8y27",
  label: "Mark"
})("box-sizing:border-box;height:9px;left:0;position:absolute;top:-4px;width:1px;", markFill, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));

const markLabelFill = ({
  isFilled
}) => {
  return /*#__PURE__*/css({
    color: isFilled ? COLORS.darkGray[300] : COLORS.lightGray[600]
  }, process.env.NODE_ENV === "production" ? "" : ";label:markLabelFill;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvcmFuZ2UtY29udHJvbC9zdHlsZXMvcmFuZ2UtY29udHJvbC1zdHlsZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0pRIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvcmFuZ2UtY29udHJvbC9zdHlsZXMvcmFuZ2UtY29udHJvbC1zdHlsZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCBOdW1iZXJDb250cm9sIGZyb20gJy4uLy4uL251bWJlci1jb250cm9sJztcbmltcG9ydCB7IENPTE9SUywgcmVkdWNlTW90aW9uLCBydGwgfSBmcm9tICcuLi8uLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uLy4uL3VpL3V0aWxzL3NwYWNlJztcblxuY29uc3QgcmFuZ2VIZWlnaHQgPSAoKSA9PiBjc3MoIHsgaGVpZ2h0OiAzMCwgbWluSGVpZ2h0OiAzMCB9ICk7XG5jb25zdCB0aHVtYlNpemUgPSAyMDtcblxuZXhwb3J0IGNvbnN0IFJvb3QgPSBzdHlsZWQuZGl2YFxuXHQtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRhbGlnbi1pdGVtczogZmxleC1zdGFydDtcblx0ZGlzcGxheTogaW5saW5lLWZsZXg7XG5cdGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcblx0cGFkZGluZzogMDtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHR0b3VjaC1hY3Rpb246IG5vbmU7XG5cdHdpZHRoOiAxMDAlO1xuYDtcblxuY29uc3Qgd3JhcHBlckNvbG9yID0gKCB7IGNvbG9yOiBjb2xvclByb3AgPSBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfSApID0+IHtcblx0cmV0dXJuIGNzcyggeyBjb2xvcjogY29sb3JQcm9wIH0gKTtcbn07XG5jb25zdCB3cmFwcGVyTWFyZ2luID0gKCB7IG1hcmtzIH0gKSA9PlxuXHRjc3MoIHsgbWFyZ2luQm90dG9tOiBtYXJrcyA/IDE2IDogbnVsbCB9ICk7XG5cbmV4cG9ydCBjb25zdCBXcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0Y29sb3I6ICR7IENPTE9SUy5ibHVlLm1lZGl1bS5mb2N1cyB9O1xuXHRkaXNwbGF5OiBibG9jaztcblx0ZmxleDogMTtcblx0cGFkZGluZy10b3A6IDE1cHg7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0d2lkdGg6IDEwMCU7XG5cblx0JHsgd3JhcHBlckNvbG9yIH07XG5cdCR7IHJhbmdlSGVpZ2h0IH07XG5cdCR7IHdyYXBwZXJNYXJnaW4gfTtcblxuXHQkeyBydGwoIHsgbWFyZ2luTGVmdDogMTAgfSApIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBCZWZvcmVJY29uV3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRtYXJnaW4tdG9wOiAzcHg7XG5cblx0JHsgcnRsKCB7IG1hcmdpblJpZ2h0OiA2IH0gKSB9XG5gO1xuXG5leHBvcnQgY29uc3QgQWZ0ZXJJY29uV3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRtYXJnaW4tdG9wOiAzcHg7XG5cblx0JHsgcnRsKCB7IG1hcmdpbkxlZnQ6IDE2IH0gKSB9XG5gO1xuXG5jb25zdCByYWlsQmFja2dyb3VuZENvbG9yID0gKCB7IGRpc2FibGVkLCByYWlsQ29sb3IgfSApID0+IHtcblx0bGV0IGJhY2tncm91bmQgPSByYWlsQ29sb3IgfHwgbnVsbDtcblxuXHRpZiAoIGRpc2FibGVkICkge1xuXHRcdGJhY2tncm91bmQgPSBDT0xPUlMubGlnaHRHcmF5WyA0MDAgXTtcblx0fVxuXG5cdHJldHVybiBjc3MoIHtcblx0XHRiYWNrZ3JvdW5kLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgUmFpbCA9IHN0eWxlZC5zcGFuYFxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkeyBDT0xPUlMubGlnaHRHcmF5WyA2MDAgXSB9O1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRsZWZ0OiAwO1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cmlnaHQ6IDA7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRoZWlnaHQ6IDNweDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRtYXJnaW4tdG9wOiAxNHB4O1xuXHR0b3A6IDA7XG5cblx0JHsgcmFpbEJhY2tncm91bmRDb2xvciB9O1xuYDtcblxuY29uc3QgdHJhY2tCYWNrZ3JvdW5kQ29sb3IgPSAoIHsgZGlzYWJsZWQsIHRyYWNrQ29sb3IgfSApID0+IHtcblx0bGV0IGJhY2tncm91bmQgPSB0cmFja0NvbG9yIHx8ICdjdXJyZW50Q29sb3InO1xuXG5cdGlmICggZGlzYWJsZWQgKSB7XG5cdFx0YmFja2dyb3VuZCA9IENPTE9SUy5saWdodEdyYXlbIDgwMCBdO1xuXHR9XG5cblx0cmV0dXJuIGNzcygge1xuXHRcdGJhY2tncm91bmQsXG5cdH0gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBUcmFjayA9IHN0eWxlZC5zcGFuYFxuXHRiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG5cdGJvcmRlci1yYWRpdXM6IDFweDtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0aGVpZ2h0OiAzcHg7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRkaXNwbGF5OiBibG9jaztcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRtYXJnaW4tdG9wOiAxNHB4O1xuXHR0b3A6IDA7XG5cblx0JHsgdHJhY2tCYWNrZ3JvdW5kQ29sb3IgfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBNYXJrc1dyYXBwZXIgPSBzdHlsZWQuc3BhbmBcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0ZGlzcGxheTogYmxvY2s7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdHdpZHRoOiAxMDAlO1xuXHR1c2VyLXNlbGVjdDogbm9uZTtcbmA7XG5cbmNvbnN0IG1hcmtGaWxsID0gKCB7IGRpc2FibGVkLCBpc0ZpbGxlZCB9ICkgPT4ge1xuXHRsZXQgYmFja2dyb3VuZENvbG9yID0gaXNGaWxsZWQgPyAnY3VycmVudENvbG9yJyA6IENPTE9SUy5saWdodEdyYXlbIDYwMCBdO1xuXG5cdGlmICggZGlzYWJsZWQgKSB7XG5cdFx0YmFja2dyb3VuZENvbG9yID0gQ09MT1JTLmxpZ2h0R3JheVsgODAwIF07XG5cdH1cblxuXHRyZXR1cm4gY3NzKCB7XG5cdFx0YmFja2dyb3VuZENvbG9yLFxuXHR9ICk7XG59O1xuXG5leHBvcnQgY29uc3QgTWFyayA9IHN0eWxlZC5zcGFuYFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRoZWlnaHQ6IDlweDtcblx0bGVmdDogMDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0b3A6IC00cHg7XG5cdHdpZHRoOiAxcHg7XG5cblx0JHsgbWFya0ZpbGwgfTtcbmA7XG5cbmNvbnN0IG1hcmtMYWJlbEZpbGwgPSAoIHsgaXNGaWxsZWQgfSApID0+IHtcblx0cmV0dXJuIGNzcygge1xuXHRcdGNvbG9yOiBpc0ZpbGxlZCA/IENPTE9SUy5kYXJrR3JheVsgMzAwIF0gOiBDT0xPUlMubGlnaHRHcmF5WyA2MDAgXSxcblx0fSApO1xufTtcblxuZXhwb3J0IGNvbnN0IE1hcmtMYWJlbCA9IHN0eWxlZC5zcGFuYFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRjb2xvcjogJHsgQ09MT1JTLmxpZ2h0R3JheVsgNjAwIF0gfTtcblx0bGVmdDogMDtcblx0Zm9udC1zaXplOiAxMXB4O1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHRvcDogMTJweDtcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKCAtNTAlICk7XG5cdHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cblx0JHsgbWFya0xhYmVsRmlsbCB9O1xuYDtcblxuZXhwb3J0IGNvbnN0IFRodW1iV3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRoZWlnaHQ6ICR7IHRodW1iU2l6ZSB9cHg7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRtYXJnaW4tdG9wOiA1cHg7XG5cdG91dGxpbmU6IDA7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHRvcDogMDtcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5cdHdpZHRoOiAkeyB0aHVtYlNpemUgfXB4O1xuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiAtMTAgfSApIH1cbmA7XG5cbmNvbnN0IHRodW1iRm9jdXMgPSAoIHsgaXNGb2N1c2VkIH0gKSA9PiB7XG5cdHJldHVybiBjc3MoIHtcblx0XHRib3JkZXJDb2xvcjogaXNGb2N1c2VkID8gQ09MT1JTLnVpLmJvcmRlckZvY3VzIDogQ09MT1JTLmRhcmtHcmF5WyAyMDAgXSxcblx0XHRib3hTaGFkb3c6IGlzRm9jdXNlZFxuXHRcdFx0PyBgXG5cdFx0XHRcdDAgMCAwIDFweCAkeyBDT0xPUlMudWkuYm9yZGVyRm9jdXMgfVxuXHRcdFx0YFxuXHRcdFx0OiBgXG5cdFx0XHRcdDAgMCAwIHJnYmEoMCwgMCwgMCwgMClcblx0XHRcdGAsXG5cdH0gKTtcbn07XG5cbmV4cG9ydCBjb25zdCBUaHVtYiA9IHN0eWxlZC5zcGFuYFxuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcblx0Ym9yZGVyLXJhZGl1czogNTAlO1xuXHRib3JkZXI6IDFweCBzb2xpZCAkeyBDT0xPUlMuZGFya0dyYXlbIDIwMCBdIH07XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGhlaWdodDogMTAwJTtcblx0b3V0bGluZTogMDtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR1c2VyLXNlbGVjdDogbm9uZTtcblx0d2lkdGg6IDEwMCU7XG5cblx0JHsgdGh1bWJGb2N1cyB9O1xuYDtcblxuZXhwb3J0IGNvbnN0IElucHV0UmFuZ2UgPSBzdHlsZWQuaW5wdXRgXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGN1cnNvcjogcG9pbnRlcjtcblx0ZGlzcGxheTogYmxvY2s7XG5cdGhlaWdodDogMTAwJTtcblx0bGVmdDogMDtcblx0bWFyZ2luOiAwIC0keyB0aHVtYlNpemUgLyAyIH1weDtcblx0b3BhY2l0eTogMDtcblx0b3V0bGluZTogbm9uZTtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHRyaWdodDogMDtcblx0dG9wOiAwO1xuXHR3aWR0aDogY2FsYyggMTAwJSArICR7IHRodW1iU2l6ZSB9cHggKTtcbmA7XG5cbmNvbnN0IHRvb2x0aXBTaG93ID0gKCB7IHNob3cgfSApID0+IHtcblx0cmV0dXJuIGNzcygge1xuXHRcdG9wYWNpdHk6IHNob3cgPyAxIDogMCxcblx0fSApO1xufTtcblxuY29uc3QgdG9vbHRpcFBvc2l0aW9uID0gKCB7IHBvc2l0aW9uIH0gKSA9PiB7XG5cdGNvbnN0IGlzVG9wID0gcG9zaXRpb24gPT09ICd0b3AnO1xuXG5cdGlmICggaXNUb3AgKSB7XG5cdFx0cmV0dXJuIGNzc2Bcblx0XHRcdHRvcDogLTgwJTtcblx0XHRgO1xuXHR9XG5cblx0cmV0dXJuIGNzc2Bcblx0XHRib3R0b206IC04MCU7XG5cdGA7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbHRpcCA9IHN0eWxlZC5zcGFuYFxuXHRiYWNrZ3JvdW5kOiAkeyBDT0xPUlMudWkuYm9yZGVyIH07XG5cdGJvcmRlci1yYWRpdXM6IDJweDtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0Y29sb3I6IHdoaXRlO1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdGZvbnQtc2l6ZTogMTJweDtcblx0bWluLXdpZHRoOiAzMnB4O1xuXHRvcGFjaXR5OiAwO1xuXHRwYWRkaW5nOiA0cHggOHB4O1xuXHRwb2ludGVyLWV2ZW50czogbm9uZTtcblx0cG9zaXRpb246IGFic29sdXRlO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdHRyYW5zaXRpb246IG9wYWNpdHkgMTIwbXMgZWFzZTtcblx0dXNlci1zZWxlY3Q6IG5vbmU7XG5cdGxpbmUtaGVpZ2h0OiAxLjQ7XG5cblx0JHsgdG9vbHRpcFNob3cgfTtcblx0JHsgdG9vbHRpcFBvc2l0aW9uIH07XG5cdCR7IHJlZHVjZU1vdGlvbiggJ3RyYW5zaXRpb24nICkgfTtcblx0JHsgcnRsKFxuXHRcdHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgtNTAlKScgfSxcblx0XHR7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoNTAlKScgfVxuXHQpIH1cbmA7XG5cbi8vIEB0b2RvOiBSZWZhY3RvciBSYW5nZUNvbnRyb2wgd2l0aCBsYXRlc3QgSFN0YWNrIGNvbmZpZ3VyYXRpb25cbi8vIEB3b3JkcHJlc3MvY29tcG9uZW50cy91aS9oc3RhY2tcbmV4cG9ydCBjb25zdCBJbnB1dE51bWJlciA9IHN0eWxlZCggTnVtYmVyQ29udHJvbCApYFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdGZvbnQtc2l6ZTogMTNweDtcblx0bWFyZ2luLXRvcDogMDtcblx0d2lkdGg6ICR7IHNwYWNlKCAxNiApIH0gIWltcG9ydGFudDtcblxuXHRpbnB1dFt0eXBlPSdudW1iZXInXSYge1xuXHRcdCR7IHJhbmdlSGVpZ2h0IH07XG5cdH1cblxuXHQkeyBydGwoIHsgbWFyZ2luTGVmdDogYCR7IHNwYWNlKCA0ICkgfSAhaW1wb3J0YW50YCB9ICkgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEFjdGlvblJpZ2h0V3JhcHBlciA9IHN0eWxlZC5zcGFuYFxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRkaXNwbGF5OiBibG9jaztcblx0bWFyZ2luLXRvcDogMDtcblxuXHRidXR0b24sXG5cdGJ1dHRvbi5pcy1zbWFsbCB7XG5cdFx0bWFyZ2luLWxlZnQ6IDA7XG5cdFx0JHsgcmFuZ2VIZWlnaHQgfTtcblx0fVxuXG5cdCR7IHJ0bCggeyBtYXJnaW5MZWZ0OiA4IH0gKSB9XG5gO1xuIl19 */");
};

export const MarkLabel = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y26"
} : {
  target: "exqw8y26",
  label: "MarkLabel"
})("box-sizing:border-box;color:", COLORS.lightGray[600], ";left:0;font-size:11px;position:absolute;top:12px;transform:translateX( -50% );white-space:nowrap;", markLabelFill, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
export const ThumbWrapper = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y25"
} : {
  target: "exqw8y25",
  label: "ThumbWrapper"
})("align-items:center;box-sizing:border-box;display:flex;height:", thumbSize, "px;justify-content:center;margin-top:5px;outline:0;pointer-events:none;position:absolute;top:0;user-select:none;width:", thumbSize, "px;", rtl({
  marginLeft: -10
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));

const thumbFocus = ({
  isFocused
}) => {
  return /*#__PURE__*/css({
    borderColor: isFocused ? COLORS.ui.borderFocus : COLORS.darkGray[200],
    boxShadow: isFocused ? `
				0 0 0 1px ${COLORS.ui.borderFocus}
			` : `
				0 0 0 rgba(0, 0, 0, 0)
			`
  }, process.env.NODE_ENV === "production" ? "" : ";label:thumbFocus;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

export const Thumb = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y24"
} : {
  target: "exqw8y24",
  label: "Thumb"
})("align-items:center;background-color:white;border-radius:50%;border:1px solid ", COLORS.darkGray[200], ";box-sizing:border-box;height:100%;outline:0;position:absolute;user-select:none;width:100%;", thumbFocus, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
export const InputRange = _styled("input", process.env.NODE_ENV === "production" ? {
  target: "exqw8y23"
} : {
  target: "exqw8y23",
  label: "InputRange"
})("box-sizing:border-box;cursor:pointer;display:block;height:100%;left:0;margin:0 -", thumbSize / 2, "px;opacity:0;outline:none;position:absolute;right:0;top:0;width:calc( 100% + ", thumbSize, "px );" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));

const tooltipShow = ({
  show
}) => {
  return /*#__PURE__*/css({
    opacity: show ? 1 : 0
  }, process.env.NODE_ENV === "production" ? "" : ";label:tooltipShow;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};

var _ref = process.env.NODE_ENV === "production" ? {
  name: "1lr98c4",
  styles: "bottom:-80%"
} : {
  name: "848kg9-tooltipPosition",
  styles: "bottom:-80%;label:tooltipPosition;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var _ref2 = process.env.NODE_ENV === "production" ? {
  name: "1cypxip",
  styles: "top:-80%"
} : {
  name: "e8g0c9-tooltipPosition",
  styles: "top:-80%;label:tooltipPosition;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

const tooltipPosition = ({
  position
}) => {
  const isTop = position === 'top';

  if (isTop) {
    return _ref2;
  }

  return _ref;
};

export const Tooltip = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y22"
} : {
  target: "exqw8y22",
  label: "Tooltip"
})("background:", COLORS.ui.border, ";border-radius:2px;box-sizing:border-box;color:white;display:inline-block;font-size:12px;min-width:32px;opacity:0;padding:4px 8px;pointer-events:none;position:absolute;text-align:center;transition:opacity 120ms ease;user-select:none;line-height:1.4;", tooltipShow, ";", tooltipPosition, ";", reduceMotion('transition'), ";", rtl({
  transform: 'translateX(-50%)'
}, {
  transform: 'translateX(50%)'
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")); // @todo: Refactor RangeControl with latest HStack configuration
// @wordpress/components/ui/hstack

export const InputNumber = /*#__PURE__*/_styled(NumberControl, process.env.NODE_ENV === "production" ? {
  target: "exqw8y21"
} : {
  target: "exqw8y21",
  label: "InputNumber"
})("box-sizing:border-box;display:inline-block;font-size:13px;margin-top:0;width:", space(16), "!important;input[type='number']&{", rangeHeight, ";}", rtl({
  marginLeft: `${space(4)} !important`
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
export const ActionRightWrapper = _styled("span", process.env.NODE_ENV === "production" ? {
  target: "exqw8y20"
} : {
  target: "exqw8y20",
  label: "ActionRightWrapper"
})("box-sizing:border-box;display:block;margin-top:0;button,button.is-small{margin-left:0;", rangeHeight, ";}", rtl({
  marginLeft: 8
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));
//# sourceMappingURL=range-control-styles.js.map