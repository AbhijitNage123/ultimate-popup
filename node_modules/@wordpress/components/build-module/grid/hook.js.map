{"version":3,"sources":["@wordpress/components/src/grid/hook.js"],"names":["css","cx","useMemo","useContextSystem","getAlignmentProps","useResponsiveValue","CONFIG","useGrid","props","align","alignment","className","columnGap","columns","gap","isInline","justify","rowGap","rows","templateColumns","templateRows","otherProps","columnsAsArray","Array","isArray","column","rowsAsArray","row","gridTemplateColumns","gridTemplateRows","classes","alignmentProps","gridClasses","alignItems","display","gridBase","undefined","gridRowGap","gridColumnGap","justifyContent","verticalAlign"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAT,EAAcC,EAAd,QAAwB,cAAxB;AAEA;AACA;AACA;;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA;AACA;AACA;;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,SAASC,iBAAT,QAAkC,SAAlC;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA;AACA;AACA;;AACA,eAAe,SAASC,OAAT,CAAkBC,KAAlB,EAA0B;AACxC,QAAM;AACLC,IAAAA,KADK;AAELC,IAAAA,SAFK;AAGLC,IAAAA,SAHK;AAILC,IAAAA,SAJK;AAKLC,IAAAA,OAAO,GAAG,CALL;AAMLC,IAAAA,GAAG,GAAG,CAND;AAOLC,IAAAA,QAAQ,GAAG,KAPN;AAQLC,IAAAA,OARK;AASLC,IAAAA,MATK;AAULC,IAAAA,IAVK;AAWLC,IAAAA,eAXK;AAYLC,IAAAA,YAZK;AAaL,OAAGC;AAbE,MAcFlB,gBAAgB,CAAEK,KAAF,EAAS,MAAT,CAdpB;AAgBA,QAAMc,cAAc,GAAGC,KAAK,CAACC,OAAN,CAAeX,OAAf,IAA2BA,OAA3B,GAAqC,CAAEA,OAAF,CAA5D;AACA,QAAMY,MAAM,GAAGpB,kBAAkB,CAAEiB,cAAF,CAAjC;AACA,QAAMI,WAAW,GAAGH,KAAK,CAACC,OAAN,CAAeN,IAAf,IAAwBA,IAAxB,GAA+B,CAAEA,IAAF,CAAnD;AACA,QAAMS,GAAG,GAAGtB,kBAAkB,CAAEqB,WAAF,CAA9B;AAEA,QAAME,mBAAmB,GACxBT,eAAe,IAAM,CAAC,CAAEN,OAAH,IAAe,WAAWY,MAAQ,SADxD;AAEA,QAAMI,gBAAgB,GACrBT,YAAY,IAAM,CAAC,CAAEF,IAAH,IAAY,WAAWS,GAAK,SAD/C;AAGA,QAAMG,OAAO,GAAG5B,OAAO,CAAE,MAAM;AAC9B,UAAM6B,cAAc,GAAG3B,iBAAiB,CAAEM,SAAF,CAAxC;AAEA,UAAMsB,WAAW,gBAAGhC,GAAG,CAAE;AACxBiC,MAAAA,UAAU,EAAExB,KADY;AAExByB,MAAAA,OAAO,EAAEnB,QAAQ,GAAG,aAAH,GAAmB,MAFZ;AAGxBD,MAAAA,GAAG,EAAG,SAASR,MAAM,CAAC6B,QAAU,MAAMrB,GAAK,IAHnB;AAIxBc,MAAAA,mBAAmB,EAAEA,mBAAmB,IAAIQ,SAJpB;AAKxBP,MAAAA,gBAAgB,EAAEA,gBAAgB,IAAIO,SALd;AAMxBC,MAAAA,UAAU,EAAEpB,MANY;AAOxBqB,MAAAA,aAAa,EAAE1B,SAPS;AAQxB2B,MAAAA,cAAc,EAAEvB,OARQ;AASxBwB,MAAAA,aAAa,EAAEzB,QAAQ,GAAG,QAAH,GAAcqB,SATb;AAUxB,SAAGL;AAVqB,KAAF,i9GAAvB;AAaA,WAAO9B,EAAE,CAAE+B,WAAF,EAAerB,SAAf,CAAT;AACA,GAjBsB,EAiBpB,CACFF,KADE,EAEFC,SAFE,EAGFC,SAHE,EAIFC,SAJE,EAKFE,GALE,EAMFc,mBANE,EAOFC,gBAPE,EAQFd,QARE,EASFC,OATE,EAUFC,MAVE,CAjBoB,CAAvB;AA8BA,SAAO,EAAE,GAAGI,UAAL;AAAiBV,IAAAA,SAAS,EAAEmB;AAA5B,GAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\n// Disable reason: Temporarily disable for existing usages\n// until we remove them as part of https://github.com/WordPress/gutenberg/issues/30503#deprecating-emotion-css\n// eslint-disable-next-line no-restricted-imports\nimport { css, cx } from '@emotion/css';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { useContextSystem } from '../ui/context';\nimport { getAlignmentProps } from './utils';\nimport { useResponsiveValue } from '../ui/utils/use-responsive-value';\nimport CONFIG from '../utils/config-values';\n\n/**\n * @param {import('../ui/context').PolymorphicComponentProps<import('./types').Props, 'div'>} props\n */\nexport default function useGrid( props ) {\n\tconst {\n\t\talign,\n\t\talignment,\n\t\tclassName,\n\t\tcolumnGap,\n\t\tcolumns = 2,\n\t\tgap = 3,\n\t\tisInline = false,\n\t\tjustify,\n\t\trowGap,\n\t\trows,\n\t\ttemplateColumns,\n\t\ttemplateRows,\n\t\t...otherProps\n\t} = useContextSystem( props, 'Grid' );\n\n\tconst columnsAsArray = Array.isArray( columns ) ? columns : [ columns ];\n\tconst column = useResponsiveValue( columnsAsArray );\n\tconst rowsAsArray = Array.isArray( rows ) ? rows : [ rows ];\n\tconst row = useResponsiveValue( rowsAsArray );\n\n\tconst gridTemplateColumns =\n\t\ttemplateColumns || ( !! columns && `repeat( ${ column }, 1fr )` );\n\tconst gridTemplateRows =\n\t\ttemplateRows || ( !! rows && `repeat( ${ row }, 1fr )` );\n\n\tconst classes = useMemo( () => {\n\t\tconst alignmentProps = getAlignmentProps( alignment );\n\n\t\tconst gridClasses = css( {\n\t\t\talignItems: align,\n\t\t\tdisplay: isInline ? 'inline-grid' : 'grid',\n\t\t\tgap: `calc( ${ CONFIG.gridBase } * ${ gap } )`,\n\t\t\tgridTemplateColumns: gridTemplateColumns || undefined,\n\t\t\tgridTemplateRows: gridTemplateRows || undefined,\n\t\t\tgridRowGap: rowGap,\n\t\t\tgridColumnGap: columnGap,\n\t\t\tjustifyContent: justify,\n\t\t\tverticalAlign: isInline ? 'middle' : undefined,\n\t\t\t...alignmentProps,\n\t\t} );\n\n\t\treturn cx( gridClasses, className );\n\t}, [\n\t\talign,\n\t\talignment,\n\t\tclassName,\n\t\tcolumnGap,\n\t\tgap,\n\t\tgridTemplateColumns,\n\t\tgridTemplateRows,\n\t\tisInline,\n\t\tjustify,\n\t\trowGap,\n\t] );\n\n\treturn { ...otherProps, className: classes };\n}\n"]}