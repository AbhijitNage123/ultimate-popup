{"version":3,"sources":["@wordpress/components/src/custom-select-control/index.js"],"names":["itemToString","item","name","stateReducer","selectedItem","type","changes","props","items","useSelect","stateChangeTypes","ToggleButtonKeyDownArrowDown","Math","min","indexOf","length","ToggleButtonKeyDownArrowUp","max","CustomSelectControl","className","hideLabelFromVision","label","options","onChange","onSelectedItemChange","value","_selectedItem","getLabelProps","getToggleButtonProps","getMenuProps","getItemProps","isOpen","highlightedIndex","initialSelectedItem","menuProps","slice","undefined","isSmall","chevronDown","map","index","key","style","check"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { useSelect } from 'downshift';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { Icon, check, chevronDown } from '@wordpress/icons';\n/**\n * Internal dependencies\n */\nimport { Button, VisuallyHidden } from '../';\n\nconst itemToString = ( item ) => item && item.name;\n// This is needed so that in Windows, where\n// the menu does not necessarily open on\n// key up/down, you can still switch between\n// options with the menu closed.\nconst stateReducer = (\n\t{ selectedItem },\n\t{ type, changes, props: { items } }\n) => {\n\tswitch ( type ) {\n\t\tcase useSelect.stateChangeTypes.ToggleButtonKeyDownArrowDown:\n\t\t\t// If we already have a selected item, try to select the next one,\n\t\t\t// without circular navigation. Otherwise, select the first item.\n\t\t\treturn {\n\t\t\t\tselectedItem:\n\t\t\t\t\titems[\n\t\t\t\t\t\tselectedItem\n\t\t\t\t\t\t\t? Math.min(\n\t\t\t\t\t\t\t\t\titems.indexOf( selectedItem ) + 1,\n\t\t\t\t\t\t\t\t\titems.length - 1\n\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t: 0\n\t\t\t\t\t],\n\t\t\t};\n\t\tcase useSelect.stateChangeTypes.ToggleButtonKeyDownArrowUp:\n\t\t\t// If we already have a selected item, try to select the previous one,\n\t\t\t// without circular navigation. Otherwise, select the last item.\n\t\t\treturn {\n\t\t\t\tselectedItem:\n\t\t\t\t\titems[\n\t\t\t\t\t\tselectedItem\n\t\t\t\t\t\t\t? Math.max( items.indexOf( selectedItem ) - 1, 0 )\n\t\t\t\t\t\t\t: items.length - 1\n\t\t\t\t\t],\n\t\t\t};\n\t\tdefault:\n\t\t\treturn changes;\n\t}\n};\nexport default function CustomSelectControl( {\n\tclassName,\n\thideLabelFromVision,\n\tlabel,\n\toptions: items,\n\tonChange: onSelectedItemChange,\n\tvalue: _selectedItem,\n} ) {\n\tconst {\n\t\tgetLabelProps,\n\t\tgetToggleButtonProps,\n\t\tgetMenuProps,\n\t\tgetItemProps,\n\t\tisOpen,\n\t\thighlightedIndex,\n\t\tselectedItem,\n\t} = useSelect( {\n\t\tinitialSelectedItem: items[ 0 ],\n\t\titems,\n\t\titemToString,\n\t\tonSelectedItemChange,\n\t\tselectedItem: _selectedItem,\n\t\tstateReducer,\n\t} );\n\n\tconst menuProps = getMenuProps( {\n\t\tclassName: 'components-custom-select-control__menu',\n\t\t'aria-hidden': ! isOpen,\n\t} );\n\t// We need this here, because the null active descendant is not\n\t// fully ARIA compliant.\n\tif (\n\t\tmenuProps[ 'aria-activedescendant' ] &&\n\t\tmenuProps[ 'aria-activedescendant' ].slice(\n\t\t\t0,\n\t\t\t'downshift-null'.length\n\t\t) === 'downshift-null'\n\t) {\n\t\tdelete menuProps[ 'aria-activedescendant' ];\n\t}\n\treturn (\n\t\t<div\n\t\t\tclassName={ classnames(\n\t\t\t\t'components-custom-select-control',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t>\n\t\t\t{ hideLabelFromVision ? (\n\t\t\t\t<VisuallyHidden as=\"label\" { ...getLabelProps() }>\n\t\t\t\t\t{ label }\n\t\t\t\t</VisuallyHidden>\n\t\t\t) : (\n\t\t\t\t/* eslint-disable-next-line jsx-a11y/label-has-associated-control, jsx-a11y/label-has-for */\n\t\t\t\t<label\n\t\t\t\t\t{ ...getLabelProps( {\n\t\t\t\t\t\tclassName: 'components-custom-select-control__label',\n\t\t\t\t\t} ) }\n\t\t\t\t>\n\t\t\t\t\t{ label }\n\t\t\t\t</label>\n\t\t\t) }\n\t\t\t<Button\n\t\t\t\t{ ...getToggleButtonProps( {\n\t\t\t\t\t// This is needed because some speech recognition software don't support `aria-labelledby`.\n\t\t\t\t\t'aria-label': label,\n\t\t\t\t\t'aria-labelledby': undefined,\n\t\t\t\t\tclassName: 'components-custom-select-control__button',\n\t\t\t\t\tisSmall: true,\n\t\t\t\t} ) }\n\t\t\t>\n\t\t\t\t{ itemToString( selectedItem ) }\n\t\t\t\t<Icon\n\t\t\t\t\ticon={ chevronDown }\n\t\t\t\t\tclassName=\"components-custom-select-control__button-icon\"\n\t\t\t\t/>\n\t\t\t</Button>\n\t\t\t<ul { ...menuProps }>\n\t\t\t\t{ isOpen &&\n\t\t\t\t\titems.map( ( item, index ) => (\n\t\t\t\t\t\t// eslint-disable-next-line react/jsx-key\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t{ ...getItemProps( {\n\t\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\t\tindex,\n\t\t\t\t\t\t\t\tkey: item.key,\n\t\t\t\t\t\t\t\tclassName: classnames(\n\t\t\t\t\t\t\t\t\titem.className,\n\t\t\t\t\t\t\t\t\t'components-custom-select-control__item',\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t'is-highlighted':\n\t\t\t\t\t\t\t\t\t\t\tindex === highlightedIndex,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tstyle: item.style,\n\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ item.name }\n\t\t\t\t\t\t\t{ item === selectedItem && (\n\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\ticon={ check }\n\t\t\t\t\t\t\t\t\tclassName=\"components-custom-select-control__item-icon\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) ) }\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n"]}