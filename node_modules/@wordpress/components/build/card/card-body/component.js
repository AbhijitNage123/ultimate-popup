"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _context = require("../../ui/context");

var _scrollable = require("../../scrollable");

var _view = require("../../view");

var _hook = require("./hook");

/**
 * Internal dependencies
 */

/**
 * @param {import('../../ui/context').PolymorphicComponentProps<import('../types').BodyProps, 'div'>} props
 * @param {import('react').Ref<any>}                                                                  forwardedRef
 */
function CardBody(props, forwardedRef) {
  const {
    isScrollable,
    ...otherProps
  } = (0, _hook.useCardBody)(props);

  if (isScrollable) {
    return (0, _element.createElement)(_scrollable.Scrollable, (0, _extends2.default)({}, otherProps, {
      ref: forwardedRef
    }));
  }

  return (0, _element.createElement)(_view.View, (0, _extends2.default)({}, otherProps, {
    ref: forwardedRef
  }));
}
/**
 * `CardBody` renders an optional content area for a `Card`.
 * Multiple `CardBody` components can be used within `Card` if needed.
 *
 * @example
 * ```jsx
 * import { Card, CardBody } from `@wordpress/components`;
 *
 * <Card>
 * 	<CardBody>
 * 		...
 * 	</CardBody>
 * </Card>
 * ```
 */


const ConnectedCardBody = (0, _context.contextConnect)(CardBody, 'CardBody');
var _default = ConnectedCardBody;
exports.default = _default;
//# sourceMappingURL=component.js.map