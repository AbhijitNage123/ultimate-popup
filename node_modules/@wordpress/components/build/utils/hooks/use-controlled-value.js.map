{"version":3,"sources":["@wordpress/components/src/utils/hooks/use-controlled-value.ts"],"names":["useControlledValue","defaultValue","onChange","value","valueProp","hasValue","initialValue","state","setState","setValue"],"mappings":";;;;;;;AAGA;;AAHA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,kBAAT,CAAkC;AACxCC,EAAAA,YADwC;AAExCC,EAAAA,QAFwC;AAGxCC,EAAAA,KAAK,EAAEC;AAHiC,CAAlC,EAIkD;AACxD,QAAMC,QAAQ,GAAG,OAAOD,SAAP,KAAqB,WAAtC;AACA,QAAME,YAAY,GAAGD,QAAQ,GAAGD,SAAH,GAAeH,YAA5C;AACA,QAAM,CAAEM,KAAF,EAASC,QAAT,IAAsB,uBAAUF,YAAV,CAA5B;AACA,QAAMH,KAAK,GAAGE,QAAQ,GAAGD,SAAH,GAAeG,KAArC;AACA,QAAME,QAAQ,GACbJ,QAAQ,IAAI,OAAOH,QAAP,KAAoB,UAAhC,GAA6CA,QAA7C,GAAwDM,QADzD;AAGA,SAAO,CAAEL,KAAF,EAASM,QAAT,CAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\n\ntype Props< T > = {\n\tdefaultValue?: T;\n\tvalue?: T;\n\tonChange?: ( value: T ) => void;\n};\n\n/**\n * Simplified and improved implementation of useControlledState.\n *\n * @param  props\n * @param  props.defaultValue\n * @param  props.value\n * @param  props.onChange\n * @return The controlled value and the value setter.\n */\nexport function useControlledValue< T >( {\n\tdefaultValue,\n\tonChange,\n\tvalue: valueProp,\n}: Props< T > ): [ T | undefined, ( value: T ) => void ] {\n\tconst hasValue = typeof valueProp !== 'undefined';\n\tconst initialValue = hasValue ? valueProp : defaultValue;\n\tconst [ state, setState ] = useState( initialValue );\n\tconst value = hasValue ? valueProp : state;\n\tconst setValue =\n\t\thasValue && typeof onChange === 'function' ? onChange : setState;\n\n\treturn [ value, setValue ];\n}\n"]}