"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _context = require("../../ui/context");

var _hook = require("./hook");

var _context2 = require("./../context");

var _view = require("../../view");

/**
 * Internal dependencies
 */

/**
 * @param {import('../../ui/context').PolymorphicComponentProps<import('../types').FlexProps, 'div'>} props
 * @param {import('react').Ref<any>}                                                                  forwardedRef
 */
function Flex(props, forwardedRef) {
  const {
    children,
    isColumn,
    ...otherProps
  } = (0, _hook.useFlex)(props);
  return (0, _element.createElement)(_context2.FlexContext.Provider, {
    value: {
      flexItemDisplay: isColumn ? 'block' : undefined
    }
  }, (0, _element.createElement)(_view.View, (0, _extends2.default)({}, otherProps, {
    ref: forwardedRef
  }), children));
}
/**
 * `Flex` is a primitive layout component that adaptively aligns child content
 * horizontally or vertically. `Flex` powers components like `HStack` and
 * `VStack`.
 *
 * `Flex` is used with any of it's two sub-components, `FlexItem` and `FlexBlock`.
 *
 * @example
 * ```jsx
 * import {
 * 	__experimentalFlex as Flex,
 * 	__experimentalFlexBlock as FlexBlock,
 * 	__experimentalFlexItem as FlexItem,
 * 	__experimentalText as Text
 * } from `@wordpress/components`;
 *
 * function Example() {
 * 	return (
 * 		<Flex>
 * 			<FlexItem>
 * 				<Text>Code</Text>
 * 			</FlexItem>
 * 			<FlexBlock>
 * 				<Text>Poetry</Text>
 * 			</FlexBlock>
 * 		</Flex>
 * 	);
 * }
 * ```
 *
 */


const ConnectedFlex = (0, _context.contextConnect)(Flex, 'Flex');
var _default = ConnectedFlex;
exports.default = _default;
//# sourceMappingURL=component.js.map