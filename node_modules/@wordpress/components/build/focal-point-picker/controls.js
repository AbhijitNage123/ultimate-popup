"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = FocalPointPickerControls;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _lodash = require("lodash");

var _i18n = require("@wordpress/i18n");

var _focalPointPickerStyle = require("./styles/focal-point-picker-style");

var _utils = require("./utils");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
const TEXTCONTROL_MIN = 0;
const TEXTCONTROL_MAX = 100;

function FocalPointPickerControls({
  onChange = _lodash.noop,
  percentages = {
    x: 0.5,
    y: 0.5
  }
}) {
  const valueX = (0, _utils.fractionToPercentage)(percentages.x);
  const valueY = (0, _utils.fractionToPercentage)(percentages.y);

  const handleOnXChange = next => {
    onChange({ ...percentages,
      x: parseInt(next) / 100
    });
  };

  const handleOnYChange = next => {
    onChange({ ...percentages,
      y: parseInt(next) / 100
    });
  };

  return (0, _element.createElement)(_focalPointPickerStyle.ControlWrapper, {
    className: "focal-point-picker__controls"
  }, (0, _element.createElement)(UnitControl, {
    label: (0, _i18n.__)('Left'),
    value: valueX,
    onChange: handleOnXChange,
    dragDirection: "e"
  }), (0, _element.createElement)(UnitControl, {
    label: (0, _i18n.__)('Top'),
    value: valueY,
    onChange: handleOnYChange,
    dragDirection: "s"
  }));
}

function UnitControl(props) {
  return (0, _element.createElement)(_focalPointPickerStyle.UnitControl, (0, _extends2.default)({
    className: "focal-point-picker__controls-position-unit-control",
    labelPosition: "side",
    max: TEXTCONTROL_MAX,
    min: TEXTCONTROL_MIN,
    unit: "%",
    units: [{
      value: '%',
      label: '%'
    }]
  }, props));
}
//# sourceMappingURL=controls.js.map