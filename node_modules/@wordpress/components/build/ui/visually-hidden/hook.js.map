{"version":3,"sources":["@wordpress/components/src/ui/visually-hidden/hook.js"],"names":["useVisuallyHidden","className","props","classes","styles","VisuallyHidden"],"mappings":";;;;;;;;;AAMA;;AAKA;;AAXA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AAGA;;AACA;;AAEA;AACA;AACA;AACO,SAASA,iBAAT,CAA4B;AAAEC,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAA5B,EAAsD;AAC5D;AACA,QAAMC,OAAO,GAAG,aACf,0DADe,EAEfF,SAFe,EAGfG,MAAM,CAACC,cAHQ,CAAhB;AAMA,SAAO;AACNJ,IAAAA,SAAS,EAAEE,OADL;AAEN,OAAGD;AAFG,GAAP;AAIA","sourcesContent":["/**\n * External dependencies\n */\n// Disable reason: Temporarily disable for existing usages\n// until we remove them as part of https://github.com/WordPress/gutenberg/issues/30503#deprecating-emotion-css\n// eslint-disable-next-line no-restricted-imports\nimport { cx } from '@emotion/css';\n\n/**\n * Internal dependencies\n */\nimport * as styles from './styles';\n\n// duplicate this for the sake of being able to export it, it'll be removed when we replace VisuallyHidden in components/src anyway\n/** @typedef {import('../context').PolymorphicComponentProps<{ children: import('react').ReactNode }, 'div'>} Props */\n\n/**\n * @param {import('../context').PolymorphicComponentProps<{ children: import('react').ReactNode }, 'div'>} props\n */\nexport function useVisuallyHidden( { className, ...props } ) {\n\t// circumvent the context system and write the classnames ourselves\n\tconst classes = cx(\n\t\t'components-visually-hidden wp-components-visually-hidden',\n\t\tclassName,\n\t\tstyles.VisuallyHidden\n\t);\n\n\treturn {\n\t\tclassName: classes,\n\t\t...props,\n\t};\n}\n"]}