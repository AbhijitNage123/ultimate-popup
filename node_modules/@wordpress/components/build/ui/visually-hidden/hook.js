"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useVisuallyHidden = useVisuallyHidden;

var _css = require("@emotion/css");

var styles = _interopRequireWildcard(require("./styles"));

/**
 * External dependencies
 */
// Disable reason: Temporarily disable for existing usages
// until we remove them as part of https://github.com/WordPress/gutenberg/issues/30503#deprecating-emotion-css
// eslint-disable-next-line no-restricted-imports

/**
 * Internal dependencies
 */
// duplicate this for the sake of being able to export it, it'll be removed when we replace VisuallyHidden in components/src anyway

/** @typedef {import('../context').PolymorphicComponentProps<{ children: import('react').ReactNode }, 'div'>} Props */

/**
 * @param {import('../context').PolymorphicComponentProps<{ children: import('react').ReactNode }, 'div'>} props
 */
function useVisuallyHidden({
  className,
  ...props
}) {
  // circumvent the context system and write the classnames ourselves
  const classes = (0, _css.cx)('components-visually-hidden wp-components-visually-hidden', className, styles.VisuallyHidden);
  return {
    className: classes,
    ...props
  };
}
//# sourceMappingURL=hook.js.map