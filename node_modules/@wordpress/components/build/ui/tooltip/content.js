"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _css = require("@emotion/css");

var _reakit = require("reakit");

var _context = require("../context");

var _view = require("../../view");

var _context2 = require("./context");

var styles = _interopRequireWildcard(require("./styles"));

/**
 * External dependencies
 */
// Disable reason: Temporarily disable for existing usages
// until we remove them as part of https://github.com/WordPress/gutenberg/issues/30503#deprecating-emotion-css
// eslint-disable-next-line no-restricted-imports
// eslint-disable-next-line no-restricted-imports

/**
 * Internal dependencies
 */
const {
  TooltipPopoverView
} = styles;
/**
 *
 * @param {import('../context').PolymorphicComponentProps<import('./types').ContentProps, 'div'>} props
 * @param {import('react').Ref<any>}                                                              forwardedRef
 */

function TooltipContent(props, forwardedRef) {
  const {
    children,
    className,
    ...otherProps
  } = (0, _context.useContextSystem)(props, 'TooltipContent');
  const {
    tooltip
  } = (0, _context2.useTooltipContext)();
  const classes = (0, _css.cx)(styles.TooltipContent, className);
  return (0, _element.createElement)(_reakit.Tooltip, (0, _extends2.default)({
    as: _view.View
  }, otherProps, tooltip, {
    className: classes,
    ref: forwardedRef
  }), (0, _element.createElement)(TooltipPopoverView, null, children));
}

var _default = (0, _context.contextConnect)(TooltipContent, 'TooltipContent');

exports.default = _default;
//# sourceMappingURL=content.js.map