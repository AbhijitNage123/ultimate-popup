{"version":3,"sources":["@wordpress/components/src/ui/context/context-connect.js"],"names":["contextConnect","Component","namespace","options","memo","memoProp","WrappedComponent","mergedNamespace","CONNECT_STATIC_NAMESPACE","Array","isArray","displayName","selector","getConnectNamespace","namespaces","type","hasConnectNamespace","match","includes","some","result"],"mappings":";;;;;;;;;;;AAGA;;AAKA;;AACA;;AAKA;;AACA;;AAfA;AACA;AACA;;AAGA;AACA;AACA;;AAIA;AACA;AACA;;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,cAAT,CAAyBC,SAAzB,EAAoCC,SAApC,EAA+CC,OAAO,GAAG,EAAzD,EAA8D;AACpE;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEC,QAAQ,GAAG;AAAnB,MAA6BF,OAAnC;AAEA,MAAIG,gBAAgB,GAAG,yBAAYL,SAAZ,CAAvB;;AACA,MAAKI,QAAL,EAAgB;AACf;AACAC,IAAAA,gBAAgB,GAAG,mBAAMA,gBAAN,CAAnB;AACA;;AAED,MAAK,OAAOJ,SAAP,KAAqB,WAA1B,EAAwC;AACvC,mHAAM,4CAAN;AACA,GAZmE,CAcpE;;;AACA,MAAIK,eAAe,GAAGD,gBAAgB,CAAEE,mCAAF,CAAhB,IAAgD,CACrEN,SADqE,CAAtE;AAIA;AACD;AACA;;AACC,MAAKO,KAAK,CAACC,OAAN,CAAeR,SAAf,CAAL,EAAkC;AACjCK,IAAAA,eAAe,GAAG,CAAE,GAAGA,eAAL,EAAsB,GAAGL,SAAzB,CAAlB;AACA;;AACD,MAAK,OAAOA,SAAP,KAAqB,QAA1B,EAAqC;AACpCK,IAAAA,eAAe,GAAG,CAAE,GAAGA,eAAL,EAAsBL,SAAtB,CAAlB;AACA;;AAEDI,EAAAA,gBAAgB,CAACK,WAAjB,GAA+BT,SAA/B,CA7BoE,CA+BpE;;AACAI,EAAAA,gBAAgB,CAAEE,mCAAF,CAAhB,GAA+C,kBAAMD,eAAN,CAA/C,CAhCoE,CAkCpE;;AACAD,EAAAA,gBAAgB,CAACM,QAAjB,GAA6B,IAAI,0DAA2BV,SAA3B,CAAwC,EAAzE,CAnCoE,CAqCpE;;AACA,SAAOI,gBAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASO,mBAAT,CAA8BZ,SAA9B,EAA0C;AAChD,MAAK,CAAEA,SAAP,EAAmB,OAAO,EAAP;AAEnB,MAAIa,UAAU,GAAG,EAAjB,CAHgD,CAKhD;;AACA,MAAKb,SAAS,CAAEO,mCAAF,CAAd,EAA6C;AAC5C;AACAM,IAAAA,UAAU,GAAGb,SAAS,CAAEO,mCAAF,CAAtB;AACA,GAT+C,CAWhD;;;AACA,MAAKP,SAAS,CAACc,IAAV,IAAkBd,SAAS,CAACc,IAAV,CAAgBP,mCAAhB,CAAvB,EAAoE;AACnE;AACAM,IAAAA,UAAU,GAAGb,SAAS,CAACc,IAAV,CAAgBP,mCAAhB,CAAb;AACA;;AAED,SAAOM,UAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASE,mBAAT,CAA8Bf,SAA9B,EAAyCgB,KAAzC,EAAiD;AACvD,MAAK,CAAEhB,SAAP,EAAmB,OAAO,KAAP;;AAEnB,MAAK,OAAOgB,KAAP,KAAiB,QAAtB,EAAiC;AAChC,WAAOJ,mBAAmB,CAAEZ,SAAF,CAAnB,CAAiCiB,QAAjC,CAA2CD,KAA3C,CAAP;AACA;;AACD,MAAKR,KAAK,CAACC,OAAN,CAAeO,KAAf,CAAL,EAA8B;AAC7B,WAAOA,KAAK,CAACE,IAAN,CAAcC,MAAF,IAClBP,mBAAmB,CAAEZ,SAAF,CAAnB,CAAiCiB,QAAjC,CAA2CE,MAA3C,CADM,CAAP;AAGA;;AAED,SAAO,KAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { uniq } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef, memo } from '@wordpress/element';\nimport warn from '@wordpress/warning';\n\n/**\n * Internal dependencies\n */\nimport { CONNECT_STATIC_NAMESPACE } from './constants';\nimport { getStyledClassNameFromKey } from './get-styled-class-name-from-key';\n\n/* eslint-disable jsdoc/valid-types */\n/**\n * Forwards ref (React.ForwardRef) and \"Connects\" (or registers) a component\n * within the Context system under a specified namespace.\n *\n * This is an (experimental) evolution of the initial connect() HOC.\n * The hope is that we can improve render performance by removing functional\n * component wrappers.\n *\n * @template {import('./polymorphic-component').PolymorphicComponentProps<{}, any, any>} P\n * @param {(props: P, ref: import('react').Ref<any>) => JSX.Element | null} Component            The component to register into the Context system.\n * @param {string}                                                          namespace            The namespace to register the component under.\n * @param {Object}                                                          options\n * @param {boolean}                                                         [options.memo=false]\n * @return {import('./polymorphic-component').PolymorphicComponentFromProps<P>} The connected PolymorphicComponent\n */\nexport function contextConnect( Component, namespace, options = {} ) {\n\t/* eslint-enable jsdoc/valid-types */\n\tconst { memo: memoProp = false } = options;\n\n\tlet WrappedComponent = forwardRef( Component );\n\tif ( memoProp ) {\n\t\t// @ts-ignore\n\t\tWrappedComponent = memo( WrappedComponent );\n\t}\n\n\tif ( typeof namespace === 'undefined' ) {\n\t\twarn( 'contextConnect: Please provide a namespace' );\n\t}\n\n\t// @ts-ignore internal property\n\tlet mergedNamespace = WrappedComponent[ CONNECT_STATIC_NAMESPACE ] || [\n\t\tnamespace,\n\t];\n\n\t/**\n\t * Consolidate (merge) namespaces before attaching it to the WrappedComponent.\n\t */\n\tif ( Array.isArray( namespace ) ) {\n\t\tmergedNamespace = [ ...mergedNamespace, ...namespace ];\n\t}\n\tif ( typeof namespace === 'string' ) {\n\t\tmergedNamespace = [ ...mergedNamespace, namespace ];\n\t}\n\n\tWrappedComponent.displayName = namespace;\n\n\t// @ts-ignore internal property\n\tWrappedComponent[ CONNECT_STATIC_NAMESPACE ] = uniq( mergedNamespace );\n\n\t// @ts-ignore PolymorphicComponent property\n\tWrappedComponent.selector = `.${ getStyledClassNameFromKey( namespace ) }`;\n\n\t// @ts-ignore\n\treturn WrappedComponent;\n}\n\n/**\n * Attempts to retrieve the connected namespace from a component.\n *\n * @param {import('react').ReactChild | undefined | {}} Component The component to retrieve a namespace from.\n * @return {Array<string>} The connected namespaces.\n */\nexport function getConnectNamespace( Component ) {\n\tif ( ! Component ) return [];\n\n\tlet namespaces = [];\n\n\t// @ts-ignore internal property\n\tif ( Component[ CONNECT_STATIC_NAMESPACE ] ) {\n\t\t// @ts-ignore internal property\n\t\tnamespaces = Component[ CONNECT_STATIC_NAMESPACE ];\n\t}\n\n\t// @ts-ignore\n\tif ( Component.type && Component.type[ CONNECT_STATIC_NAMESPACE ] ) {\n\t\t// @ts-ignore\n\t\tnamespaces = Component.type[ CONNECT_STATIC_NAMESPACE ];\n\t}\n\n\treturn namespaces;\n}\n\n/**\n * Checks to see if a component is connected within the Context system.\n *\n * @param {import('react').ReactNode} Component The component to retrieve a namespace from.\n * @param {Array<string>|string}      match     The namespace to check.\n * @return {boolean} The result.\n */\nexport function hasConnectNamespace( Component, match ) {\n\tif ( ! Component ) return false;\n\n\tif ( typeof match === 'string' ) {\n\t\treturn getConnectNamespace( Component ).includes( match );\n\t}\n\tif ( Array.isArray( match ) ) {\n\t\treturn match.some( ( result ) =>\n\t\t\tgetConnectNamespace( Component ).includes( result )\n\t\t);\n\t}\n\n\treturn false;\n}\n"]}