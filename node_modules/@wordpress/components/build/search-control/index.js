"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _classnames = _interopRequireDefault(require("classnames"));

var _compose = require("@wordpress/compose");

var _i18n = require("@wordpress/i18n");

var _icons = require("@wordpress/icons");

var _ = require("../");

var _baseControl = _interopRequireDefault(require("../base-control"));

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function SearchControl({
  className,
  onChange,
  value,
  label,
  placeholder = (0, _i18n.__)('Search'),
  hideLabelFromVision = true,
  help
}) {
  const instanceId = (0, _compose.useInstanceId)(SearchControl);
  const searchInput = (0, _element.useRef)();
  const id = `components-search-control-${instanceId}`;
  return (0, _element.createElement)(_baseControl.default, {
    label: label,
    id: id,
    hideLabelFromVision: hideLabelFromVision,
    help: help,
    className: (0, _classnames.default)(className, 'components-search-control')
  }, (0, _element.createElement)("div", {
    className: "components-search-control__input-wrapper"
  }, (0, _element.createElement)("input", {
    ref: searchInput,
    className: "components-search-control__input",
    id: id,
    type: "search",
    placeholder: placeholder,
    onChange: event => onChange(event.target.value),
    autoComplete: "off",
    value: value || ''
  }), (0, _element.createElement)("div", {
    className: "components-search-control__icon"
  }, !!value && (0, _element.createElement)(_.Button, {
    icon: _icons.closeSmall,
    label: (0, _i18n.__)('Reset search'),
    onClick: () => {
      onChange('');
      searchInput.current.focus();
    }
  }), !value && (0, _element.createElement)(_icons.Icon, {
    icon: _icons.search
  }))));
}

var _default = SearchControl;
exports.default = _default;
//# sourceMappingURL=index.js.map