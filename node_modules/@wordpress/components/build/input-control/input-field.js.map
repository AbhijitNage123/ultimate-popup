{"version":3,"sources":["@wordpress/components/src/input-control/input-field.js"],"names":["InputField","disabled","dragDirection","dragThreshold","id","isDragEnabled","isFocused","isPressEnterToChange","onBlur","noop","onChange","onDrag","onDragEnd","onDragStart","onFocus","onKeyDown","onValidate","size","setIsFocused","stateReducer","state","value","valueProp","type","props","ref","change","commit","drag","dragEnd","dragStart","invalidate","pressDown","pressEnter","pressUp","reset","update","_event","isDragging","isDirty","wasDirtyOnBlur","dragCursor","current","event","handleOnBlur","handleOnCommit","handleOnFocus","handleOnChange","nextValue","target","err","handleOnKeyDown","keyCode","UP","DOWN","ENTER","preventDefault","dragGestureProps","dragProps","distance","dragging","persist","stopPropagation","threshold","enabled","handleOnMouseDown","onMouseDown","ownerDocument","activeElement","focus","ForwardedComponent"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\nimport { useDrag } from 'react-use-gesture';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef, useRef } from '@wordpress/element';\nimport { UP, DOWN, ENTER } from '@wordpress/keycodes';\n/**\n * Internal dependencies\n */\nimport { useDragCursor } from './utils';\nimport { Input } from './styles/input-control-styles';\nimport { useInputControlStateReducer } from './state';\nimport { isValueEmpty } from '../utils/values';\nimport { useUpdateEffect } from '../utils';\n\nfunction InputField(\n\t{\n\t\tdisabled = false,\n\t\tdragDirection = 'n',\n\t\tdragThreshold = 10,\n\t\tid,\n\t\tisDragEnabled = false,\n\t\tisFocused,\n\t\tisPressEnterToChange = false,\n\t\tonBlur = noop,\n\t\tonChange = noop,\n\t\tonDrag = noop,\n\t\tonDragEnd = noop,\n\t\tonDragStart = noop,\n\t\tonFocus = noop,\n\t\tonKeyDown = noop,\n\t\tonValidate = noop,\n\t\tsize = 'default',\n\t\tsetIsFocused,\n\t\tstateReducer = ( state ) => state,\n\t\tvalue: valueProp,\n\t\ttype,\n\t\t...props\n\t},\n\tref\n) {\n\tconst {\n\t\t// State\n\t\tstate,\n\t\t// Actions\n\t\tchange,\n\t\tcommit,\n\t\tdrag,\n\t\tdragEnd,\n\t\tdragStart,\n\t\tinvalidate,\n\t\tpressDown,\n\t\tpressEnter,\n\t\tpressUp,\n\t\treset,\n\t\tupdate,\n\t} = useInputControlStateReducer( stateReducer, {\n\t\tisDragEnabled,\n\t\tvalue: valueProp,\n\t\tisPressEnterToChange,\n\t} );\n\n\tconst { _event, value, isDragging, isDirty } = state;\n\tconst wasDirtyOnBlur = useRef( false );\n\n\tconst dragCursor = useDragCursor( isDragging, dragDirection );\n\n\t/*\n\t * Handles synchronization of external and internal value state.\n\t * If not focused and did not hold a dirty value[1] on blur\n\t * updates the value from the props. Otherwise if not holding\n\t * a dirty value[1] propagates the value and event through onChange.\n\t * [1] value is only made dirty if isPressEnterToChange is true\n\t */\n\tuseUpdateEffect( () => {\n\t\tif ( valueProp === value ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( ! isFocused && ! wasDirtyOnBlur.current ) {\n\t\t\tupdate( valueProp );\n\t\t} else if ( ! isDirty ) {\n\t\t\tonChange( value, { event: _event } );\n\t\t\twasDirtyOnBlur.current = false;\n\t\t}\n\t}, [ value, isDirty, isFocused, valueProp ] );\n\n\tconst handleOnBlur = ( event ) => {\n\t\tonBlur( event );\n\t\tsetIsFocused( false );\n\n\t\t/**\n\t\t * If isPressEnterToChange is set, this commits the value to\n\t\t * the onChange callback.\n\t\t */\n\t\tif ( isPressEnterToChange && isDirty ) {\n\t\t\twasDirtyOnBlur.current = true;\n\t\t\tif ( ! isValueEmpty( value ) ) {\n\t\t\t\thandleOnCommit( event );\n\t\t\t} else {\n\t\t\t\treset( valueProp );\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleOnFocus = ( event ) => {\n\t\tonFocus( event );\n\t\tsetIsFocused( true );\n\t};\n\n\tconst handleOnChange = ( event ) => {\n\t\tconst nextValue = event.target.value;\n\t\tchange( nextValue, event );\n\t};\n\n\tconst handleOnCommit = ( event ) => {\n\t\tconst nextValue = event.target.value;\n\n\t\ttry {\n\t\t\tonValidate( nextValue, event );\n\t\t\tcommit( nextValue, event );\n\t\t} catch ( err ) {\n\t\t\tinvalidate( err, event );\n\t\t}\n\t};\n\n\tconst handleOnKeyDown = ( event ) => {\n\t\tconst { keyCode } = event;\n\t\tonKeyDown( event );\n\n\t\tswitch ( keyCode ) {\n\t\t\tcase UP:\n\t\t\t\tpressUp( event );\n\t\t\t\tbreak;\n\n\t\t\tcase DOWN:\n\t\t\t\tpressDown( event );\n\t\t\t\tbreak;\n\n\t\t\tcase ENTER:\n\t\t\t\tpressEnter( event );\n\n\t\t\t\tif ( isPressEnterToChange ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\thandleOnCommit( event );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst dragGestureProps = useDrag(\n\t\t( dragProps ) => {\n\t\t\tconst { distance, dragging, event } = dragProps;\n\t\t\t// The event is persisted to prevent errors in components using this\n\t\t\t// to check if a modifier key was held while dragging.\n\t\t\tevent.persist();\n\n\t\t\tif ( ! distance ) return;\n\t\t\tevent.stopPropagation();\n\n\t\t\t/**\n\t\t\t * Quick return if no longer dragging.\n\t\t\t * This prevents unnecessary value calculations.\n\t\t\t */\n\t\t\tif ( ! dragging ) {\n\t\t\t\tonDragEnd( dragProps );\n\t\t\t\tdragEnd( dragProps );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tonDrag( dragProps );\n\t\t\tdrag( dragProps );\n\n\t\t\tif ( ! isDragging ) {\n\t\t\t\tonDragStart( dragProps );\n\t\t\t\tdragStart( dragProps );\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tthreshold: dragThreshold,\n\t\t\tenabled: isDragEnabled,\n\t\t}\n\t);\n\n\tconst dragProps = isDragEnabled ? dragGestureProps() : {};\n\t/*\n\t * Works around the odd UA (e.g. Firefox) that does not focus inputs of\n\t * type=number when their spinner arrows are pressed.\n\t */\n\tlet handleOnMouseDown;\n\tif ( type === 'number' ) {\n\t\thandleOnMouseDown = ( event ) => {\n\t\t\tprops.onMouseDown?.( event );\n\t\t\tif ( event.target !== event.target.ownerDocument.activeElement ) {\n\t\t\t\tevent.target.focus();\n\t\t\t}\n\t\t};\n\t}\n\n\treturn (\n\t\t<Input\n\t\t\t{ ...props }\n\t\t\t{ ...dragProps }\n\t\t\tclassName=\"components-input-control__input\"\n\t\t\tdisabled={ disabled }\n\t\t\tdragCursor={ dragCursor }\n\t\t\tisDragging={ isDragging }\n\t\t\tid={ id }\n\t\t\tonBlur={ handleOnBlur }\n\t\t\tonChange={ handleOnChange }\n\t\t\tonFocus={ handleOnFocus }\n\t\t\tonKeyDown={ handleOnKeyDown }\n\t\t\tonMouseDown={ handleOnMouseDown }\n\t\t\tref={ ref }\n\t\t\tsize={ size }\n\t\t\tvalue={ value }\n\t\t\ttype={ type }\n\t\t/>\n\t);\n}\n\nconst ForwardedComponent = forwardRef( InputField );\n\nexport default ForwardedComponent;\n"]}