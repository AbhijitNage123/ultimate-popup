{"version":3,"sources":["@wordpress/components/src/unit-control/unit-select-control.js"],"names":["UnitSelectControl","className","isTabbable","options","CSS_UNITS","onChange","noop","size","value","props","handleOnChange","event","unitValue","target","data","find","option","classes","map","label"],"mappings":";;;;;;;;;;;;;AAGA;;AACA;;AAKA;;AACA;;AAVA;AACA;AACA;;AAIA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,iBAAT,CAA4B;AAC1CC,EAAAA,SAD0C;AAE1CC,EAAAA,UAAU,GAAG,IAF6B;AAG1CC,EAAAA,OAAO,GAAGC,gBAHgC;AAI1CC,EAAAA,QAAQ,GAAGC,YAJ+B;AAK1CC,EAAAA,IAAI,GAAG,SALmC;AAM1CC,EAAAA,KAAK,GAAG,IANkC;AAO1C,KAAGC;AAPuC,CAA5B,EAQX;AACH,MAAK,CAAE,qBAAUN,OAAV,CAAP,EAA6B;AAC5B,WACC,4BAAC,4BAAD;AACC,MAAA,SAAS,EAAC,qCADX;AAEC,MAAA,IAAI,EAAGI;AAFR,OAIGC,KAJH,CADD;AAQA;;AAED,QAAME,cAAc,GAAKC,KAAF,IAAa;AACnC,UAAM;AAAEH,MAAAA,KAAK,EAAEI;AAAT,QAAuBD,KAAK,CAACE,MAAnC;AACA,UAAMC,IAAI,GAAGX,OAAO,CAACY,IAAR,CAAgBC,MAAF,IAAcA,MAAM,CAACR,KAAP,KAAiBI,SAA7C,CAAb;AAEAP,IAAAA,QAAQ,CAAEO,SAAF,EAAa;AAAED,MAAAA,KAAF;AAASG,MAAAA;AAAT,KAAb,CAAR;AACA,GALD;;AAOA,QAAMG,OAAO,GAAG,yBAAY,iCAAZ,EAA+ChB,SAA/C,CAAhB;AAEA,SACC,4BAAC,6BAAD;AACC,IAAA,SAAS,EAAGgB,OADb;AAEC,IAAA,QAAQ,EAAGP,cAFZ;AAGC,IAAA,IAAI,EAAGH,IAHR;AAIC,IAAA,QAAQ,EAAGL,UAAU,GAAG,IAAH,GAAU,IAJhC;AAKC,IAAA,KAAK,EAAGM;AALT,KAMMC,KANN,GAQGN,OAAO,CAACe,GAAR,CAAeF,MAAF,IACd;AAAQ,IAAA,KAAK,EAAGA,MAAM,CAACR,KAAvB;AAA+B,IAAA,GAAG,EAAGQ,MAAM,CAACR;AAA5C,KACGQ,MAAM,CAACG,KADV,CADC,CARH,CADD;AAgBA","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * Internal dependencies\n */\nimport { UnitSelect, UnitLabel } from './styles/unit-control-styles';\nimport { CSS_UNITS, hasUnits } from './utils';\n\n/**\n * Renders a `select` if there are multiple units.\n * Otherwise, renders a non-selectable label.\n *\n * @param {Object}   props                     Component props.\n * @param {string}   [props.className]         Class to set on the `select` element.\n * @param {boolean}  [props.isTabbable=true]   Whether the control can be focused via keyboard navigation.\n * @param {Array}    [props.options=CSS_UNITS] Available units to select from.\n * @param {Function} [props.onChange=noop]     A callback function invoked when the value is changed.\n * @param {string}   [props.size=\"default\"]    Size of the control option. Supports \"default\" and \"small\".\n * @param {string}   [props.value=\"px\"]        Current unit.\n */\nexport default function UnitSelectControl( {\n\tclassName,\n\tisTabbable = true,\n\toptions = CSS_UNITS,\n\tonChange = noop,\n\tsize = 'default',\n\tvalue = 'px',\n\t...props\n} ) {\n\tif ( ! hasUnits( options ) ) {\n\t\treturn (\n\t\t\t<UnitLabel\n\t\t\t\tclassName=\"components-unit-control__unit-label\"\n\t\t\t\tsize={ size }\n\t\t\t>\n\t\t\t\t{ value }\n\t\t\t</UnitLabel>\n\t\t);\n\t}\n\n\tconst handleOnChange = ( event ) => {\n\t\tconst { value: unitValue } = event.target;\n\t\tconst data = options.find( ( option ) => option.value === unitValue );\n\n\t\tonChange( unitValue, { event, data } );\n\t};\n\n\tconst classes = classnames( 'components-unit-control__select', className );\n\n\treturn (\n\t\t<UnitSelect\n\t\t\tclassName={ classes }\n\t\t\tonChange={ handleOnChange }\n\t\t\tsize={ size }\n\t\t\ttabIndex={ isTabbable ? null : '-1' }\n\t\t\tvalue={ value }\n\t\t\t{ ...props }\n\t\t>\n\t\t\t{ options.map( ( option ) => (\n\t\t\t\t<option value={ option.value } key={ option.value }>\n\t\t\t\t\t{ option.label }\n\t\t\t\t</option>\n\t\t\t) ) }\n\t\t</UnitSelect>\n\t);\n}\n"]}