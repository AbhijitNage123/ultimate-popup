{"version":3,"sources":["@wordpress/components/src/mobile/html-text-input/container.ios.js"],"names":["HTMLInputContainer","Component","constructor","arguments","panResponder","PanResponder","create","onStartShouldSetPanResponderCapture","onPanResponderMove","e","gestureState","dy","UIManager","blur","target","render","styles","keyboardAvoidingView","panHandlers","props","parentHeight","children","scrollEnabled"],"mappings":";;;;;;;;;AAQA;;;;AALA;;AAUA;;AACA;;AAdA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AAIA,MAAMA,kBAAN,SAAiCC,kBAAjC,CAA2C;AAC1CC,EAAAA,WAAW,GAAG;AACb,UAAO,GAAGC,SAAV;AAEA,SAAKC,YAAL,GAAoBC,0BAAaC,MAAb,CAAqB;AACxCC,MAAAA,mCAAmC,EAAE,MAAM,IADH;AAGxCC,MAAAA,kBAAkB,EAAE,CAAEC,CAAF,EAAKC,YAAL,KAAuB;AAC1C,YAAKA,YAAY,CAACC,EAAb,GAAkB,GAAlB,IAAyBD,YAAY,CAACC,EAAb,GAAkB,GAAhD,EAAsD;AACrD;AACA;AACA;AACAC,iCAAUC,IAAV,CAAgBJ,CAAC,CAACK,MAAlB;AACA;AACD;AAVuC,KAArB,CAApB;AAYA;;AAEDC,EAAAA,MAAM,GAAG;AACR,WACC,4BAAC,6BAAD;AACC,MAAA,KAAK,EAAGC,kBAAOC;AADhB,OAEM,KAAKb,YAAL,CAAkBc,WAFxB;AAGC,MAAA,YAAY,EAAG,KAAKC,KAAL,CAAWC;AAH3B,QAKG,KAAKD,KAAL,CAAWE,QALd,CADD;AASA;;AA5ByC;;AA+B3CrB,kBAAkB,CAACsB,aAAnB,GAAmC,IAAnC;eAEetB,kB","sourcesContent":["/**\n * External dependencies\n */\nimport { UIManager, PanResponder } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport KeyboardAvoidingView from '../keyboard-avoiding-view';\nimport styles from './style.ios.scss';\n\nclass HTMLInputContainer extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.panResponder = PanResponder.create( {\n\t\t\tonStartShouldSetPanResponderCapture: () => true,\n\n\t\t\tonPanResponderMove: ( e, gestureState ) => {\n\t\t\t\tif ( gestureState.dy > 100 && gestureState.dy < 110 ) {\n\t\t\t\t\t//Keyboard.dismiss() and this.textInput.blur() are not working here\n\t\t\t\t\t//They require to know the currentlyFocusedID under the hood but\n\t\t\t\t\t//during this gesture there's no currentlyFocusedID\n\t\t\t\t\tUIManager.blur( e.target );\n\t\t\t\t}\n\t\t\t},\n\t\t} );\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<KeyboardAvoidingView\n\t\t\t\tstyle={ styles.keyboardAvoidingView }\n\t\t\t\t{ ...this.panResponder.panHandlers }\n\t\t\t\tparentHeight={ this.props.parentHeight }\n\t\t\t>\n\t\t\t\t{ this.props.children }\n\t\t\t</KeyboardAvoidingView>\n\t\t);\n\t}\n}\n\nHTMLInputContainer.scrollEnabled = true;\n\nexport default HTMLInputContainer;\n"]}