{"version":3,"sources":["@wordpress/components/src/drop-zone/index.js"],"names":["DropZoneComponent","className","label","onFilesDrop","onHTMLDrop","onDrop","isDraggingOverDocument","setIsDraggingOverDocument","isDraggingOverElement","setIsDraggingOverElement","type","setType","ref","event","files","dataTransfer","html","getData","length","onDragStart","_type","types","onDragEnd","onDragEnter","onDragLeave","children","upload","classes"],"mappings":";;;;;;;;;AAUA;;AAPA;;AACA;;AAKA;;AAEA;;AACA;;AACA;;AAbA;AACA;AACA;;AAIA;AACA;AACA;AAOe,SAASA,iBAAT,CAA4B;AAC1CC,EAAAA,SAD0C;AAE1CC,EAAAA,KAF0C;AAG1CC,EAAAA,WAH0C;AAI1CC,EAAAA,UAJ0C;AAK1CC,EAAAA;AAL0C,CAA5B,EAMX;AACH,QAAM,CAAEC,sBAAF,EAA0BC,yBAA1B,IAAwD,wBAA9D;AACA,QAAM,CAAEC,qBAAF,EAAyBC,wBAAzB,IAAsD,wBAA5D;AACA,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoB,wBAA1B;AACA,QAAMC,GAAG,GAAG,wCAAa;AACxBP,IAAAA,MAAM,CAAEQ,KAAF,EAAU;AACf,YAAMC,KAAK,GAAG,mCAA0BD,KAAK,CAACE,YAAhC,CAAd;AACA,YAAMC,IAAI,GAAGH,KAAK,CAACE,YAAN,CAAmBE,OAAnB,CAA4B,WAA5B,CAAb;;AAEA,UAAKH,KAAK,CAACI,MAAN,IAAgBf,WAArB,EAAmC;AAClCA,QAAAA,WAAW,CAAEW,KAAF,CAAX;AACA,OAFD,MAEO,IAAKE,IAAI,IAAIZ,UAAb,EAA0B;AAChCA,QAAAA,UAAU,CAAEY,IAAF,CAAV;AACA,OAFM,MAEA,IAAKX,MAAL,EAAc;AACpBA,QAAAA,MAAM,CAAEQ,KAAF,CAAN;AACA;AACD,KAZuB;;AAaxBM,IAAAA,WAAW,CAAEN,KAAF,EAAU;AACpBN,MAAAA,yBAAyB,CAAE,IAAF,CAAzB;AAEA,UAAIa,KAAK,GAAG,SAAZ;;AAEA,WACC;AACA;AACA,4BAAUP,KAAK,CAACE,YAAN,CAAmBM,KAA7B,EAAoC,OAApC,KACA,mCAA0BR,KAAK,CAACE,YAAhC,EAA+CG,MAA/C,GAAwD,CAJzD,EAKE;AACDE,QAAAA,KAAK,GAAG,MAAR;AACA,OAPD,MAOO,IAAK,sBAAUP,KAAK,CAACE,YAAN,CAAmBM,KAA7B,EAAoC,WAApC,CAAL,EAAyD;AAC/DD,QAAAA,KAAK,GAAG,MAAR;AACA;;AAEDT,MAAAA,OAAO,CAAES,KAAF,CAAP;AACA,KA9BuB;;AA+BxBE,IAAAA,SAAS,GAAG;AACXf,MAAAA,yBAAyB,CAAE,KAAF,CAAzB;AACAI,MAAAA,OAAO;AACP,KAlCuB;;AAmCxBY,IAAAA,WAAW,GAAG;AACbd,MAAAA,wBAAwB,CAAE,IAAF,CAAxB;AACA,KArCuB;;AAsCxBe,IAAAA,WAAW,GAAG;AACbf,MAAAA,wBAAwB,CAAE,KAAF,CAAxB;AACA;;AAxCuB,GAAb,CAAZ;AA2CA,MAAIgB,QAAJ;;AAEA,MAAKjB,qBAAL,EAA6B;AAC5BiB,IAAAA,QAAQ,GACP;AAAK,MAAA,SAAS,EAAC;AAAf,OACC,4BAAC,WAAD;AACC,MAAA,IAAI,EAAGC,aADR;AAEC,MAAA,SAAS,EAAC;AAFX,MADD,EAKC;AAAM,MAAA,SAAS,EAAC;AAAhB,OACGxB,KAAK,GAAGA,KAAH,GAAW,cAAI,sBAAJ,CADnB,CALD,CADD;AAWA;;AAED,QAAMyB,OAAO,GAAG,yBAAY,sBAAZ,EAAoC1B,SAApC,EAA+C;AAC9D,iBACC,CAAEK,sBAAsB,IAAIE,qBAA5B,MACIE,IAAI,KAAK,MAAT,IAAmBP,WAArB,IACCO,IAAI,KAAK,MAAT,IAAmBN,UADpB,IAECM,IAAI,KAAK,SAAT,IAAsBL,MAHzB,CAF6D;AAM9D,iCAA6BC,sBANiC;AAO9D,gCAA4BE,qBAPkC;AAQ9D,KAAG,eAAeE,IAAM,EAAxB,GAA6B,CAAC,CAAEA;AAR8B,GAA/C,CAAhB;AAWA,SACC;AAAK,IAAA,GAAG,EAAGE,GAAX;AAAiB,IAAA,SAAS,EAAGe;AAA7B,KACGF,QADH,CADD;AAKA","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState } from '@wordpress/element';\nimport { upload, Icon } from '@wordpress/icons';\nimport { getFilesFromDataTransfer } from '@wordpress/dom';\nimport { __experimentalUseDropZone as useDropZone } from '@wordpress/compose';\n\nexport default function DropZoneComponent( {\n\tclassName,\n\tlabel,\n\tonFilesDrop,\n\tonHTMLDrop,\n\tonDrop,\n} ) {\n\tconst [ isDraggingOverDocument, setIsDraggingOverDocument ] = useState();\n\tconst [ isDraggingOverElement, setIsDraggingOverElement ] = useState();\n\tconst [ type, setType ] = useState();\n\tconst ref = useDropZone( {\n\t\tonDrop( event ) {\n\t\t\tconst files = getFilesFromDataTransfer( event.dataTransfer );\n\t\t\tconst html = event.dataTransfer.getData( 'text/html' );\n\n\t\t\tif ( files.length && onFilesDrop ) {\n\t\t\t\tonFilesDrop( files );\n\t\t\t} else if ( html && onHTMLDrop ) {\n\t\t\t\tonHTMLDrop( html );\n\t\t\t} else if ( onDrop ) {\n\t\t\t\tonDrop( event );\n\t\t\t}\n\t\t},\n\t\tonDragStart( event ) {\n\t\t\tsetIsDraggingOverDocument( true );\n\n\t\t\tlet _type = 'default';\n\n\t\t\tif (\n\t\t\t\t// Check for the types because sometimes the files themselves\n\t\t\t\t// are only available on drop.\n\t\t\t\tincludes( event.dataTransfer.types, 'Files' ) ||\n\t\t\t\tgetFilesFromDataTransfer( event.dataTransfer ).length > 0\n\t\t\t) {\n\t\t\t\t_type = 'file';\n\t\t\t} else if ( includes( event.dataTransfer.types, 'text/html' ) ) {\n\t\t\t\t_type = 'html';\n\t\t\t}\n\n\t\t\tsetType( _type );\n\t\t},\n\t\tonDragEnd() {\n\t\t\tsetIsDraggingOverDocument( false );\n\t\t\tsetType();\n\t\t},\n\t\tonDragEnter() {\n\t\t\tsetIsDraggingOverElement( true );\n\t\t},\n\t\tonDragLeave() {\n\t\t\tsetIsDraggingOverElement( false );\n\t\t},\n\t} );\n\n\tlet children;\n\n\tif ( isDraggingOverElement ) {\n\t\tchildren = (\n\t\t\t<div className=\"components-drop-zone__content\">\n\t\t\t\t<Icon\n\t\t\t\t\ticon={ upload }\n\t\t\t\t\tclassName=\"components-drop-zone__content-icon\"\n\t\t\t\t/>\n\t\t\t\t<span className=\"components-drop-zone__content-text\">\n\t\t\t\t\t{ label ? label : __( 'Drop files to upload' ) }\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst classes = classnames( 'components-drop-zone', className, {\n\t\t'is-active':\n\t\t\t( isDraggingOverDocument || isDraggingOverElement ) &&\n\t\t\t( ( type === 'file' && onFilesDrop ) ||\n\t\t\t\t( type === 'html' && onHTMLDrop ) ||\n\t\t\t\t( type === 'default' && onDrop ) ),\n\t\t'is-dragging-over-document': isDraggingOverDocument,\n\t\t'is-dragging-over-element': isDraggingOverElement,\n\t\t[ `is-dragging-${ type }` ]: !! type,\n\t} );\n\n\treturn (\n\t\t<div ref={ ref } className={ classes }>\n\t\t\t{ children }\n\t\t</div>\n\t);\n}\n"]}