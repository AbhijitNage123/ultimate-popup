{"version":3,"sources":["@wordpress/components/src/number-control/index.js"],"names":["NumberControl","__unstableStateReducer","stateReducer","state","className","dragDirection","hideHTMLArrows","isDragEnabled","isShiftStepEnabled","label","max","Infinity","min","shiftStep","step","type","typeProp","value","valueProp","props","ref","baseValue","jumpStep","autoComplete","classes","numberControlStateReducer","action","payload","event","currentValue","inputControlActionTypes","PRESS_UP","PRESS_DOWN","enableShift","shiftKey","incrementalValue","parseFloat","nextValue","preventDefault","DRAG","delta","x","y","modifier","directionModifier","directionBaseValue","distance","PRESS_ENTER","COMMIT"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classNames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { forwardRef } from '@wordpress/element';\nimport { isRTL } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { Input } from './styles/number-control-styles';\nimport {\n\tinputControlActionTypes,\n\tcomposeStateReducers,\n} from '../input-control/state';\nimport { add, subtract, roundClamp } from '../utils/math';\nimport { useJumpStep } from '../utils/hooks';\nimport { isValueEmpty } from '../utils/values';\n\nexport function NumberControl(\n\t{\n\t\t__unstableStateReducer: stateReducer = ( state ) => state,\n\t\tclassName,\n\t\tdragDirection = 'n',\n\t\thideHTMLArrows = false,\n\t\tisDragEnabled = true,\n\t\tisShiftStepEnabled = true,\n\t\tlabel,\n\t\tmax = Infinity,\n\t\tmin = -Infinity,\n\t\tshiftStep = 10,\n\t\tstep = 1,\n\t\ttype: typeProp = 'number',\n\t\tvalue: valueProp,\n\t\t...props\n\t},\n\tref\n) {\n\tconst baseValue = roundClamp( 0, min, max, step );\n\n\tconst jumpStep = useJumpStep( {\n\t\tstep,\n\t\tshiftStep,\n\t\tisShiftStepEnabled,\n\t} );\n\n\tconst autoComplete = typeProp === 'number' ? 'off' : null;\n\tconst classes = classNames( 'components-number-control', className );\n\n\t/**\n\t * \"Middleware\" function that intercepts updates from InputControl.\n\t * This allows us to tap into actions to transform the (next) state for\n\t * InputControl.\n\t *\n\t * @param {Object} state  State from InputControl\n\t * @param {Object} action Action triggering state change\n\t * @return {Object} The updated state to apply to InputControl\n\t */\n\tconst numberControlStateReducer = ( state, action ) => {\n\t\tconst { type, payload } = action;\n\t\tconst event = payload?.event;\n\t\tconst currentValue = state.value;\n\n\t\t/**\n\t\t * Handles custom UP and DOWN Keyboard events\n\t\t */\n\t\tif (\n\t\t\ttype === inputControlActionTypes.PRESS_UP ||\n\t\t\ttype === inputControlActionTypes.PRESS_DOWN\n\t\t) {\n\t\t\tconst enableShift = event.shiftKey && isShiftStepEnabled;\n\n\t\t\tconst incrementalValue = enableShift\n\t\t\t\t? parseFloat( shiftStep ) * parseFloat( step )\n\t\t\t\t: parseFloat( step );\n\t\t\tlet nextValue = isValueEmpty( currentValue )\n\t\t\t\t? baseValue\n\t\t\t\t: currentValue;\n\n\t\t\tif ( event?.preventDefault ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tif ( type === inputControlActionTypes.PRESS_UP ) {\n\t\t\t\tnextValue = add( nextValue, incrementalValue );\n\t\t\t}\n\n\t\t\tif ( type === inputControlActionTypes.PRESS_DOWN ) {\n\t\t\t\tnextValue = subtract( nextValue, incrementalValue );\n\t\t\t}\n\n\t\t\tnextValue = roundClamp( nextValue, min, max, incrementalValue );\n\n\t\t\tstate.value = nextValue;\n\t\t}\n\n\t\t/**\n\t\t * Handles drag to update events\n\t\t */\n\t\tif ( type === inputControlActionTypes.DRAG && isDragEnabled ) {\n\t\t\tconst { delta, shiftKey } = payload;\n\t\t\tconst [ x, y ] = delta;\n\t\t\tconst modifier = shiftKey\n\t\t\t\t? parseFloat( shiftStep ) * parseFloat( step )\n\t\t\t\t: parseFloat( step );\n\n\t\t\tlet directionModifier;\n\t\t\tlet directionBaseValue;\n\n\t\t\tswitch ( dragDirection ) {\n\t\t\t\tcase 'n':\n\t\t\t\t\tdirectionBaseValue = y;\n\t\t\t\t\tdirectionModifier = -1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'e':\n\t\t\t\t\tdirectionBaseValue = x;\n\t\t\t\t\tdirectionModifier = isRTL() ? -1 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 's':\n\t\t\t\t\tdirectionBaseValue = y;\n\t\t\t\t\tdirectionModifier = 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'w':\n\t\t\t\t\tdirectionBaseValue = x;\n\t\t\t\t\tdirectionModifier = isRTL() ? 1 : -1;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst distance = directionBaseValue * modifier * directionModifier;\n\t\t\tlet nextValue;\n\n\t\t\tif ( distance !== 0 ) {\n\t\t\t\tnextValue = roundClamp(\n\t\t\t\t\tadd( currentValue, distance ),\n\t\t\t\t\tmin,\n\t\t\t\t\tmax,\n\t\t\t\t\tmodifier\n\t\t\t\t);\n\n\t\t\t\tstate.value = nextValue;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handles commit (ENTER key press or on blur if isPressEnterToChange)\n\t\t */\n\t\tif (\n\t\t\ttype === inputControlActionTypes.PRESS_ENTER ||\n\t\t\ttype === inputControlActionTypes.COMMIT\n\t\t) {\n\t\t\tstate.value = roundClamp( currentValue, min, max, step );\n\t\t}\n\n\t\treturn state;\n\t};\n\n\treturn (\n\t\t<Input\n\t\t\tautoComplete={ autoComplete }\n\t\t\tinputMode=\"numeric\"\n\t\t\t{ ...props }\n\t\t\tclassName={ classes }\n\t\t\tdragDirection={ dragDirection }\n\t\t\thideHTMLArrows={ hideHTMLArrows }\n\t\t\tisDragEnabled={ isDragEnabled }\n\t\t\tlabel={ label }\n\t\t\tmax={ max }\n\t\t\tmin={ min }\n\t\t\tref={ ref }\n\t\t\tstep={ jumpStep }\n\t\t\ttype={ typeProp }\n\t\t\tvalue={ valueProp }\n\t\t\t__unstableStateReducer={ composeStateReducers(\n\t\t\t\tnumberControlStateReducer,\n\t\t\t\tstateReducer\n\t\t\t) }\n\t\t/>\n\t);\n}\n\nexport default forwardRef( NumberControl );\n"]}