{"version":3,"sources":["@wordpress/components/src/truncate/component.js"],"names":["Truncate","as","useHook","useTruncate","name"],"mappings":";;;;;;;;;AAGA;;AACA;;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,QAAQ,GAAG,4BAAiB;AACjCC,EAAAA,EAAE,EAAE,MAD6B;AAEjCC,EAAAA,OAAO,EAAEC,aAFwB;AAGjCC,EAAAA,IAAI,EAAE;AAH2B,CAAjB,CAAjB;eAMeJ,Q","sourcesContent":["/**\n * Internal dependencies\n */\nimport { createComponent } from '../ui/utils';\nimport useTruncate from './hook';\n\n/**\n * `Truncate` is a typography primitive that trims text content.\n * For almost all cases, it is recommended that `Text`, `Heading`, or\n * `Subheading` is used to render text content. However,`Truncate` is\n * available for custom implementations.\n *\n * @example\n * ```jsx\n * import { __experimentalTruncate as Truncate } from `@wordpress/components`;\n *\n * function Example() {\n * \treturn (\n * \t\t<Truncate>\n * \t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex\n * \t\t\tneque, vulputate a diam et, luctus convallis lacus. Vestibulum ac\n * \t\t\tmollis mi. Morbi id elementum massa.\n * \t\t</Truncate>\n * \t);\n * }\n * ```\n */\nconst Truncate = createComponent( {\n\tas: 'span',\n\tuseHook: useTruncate,\n\tname: 'Truncate',\n} );\n\nexport default Truncate;\n"]}