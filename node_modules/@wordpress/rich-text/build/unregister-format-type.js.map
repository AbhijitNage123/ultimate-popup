{"version":3,"sources":["@wordpress/rich-text/src/unregister-format-type.js"],"names":["unregisterFormatType","name","oldFormat","richTextStore","getFormatType","window","console","error","removeFormatTypes"],"mappings":";;;;;;;AAGA;;AAKA;;AARA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,oBAAT,CAA+BC,IAA/B,EAAsC;AAC5C,QAAMC,SAAS,GAAG,kBAAQC,YAAR,EAAwBC,aAAxB,CAAuCH,IAAvC,CAAlB;;AAEA,MAAK,CAAEC,SAAP,EAAmB;AAClBG,IAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf,CAAuB,UAAUN,IAAM,qBAAvC;AACA;AACA;;AAED,sBAAUE,YAAV,EAA0BK,iBAA1B,CAA6CP,IAA7C;AAEA,SAAOC,SAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { select, dispatch } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as richTextStore } from './store';\n\n/** @typedef {import('./register-format-type').RichTextFormatType} RichTextFormatType */\n\n/**\n * Unregisters a format.\n *\n * @param {string} name Format name.\n *\n * @return {RichTextFormatType|undefined} The previous format value, if it has\n *                                        been successfully unregistered;\n *                                        otherwise `undefined`.\n */\nexport function unregisterFormatType( name ) {\n\tconst oldFormat = select( richTextStore ).getFormatType( name );\n\n\tif ( ! oldFormat ) {\n\t\twindow.console.error( `Format ${ name } is not registered.` );\n\t\treturn;\n\t}\n\n\tdispatch( richTextStore ).removeFormatTypes( name );\n\n\treturn oldFormat;\n}\n"]}