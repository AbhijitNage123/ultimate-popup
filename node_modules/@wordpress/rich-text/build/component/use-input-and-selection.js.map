{"version":3,"sources":["@wordpress/rich-text/src/component/use-input-and-selection.js"],"names":["INSERTION_INPUT_TYPES_TO_IGNORE","Set","EMPTY_ACTIVE_FORMATS","fixPlaceholderSelection","defaultView","selection","getSelection","anchorNode","anchorOffset","nodeType","ELEMENT_NODE","targetNode","childNodes","getAttribute","collapseToStart","useInputAndSelection","props","propsRef","current","element","ownerDocument","isComposing","rafId","onInput","event","inputType","record","applyRecord","createRecord","handleChange","indexOf","has","currentValue","start","activeFormats","oldActiveFormats","change","value","end","formats","handleSelectionChange","activeElement","isSelected","onSelectionChange","type","contentEditable","text","oldRecord","length","newValue","_newActiveFormats","undefined","newActiveFormats","domOnly","onCompositionStart","removeEventListener","onCompositionEnd","addEventListener","onFocus","index","requestAnimationFrame","onBlur","cancelAnimationFrame"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { getActiveFormats } from '../get-active-formats';\nimport { updateFormats } from '../update-formats';\n\n/**\n * All inserting input types that would insert HTML into the DOM.\n *\n * @see https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes\n *\n * @type {Set}\n */\nconst INSERTION_INPUT_TYPES_TO_IGNORE = new Set( [\n\t'insertParagraph',\n\t'insertOrderedList',\n\t'insertUnorderedList',\n\t'insertHorizontalRule',\n\t'insertLink',\n] );\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\n/**\n * If the selection is set on the placeholder element, collapse the selection to\n * the start (before the placeholder).\n *\n * @param {Window} defaultView\n */\nfunction fixPlaceholderSelection( defaultView ) {\n\tconst selection = defaultView.getSelection();\n\tconst { anchorNode, anchorOffset } = selection;\n\n\tif ( anchorNode.nodeType !== anchorNode.ELEMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tconst targetNode = anchorNode.childNodes[ anchorOffset ];\n\n\tif (\n\t\t! targetNode ||\n\t\ttargetNode.nodeType !== targetNode.ELEMENT_NODE ||\n\t\t! targetNode.getAttribute( 'data-rich-text-placeholder' )\n\t) {\n\t\treturn;\n\t}\n\n\tselection.collapseToStart();\n}\n\nexport function useInputAndSelection( props ) {\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\treturn useRefEffect( ( element ) => {\n\t\tconst { ownerDocument } = element;\n\t\tconst { defaultView } = ownerDocument;\n\n\t\tlet isComposing = false;\n\t\tlet rafId;\n\n\t\tfunction onInput( event ) {\n\t\t\t// Do not trigger a change if characters are being composed.\n\t\t\t// Browsers  will usually emit a final `input` event when the\n\t\t\t// characters are composed.\n\t\t\t// As of December 2019, Safari doesn't support\n\t\t\t// nativeEvent.isComposing.\n\t\t\tif ( isComposing ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet inputType;\n\n\t\t\tif ( event ) {\n\t\t\t\tinputType = event.inputType;\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\trecord,\n\t\t\t\tapplyRecord,\n\t\t\t\tcreateRecord,\n\t\t\t\thandleChange,\n\t\t\t} = propsRef.current;\n\n\t\t\t// The browser formatted something or tried to insert HTML.\n\t\t\t// Overwrite it. It will be handled later by the format library if\n\t\t\t// needed.\n\t\t\tif (\n\t\t\t\tinputType &&\n\t\t\t\t( inputType.indexOf( 'format' ) === 0 ||\n\t\t\t\t\tINSERTION_INPUT_TYPES_TO_IGNORE.has( inputType ) )\n\t\t\t) {\n\t\t\t\tapplyRecord( record.current );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentValue = createRecord();\n\t\t\tconst {\n\t\t\t\tstart,\n\t\t\t\tactiveFormats: oldActiveFormats = [],\n\t\t\t} = record.current;\n\n\t\t\t// Update the formats between the last and new caret position.\n\t\t\tconst change = updateFormats( {\n\t\t\t\tvalue: currentValue,\n\t\t\t\tstart,\n\t\t\t\tend: currentValue.start,\n\t\t\t\tformats: oldActiveFormats,\n\t\t\t} );\n\n\t\t\thandleChange( change );\n\t\t}\n\n\t\t/**\n\t\t * Syncs the selection to local state. A callback for the `selectionchange`\n\t\t * native events, `keyup`, `mouseup` and `touchend` synthetic events, and\n\t\t * animation frames after the `focus` event.\n\t\t *\n\t\t * @param {Event|DOMHighResTimeStamp} event\n\t\t */\n\t\tfunction handleSelectionChange( event ) {\n\t\t\tif ( ownerDocument.activeElement !== element ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\trecord,\n\t\t\t\tapplyRecord,\n\t\t\t\tcreateRecord,\n\t\t\t\tisSelected,\n\t\t\t\tonSelectionChange,\n\t\t\t} = propsRef.current;\n\n\t\t\tif ( event.type !== 'selectionchange' && ! isSelected ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check if the implementor disabled editing. `contentEditable`\n\t\t\t// does disable input, but not text selection, so we must ignore\n\t\t\t// selection changes.\n\t\t\tif ( element.contentEditable !== 'true' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case of a keyboard event, ignore selection changes during\n\t\t\t// composition.\n\t\t\tif ( isComposing ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { start, end, text } = createRecord();\n\t\t\tconst oldRecord = record.current;\n\n\t\t\t// Fallback mechanism for IE11, which doesn't support the input event.\n\t\t\t// Any input results in a selection change.\n\t\t\tif ( text !== oldRecord.text ) {\n\t\t\t\tonInput();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( start === oldRecord.start && end === oldRecord.end ) {\n\t\t\t\t// Sometimes the browser may set the selection on the placeholder\n\t\t\t\t// element, in which case the caret is not visible. We need to set\n\t\t\t\t// the caret before the placeholder if that's the case.\n\t\t\t\tif ( oldRecord.text.length === 0 && start === 0 ) {\n\t\t\t\t\tfixPlaceholderSelection( defaultView );\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newValue = {\n\t\t\t\t...oldRecord,\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t\t// _newActiveFormats may be set on arrow key navigation to control\n\t\t\t\t// the right boundary position. If undefined, getActiveFormats will\n\t\t\t\t// give the active formats according to the browser.\n\t\t\t\tactiveFormats: oldRecord._newActiveFormats,\n\t\t\t\t_newActiveFormats: undefined,\n\t\t\t};\n\n\t\t\tconst newActiveFormats = getActiveFormats(\n\t\t\t\tnewValue,\n\t\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t\t);\n\n\t\t\t// Update the value with the new active formats.\n\t\t\tnewValue.activeFormats = newActiveFormats;\n\n\t\t\t// It is important that the internal value is updated first,\n\t\t\t// otherwise the value will be wrong on render!\n\t\t\trecord.current = newValue;\n\t\t\tapplyRecord( newValue, { domOnly: true } );\n\t\t\tonSelectionChange( start, end );\n\t\t}\n\n\t\tfunction onCompositionStart() {\n\t\t\tisComposing = true;\n\t\t\t// Do not update the selection when characters are being composed as\n\t\t\t// this rerenders the component and might distroy internal browser\n\t\t\t// editing state.\n\t\t\townerDocument.removeEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t}\n\n\t\tfunction onCompositionEnd() {\n\t\t\tisComposing = false;\n\t\t\t// Ensure the value is up-to-date for browsers that don't emit a final\n\t\t\t// input event after composition.\n\t\t\tonInput( { inputType: 'insertText' } );\n\t\t\t// Tracking selection changes can be resumed.\n\t\t\townerDocument.addEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t}\n\n\t\tfunction onFocus() {\n\t\t\tconst { record, isSelected, onSelectionChange } = propsRef.current;\n\n\t\t\tif ( ! isSelected ) {\n\t\t\t\t// We know for certain that on focus, the old selection is invalid.\n\t\t\t\t// It will be recalculated on the next mouseup, keyup, or touchend\n\t\t\t\t// event.\n\t\t\t\tconst index = undefined;\n\n\t\t\t\trecord.current = {\n\t\t\t\t\t...record.current,\n\t\t\t\t\tstart: index,\n\t\t\t\t\tend: index,\n\t\t\t\t\tactiveFormats: EMPTY_ACTIVE_FORMATS,\n\t\t\t\t};\n\t\t\t\tonSelectionChange( index, index );\n\t\t\t} else {\n\t\t\t\tonSelectionChange( record.current.start, record.current.end );\n\t\t\t}\n\n\t\t\t// Update selection as soon as possible, which is at the next animation\n\t\t\t// frame. The event listener for selection changes may be added too late\n\t\t\t// at this point, but this focus event is still too early to calculate\n\t\t\t// the selection.\n\t\t\trafId = defaultView.requestAnimationFrame( handleSelectionChange );\n\n\t\t\townerDocument.addEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t}\n\n\t\tfunction onBlur() {\n\t\t\townerDocument.removeEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t}\n\n\t\telement.addEventListener( 'input', onInput );\n\t\telement.addEventListener( 'compositionstart', onCompositionStart );\n\t\telement.addEventListener( 'compositionend', onCompositionEnd );\n\t\telement.addEventListener( 'focus', onFocus );\n\t\telement.addEventListener( 'blur', onBlur );\n\t\t// Selection updates must be done at these events as they\n\t\t// happen before the `selectionchange` event. In some cases,\n\t\t// the `selectionchange` event may not even fire, for\n\t\t// example when the window receives focus again on click.\n\t\telement.addEventListener( 'keyup', handleSelectionChange );\n\t\telement.addEventListener( 'mouseup', handleSelectionChange );\n\t\telement.addEventListener( 'touchend', handleSelectionChange );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'input', onInput );\n\t\t\telement.removeEventListener(\n\t\t\t\t'compositionstart',\n\t\t\t\tonCompositionStart\n\t\t\t);\n\t\t\telement.removeEventListener( 'compositionend', onCompositionEnd );\n\t\t\telement.removeEventListener( 'focus', onFocus );\n\t\t\telement.removeEventListener( 'blur', onBlur );\n\t\t\telement.removeEventListener( 'keyup', handleSelectionChange );\n\t\t\telement.removeEventListener( 'mouseup', handleSelectionChange );\n\t\t\telement.removeEventListener( 'touchend', handleSelectionChange );\n\t\t\townerDocument.removeEventListener(\n\t\t\t\t'selectionchange',\n\t\t\t\thandleSelectionChange\n\t\t\t);\n\t\t\tdefaultView.cancelAnimationFrame( rafId );\n\t\t};\n\t}, [] );\n}\n"]}