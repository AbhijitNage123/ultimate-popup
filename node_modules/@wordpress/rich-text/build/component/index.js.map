{"version":3,"sources":["@wordpress/rich-text/src/component/index.js"],"names":["useRichText","value","selectionStart","selectionEnd","placeholder","preserveWhiteSpace","onSelectionChange","onChange","__unstableMultilineTag","multilineTag","__unstableDisableFormats","disableFormats","__unstableIsSelected","isSelected","__unstableDependencies","__unstableAfterParse","__unstableBeforeSerialize","__unstableAddInvisibleFormats","forceRender","ref","createRecord","ownerDocument","defaultView","current","selection","getSelection","range","rangeCount","getRangeAt","element","multilineWrapperTags","undefined","__unstableIsEditableTree","applyRecord","newRecord","domOnly","prepareEditableTree","__unstableDomOnly","_value","record","setRecordFromProps","html","formats","Array","length","replacements","start","end","hadSelectionUpdate","handleChange","text","__unstableFormats","__unstableText","applyFromProps","didMount","focus","mergedRefs","onFocus","__experimentalRichText"],"mappings":";;;;;;;;AAGA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAnBA;AACA;AACA;;AAIA;AACA;AACA;AAaO,SAASA,WAAT,CAAsB;AAC5BC,EAAAA,KAAK,GAAG,EADoB;AAE5BC,EAAAA,cAF4B;AAG5BC,EAAAA,YAH4B;AAI5BC,EAAAA,WAJ4B;AAK5BC,EAAAA,kBAL4B;AAM5BC,EAAAA,iBAN4B;AAO5BC,EAAAA,QAP4B;AAQ5BC,EAAAA,sBAAsB,EAAEC,YARI;AAS5BC,EAAAA,wBAAwB,EAAEC,cATE;AAU5BC,EAAAA,oBAAoB,EAAEC,UAVM;AAW5BC,EAAAA,sBAX4B;AAY5BC,EAAAA,oBAZ4B;AAa5BC,EAAAA,yBAb4B;AAc5BC,EAAAA;AAd4B,CAAtB,EAeH;AACH,QAAM,GAAIC,WAAJ,IAAoB,yBAAY,OAAQ,EAAR,CAAZ,CAA1B;AACA,QAAMC,GAAG,GAAG,sBAAZ;;AAEA,WAASC,YAAT,GAAwB;AACvB,UAAM;AACLC,MAAAA,aAAa,EAAE;AAAEC,QAAAA;AAAF;AADV,QAEFH,GAAG,CAACI,OAFR;AAGA,UAAMC,SAAS,GAAGF,WAAW,CAACG,YAAZ,EAAlB;AACA,UAAMC,KAAK,GACVF,SAAS,CAACG,UAAV,GAAuB,CAAvB,GAA2BH,SAAS,CAACI,UAAV,CAAsB,CAAtB,CAA3B,GAAuD,IADxD;AAGA,WAAO,oBAAQ;AACdC,MAAAA,OAAO,EAAEV,GAAG,CAACI,OADC;AAEdG,MAAAA,KAFc;AAGdjB,MAAAA,YAHc;AAIdqB,MAAAA,oBAAoB,EACnBrB,YAAY,KAAK,IAAjB,GAAwB,CAAE,IAAF,EAAQ,IAAR,CAAxB,GAAyCsB,SAL5B;AAMdC,MAAAA,wBAAwB,EAAE,IANZ;AAOd3B,MAAAA;AAPc,KAAR,CAAP;AASA;;AAED,WAAS4B,WAAT,CAAsBC,SAAtB,EAAiC;AAAEC,IAAAA;AAAF,MAAc,EAA/C,EAAoD;AACnD,sBAAO;AACNlC,MAAAA,KAAK,EAAEiC,SADD;AAENX,MAAAA,OAAO,EAAEJ,GAAG,CAACI,OAFP;AAGNd,MAAAA,YAHM;AAINqB,MAAAA,oBAAoB,EACnBrB,YAAY,KAAK,IAAjB,GAAwB,CAAE,IAAF,EAAQ,IAAR,CAAxB,GAAyCsB,SALpC;AAMNK,MAAAA,mBAAmB,EAAEnB,6BANf;AAONoB,MAAAA,iBAAiB,EAAEF,OAPb;AAQN/B,MAAAA;AARM,KAAP;AAUA,GAlCE,CAoCH;;;AACA,QAAMkC,MAAM,GAAG,qBAAQrC,KAAR,CAAf;;AACA,QAAMsC,MAAM,GAAG,sBAAf;;AAEA,WAASC,kBAAT,GAA8B;AAC7BF,IAAAA,MAAM,CAACf,OAAP,GAAiBtB,KAAjB;AACAsC,IAAAA,MAAM,CAAChB,OAAP,GAAiB,oBAAQ;AACxBkB,MAAAA,IAAI,EAAExC,KADkB;AAExBQ,MAAAA,YAFwB;AAGxBqB,MAAAA,oBAAoB,EACnBrB,YAAY,KAAK,IAAjB,GAAwB,CAAE,IAAF,EAAQ,IAAR,CAAxB,GAAyCsB,SAJlB;AAKxB1B,MAAAA;AALwB,KAAR,CAAjB;;AAOA,QAAKM,cAAL,EAAsB;AACrB4B,MAAAA,MAAM,CAAChB,OAAP,CAAemB,OAAf,GAAyBC,KAAK,CAAE1C,KAAK,CAAC2C,MAAR,CAA9B;AACAL,MAAAA,MAAM,CAAChB,OAAP,CAAesB,YAAf,GAA8BF,KAAK,CAAE1C,KAAK,CAAC2C,MAAR,CAAnC;AACA;;AACDL,IAAAA,MAAM,CAAChB,OAAP,CAAemB,OAAf,GAAyB3B,oBAAoB,CAAEwB,MAAM,CAAChB,OAAT,CAA7C;AACAgB,IAAAA,MAAM,CAAChB,OAAP,CAAeuB,KAAf,GAAuB5C,cAAvB;AACAqC,IAAAA,MAAM,CAAChB,OAAP,CAAewB,GAAf,GAAqB5C,YAArB;AACA;;AAED,QAAM6C,kBAAkB,GAAG,qBAAQ,KAAR,CAA3B;;AAEA,MAAK,CAAET,MAAM,CAAChB,OAAd,EAAwB;AACvBiB,IAAAA,kBAAkB;AAClB,GAFD,MAEO,IACNtC,cAAc,KAAKqC,MAAM,CAAChB,OAAP,CAAeuB,KAAlC,IACA3C,YAAY,KAAKoC,MAAM,CAAChB,OAAP,CAAewB,GAF1B,EAGL;AACDC,IAAAA,kBAAkB,CAACzB,OAAnB,GAA6BV,UAA7B;AACA0B,IAAAA,MAAM,CAAChB,OAAP,GAAiB,EAChB,GAAGgB,MAAM,CAAChB,OADM;AAEhBuB,MAAAA,KAAK,EAAE5C,cAFS;AAGhB6C,MAAAA,GAAG,EAAE5C;AAHW,KAAjB;AAKA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACC,WAAS8C,YAAT,CAAuBf,SAAvB,EAAmC;AAClCD,IAAAA,WAAW,CAAEC,SAAF,CAAX;;AAEA,QAAKvB,cAAL,EAAsB;AACrB2B,MAAAA,MAAM,CAACf,OAAP,GAAiBW,SAAS,CAACgB,IAA3B;AACA,KAFD,MAEO;AACNZ,MAAAA,MAAM,CAACf,OAAP,GAAiB,gCAAc;AAC9BtB,QAAAA,KAAK,EAAE,EACN,GAAGiC,SADG;AAENQ,UAAAA,OAAO,EAAE1B,yBAAyB,CAAEkB,SAAF;AAF5B,SADuB;AAK9BzB,QAAAA,YAL8B;AAM9BJ,QAAAA;AAN8B,OAAd,CAAjB;AAQA;;AAEDkC,IAAAA,MAAM,CAAChB,OAAP,GAAiBW,SAAjB;AAEA,UAAM;AAAEY,MAAAA,KAAF;AAASC,MAAAA,GAAT;AAAcL,MAAAA,OAAd;AAAuBQ,MAAAA;AAAvB,QAAgChB,SAAtC,CAlBkC,CAoBlC;AACA;;AACA5B,IAAAA,iBAAiB,CAAEwC,KAAF,EAASC,GAAT,CAAjB;AACAxC,IAAAA,QAAQ,CAAE+B,MAAM,CAACf,OAAT,EAAkB;AACzB4B,MAAAA,iBAAiB,EAAET,OADM;AAEzBU,MAAAA,cAAc,EAAEF;AAFS,KAAlB,CAAR;AAIAhC,IAAAA,WAAW;AACX;;AAED,WAASmC,cAAT,GAA0B;AACzBb,IAAAA,kBAAkB;AAClBP,IAAAA,WAAW,CAAEM,MAAM,CAAChB,OAAT,CAAX;AACA;;AAED,QAAM+B,QAAQ,GAAG,qBAAQ,KAAR,CAAjB,CAnHG,CAqHH;;AACA,gCAAiB,MAAM;AACtB,QAAKA,QAAQ,CAAC/B,OAAT,IAAoBtB,KAAK,KAAKqC,MAAM,CAACf,OAA1C,EAAoD;AACnD8B,MAAAA,cAAc;AACd;AACD,GAJD,EAIG,CAAEpD,KAAF,CAJH,EAtHG,CA4HH;;AACA,gCAAiB,MAAM;AACtB,QAAK,CAAE+C,kBAAkB,CAACzB,OAA1B,EAAoC;AACnC;AACA;;AAED8B,IAAAA,cAAc;AACdL,IAAAA,kBAAkB,CAACzB,OAAnB,GAA6B,KAA7B;AACA,GAPD,EAOG,CAAEyB,kBAAkB,CAACzB,OAArB,CAPH;;AASA,WAASgC,KAAT,GAAiB;AAChBpC,IAAAA,GAAG,CAACI,OAAJ,CAAYgC,KAAZ;AACAtB,IAAAA,WAAW,CAAEM,MAAM,CAAChB,OAAT,CAAX;AACA;;AAED,QAAMiC,UAAU,GAAG,2BAAc,CAChCrC,GADgC,EAEhC,uCAFgC,EAGhC,wCAAkB;AAAEoB,IAAAA;AAAF,GAAlB,CAHgC,EAIhC,oCAAgB;AAAEA,IAAAA,MAAF;AAAU9B,IAAAA,YAAV;AAAwBJ,IAAAA;AAAxB,GAAhB,CAJgC,EAKhC,uCALgC,EAMhC,8CAAqB;AAAEkC,IAAAA,MAAF;AAAUN,IAAAA;AAAV,GAArB,CANgC,EAOhC,0BAAW;AACVb,IAAAA,YADU;AAEV6B,IAAAA,YAFU;AAGVxC,IAAAA;AAHU,GAAX,CAPgC,EAYhC,wDAA0B;AACzBA,IAAAA,YADyB;AAEzBW,IAAAA,YAFyB;AAGzB6B,IAAAA;AAHyB,GAA1B,CAZgC,EAiBhC,gDAAsB;AACrBV,IAAAA,MADqB;AAErBN,IAAAA,WAFqB;AAGrBb,IAAAA,YAHqB;AAIrB6B,IAAAA,YAJqB;AAKrBpC,IAAAA,UALqB;AAMrBP,IAAAA;AANqB,GAAtB,CAjBgC,EAyBhC,2BAAc,MAAM;AACnB+C,IAAAA,cAAc;AACdC,IAAAA,QAAQ,CAAC/B,OAAT,GAAmB,IAAnB;AACA,GAHD,EAGG,CAAEnB,WAAF,EAAe,GAAGU,sBAAlB,CAHH,CAzBgC,CAAd,CAAnB;AA+BA,SAAO;AACNb,IAAAA,KAAK,EAAEsC,MAAM,CAAChB,OADR;AAENhB,IAAAA,QAAQ,EAAE0C,YAFJ;AAGNQ,IAAAA,OAAO,EAAEF,KAHH;AAINpC,IAAAA,GAAG,EAAEqC;AAJC,GAAP;AAMA;;AAEc,SAASE,sBAAT,GAAkC,CAAE","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef, useLayoutEffect, useReducer } from '@wordpress/element';\nimport { useMergeRefs, useRefEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { create } from '../create';\nimport { apply } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { useDefaultStyle } from './use-default-style';\nimport { useBoundaryStyle } from './use-boundary-style';\nimport { useCopyHandler } from './use-copy-handler';\nimport { useFormatBoundaries } from './use-format-boundaries';\nimport { useSelectObject } from './use-select-object';\nimport { useIndentListItemOnSpace } from './use-indent-list-item-on-space';\nimport { useInputAndSelection } from './use-input-and-selection';\nimport { useDelete } from './use-delete';\n\nexport function useRichText( {\n\tvalue = '',\n\tselectionStart,\n\tselectionEnd,\n\tplaceholder,\n\tpreserveWhiteSpace,\n\tonSelectionChange,\n\tonChange,\n\t__unstableMultilineTag: multilineTag,\n\t__unstableDisableFormats: disableFormats,\n\t__unstableIsSelected: isSelected,\n\t__unstableDependencies,\n\t__unstableAfterParse,\n\t__unstableBeforeSerialize,\n\t__unstableAddInvisibleFormats,\n} ) {\n\tconst [ , forceRender ] = useReducer( () => ( {} ) );\n\tconst ref = useRef();\n\n\tfunction createRecord() {\n\t\tconst {\n\t\t\townerDocument: { defaultView },\n\t\t} = ref.current;\n\t\tconst selection = defaultView.getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: ref.current,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\t__unstableIsEditableTree: true,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t}\n\n\tfunction applyRecord( newRecord, { domOnly } = {} ) {\n\t\tapply( {\n\t\t\tvalue: newRecord,\n\t\t\tcurrent: ref.current,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tprepareEditableTree: __unstableAddInvisibleFormats,\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder,\n\t\t} );\n\t}\n\n\t// Internal values are updated synchronously, unlike props and state.\n\tconst _value = useRef( value );\n\tconst record = useRef();\n\n\tfunction setRecordFromProps() {\n\t\t_value.current = value;\n\t\trecord.current = create( {\n\t\t\thtml: value,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t\tif ( disableFormats ) {\n\t\t\trecord.current.formats = Array( value.length );\n\t\t\trecord.current.replacements = Array( value.length );\n\t\t}\n\t\trecord.current.formats = __unstableAfterParse( record.current );\n\t\trecord.current.start = selectionStart;\n\t\trecord.current.end = selectionEnd;\n\t}\n\n\tconst hadSelectionUpdate = useRef( false );\n\n\tif ( ! record.current ) {\n\t\tsetRecordFromProps();\n\t} else if (\n\t\tselectionStart !== record.current.start ||\n\t\tselectionEnd !== record.current.end\n\t) {\n\t\thadSelectionUpdate.current = isSelected;\n\t\trecord.current = {\n\t\t\t...record.current,\n\t\t\tstart: selectionStart,\n\t\t\tend: selectionEnd,\n\t\t};\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object} newRecord The record to sync and apply.\n\t */\n\tfunction handleChange( newRecord ) {\n\t\tapplyRecord( newRecord );\n\n\t\tif ( disableFormats ) {\n\t\t\t_value.current = newRecord.text;\n\t\t} else {\n\t\t\t_value.current = toHTMLString( {\n\t\t\t\tvalue: {\n\t\t\t\t\t...newRecord,\n\t\t\t\t\tformats: __unstableBeforeSerialize( newRecord ),\n\t\t\t\t},\n\t\t\t\tmultilineTag,\n\t\t\t\tpreserveWhiteSpace,\n\t\t\t} );\n\t\t}\n\n\t\trecord.current = newRecord;\n\n\t\tconst { start, end, formats, text } = newRecord;\n\n\t\t// Selection must be updated first, so it is recorded in history when\n\t\t// the content change happens.\n\t\tonSelectionChange( start, end );\n\t\tonChange( _value.current, {\n\t\t\t__unstableFormats: formats,\n\t\t\t__unstableText: text,\n\t\t} );\n\t\tforceRender();\n\t}\n\n\tfunction applyFromProps() {\n\t\tsetRecordFromProps();\n\t\tapplyRecord( record.current );\n\t}\n\n\tconst didMount = useRef( false );\n\n\t// Value updates must happen synchonously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( didMount.current && value !== _value.current ) {\n\t\t\tapplyFromProps();\n\t\t}\n\t}, [ value ] );\n\n\t// Value updates must happen synchonously to avoid overwriting newer values.\n\tuseLayoutEffect( () => {\n\t\tif ( ! hadSelectionUpdate.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tapplyFromProps();\n\t\thadSelectionUpdate.current = false;\n\t}, [ hadSelectionUpdate.current ] );\n\n\tfunction focus() {\n\t\tref.current.focus();\n\t\tapplyRecord( record.current );\n\t}\n\n\tconst mergedRefs = useMergeRefs( [\n\t\tref,\n\t\tuseDefaultStyle(),\n\t\tuseBoundaryStyle( { record } ),\n\t\tuseCopyHandler( { record, multilineTag, preserveWhiteSpace } ),\n\t\tuseSelectObject(),\n\t\tuseFormatBoundaries( { record, applyRecord } ),\n\t\tuseDelete( {\n\t\t\tcreateRecord,\n\t\t\thandleChange,\n\t\t\tmultilineTag,\n\t\t} ),\n\t\tuseIndentListItemOnSpace( {\n\t\t\tmultilineTag,\n\t\t\tcreateRecord,\n\t\t\thandleChange,\n\t\t} ),\n\t\tuseInputAndSelection( {\n\t\t\trecord,\n\t\t\tapplyRecord,\n\t\t\tcreateRecord,\n\t\t\thandleChange,\n\t\t\tisSelected,\n\t\t\tonSelectionChange,\n\t\t} ),\n\t\tuseRefEffect( () => {\n\t\t\tapplyFromProps();\n\t\t\tdidMount.current = true;\n\t\t}, [ placeholder, ...__unstableDependencies ] ),\n\t] );\n\n\treturn {\n\t\tvalue: record.current,\n\t\tonChange: handleChange,\n\t\tonFocus: focus,\n\t\tref: mergedRefs,\n\t};\n}\n\nexport default function __experimentalRichText() {}\n"]}