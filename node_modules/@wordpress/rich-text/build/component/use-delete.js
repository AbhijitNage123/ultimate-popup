"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useDelete = useDelete;

var _element = require("@wordpress/element");

var _compose = require("@wordpress/compose");

var _keycodes = require("@wordpress/keycodes");

var _remove = require("../remove");

var _removeLineSeparator = require("../remove-line-separator");

var _isEmpty = require("../is-empty");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function useDelete(props) {
  const propsRef = (0, _element.useRef)(props);
  propsRef.current = props;
  return (0, _compose.useRefEffect)(element => {
    function onKeyDown(event) {
      const {
        keyCode
      } = event;
      const {
        createRecord,
        handleChange,
        multilineTag
      } = propsRef.current;

      if (event.defaultPrevented) {
        return;
      }

      if (keyCode !== _keycodes.DELETE && keyCode !== _keycodes.BACKSPACE) {
        return;
      }

      const currentValue = createRecord();
      const {
        start,
        end,
        text
      } = currentValue;
      const isReverse = keyCode === _keycodes.BACKSPACE; // Always handle full content deletion ourselves.

      if (start === 0 && end !== 0 && end === text.length) {
        handleChange((0, _remove.remove)(currentValue));
        event.preventDefault();
        return;
      }

      if (multilineTag) {
        let newValue; // Check to see if we should remove the first item if empty.

        if (isReverse && currentValue.start === 0 && currentValue.end === 0 && (0, _isEmpty.isEmptyLine)(currentValue)) {
          newValue = (0, _removeLineSeparator.removeLineSeparator)(currentValue, !isReverse);
        } else {
          newValue = (0, _removeLineSeparator.removeLineSeparator)(currentValue, isReverse);
        }

        if (newValue) {
          handleChange(newValue);
          event.preventDefault();
        }
      }
    }

    element.addEventListener('keydown', onKeyDown);
    return () => {
      element.removeEventListener('keydown', onKeyDown);
    };
  }, []);
}
//# sourceMappingURL=use-delete.js.map