{"version":3,"sources":["@wordpress/rich-text/src/get-last-child-index.js"],"names":["getLastChildIndex","text","replacements","lineIndex","lineFormats","childIndex","index","length","LINE_SEPARATOR","formatsAtIndex"],"mappings":";;;;;;;AAIA;;AAJA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,iBAAT,CAA4B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA5B,EAAoDC,SAApD,EAAgE;AACtE,QAAMC,WAAW,GAAGF,YAAY,CAAEC,SAAF,CAAZ,IAA6B,EAAjD,CADsE,CAEtE;;AACA,MAAIE,UAAU,GAAGF,SAAjB,CAHsE,CAKtE;;AACA,OAAM,IAAIG,KAAK,GAAGH,SAAS,IAAI,CAA/B,EAAkCG,KAAK,GAAGL,IAAI,CAACM,MAA/C,EAAuDD,KAAK,EAA5D,EAAiE;AAChE;AACA,QAAKL,IAAI,CAAEK,KAAF,CAAJ,KAAkBE,iCAAvB,EAAwC;AACvC;AACA;;AAED,UAAMC,cAAc,GAAGP,YAAY,CAAEI,KAAF,CAAZ,IAAyB,EAAhD,CANgE,CAQhE;AACA;;AACA,QAAKG,cAAc,CAACF,MAAf,IAAyBH,WAAW,CAACG,MAA1C,EAAmD;AAClDF,MAAAA,UAAU,GAAGC,KAAb;AACA,KAFD,MAEO;AACN,aAAOD,UAAP;AACA;AACD,GArBqE,CAuBtE;;;AACA,SAAOA,UAAP;AACA","sourcesContent":["/**\n * Internal dependencies\n */\n\nimport { LINE_SEPARATOR } from './special-characters';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Gets the line index of the last child in the list.\n *\n * @param {RichTextValue} value     Value to search.\n * @param {number}        lineIndex Line index of a list item in the list.\n *\n * @return {number} The index of the last child.\n */\nexport function getLastChildIndex( { text, replacements }, lineIndex ) {\n\tconst lineFormats = replacements[ lineIndex ] || [];\n\t// Use the given line index in case there are no next children.\n\tlet childIndex = lineIndex;\n\n\t// `lineIndex` could be `undefined` if it's the first line.\n\tfor ( let index = lineIndex || 0; index < text.length; index++ ) {\n\t\t// We're only interested in line indices.\n\t\tif ( text[ index ] !== LINE_SEPARATOR ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst formatsAtIndex = replacements[ index ] || [];\n\n\t\t// If the amout of formats is equal or more, store it, then return the\n\t\t// last one if the amount of formats is less.\n\t\tif ( formatsAtIndex.length >= lineFormats.length ) {\n\t\t\tchildIndex = index;\n\t\t} else {\n\t\t\treturn childIndex;\n\t\t}\n\t}\n\n\t// If the end of the text is reached, return the last child index.\n\treturn childIndex;\n}\n"]}