{"version":3,"sources":["@wordpress/rich-text/src/component/toolbar-button-with-options.native.js"],"names":["Picker","ToolbarGroup","ToolbarButton","useRef","Icon","ToolbarButtonWithOptions","options","picker","presentPicker","current","onValueSelected","selectedValue","selectedOption","find","op","value","onClick","length","firstOption","enablePicker","title","icon","undefined"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,MAAT,EAAiBC,YAAjB,EAA+BC,aAA/B,QAAoD,uBAApD;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,wBAAT,CAAmC;AAAEC,EAAAA;AAAF,CAAnC,EAAiD;AAChD,QAAMC,MAAM,GAAGJ,MAAM,EAArB;;AAEA,WAASK,aAAT,GAAyB;AACxB,QAAKD,MAAM,CAACE,OAAZ,EAAsB;AACrBF,MAAAA,MAAM,CAACE,OAAP,CAAeD,aAAf;AACA;AACD;;AAED,WAASE,eAAT,CAA0BC,aAA1B,EAA0C;AACzC,UAAMC,cAAc,GAAGN,OAAO,CAACO,IAAR,CACpBC,EAAF,IAAUA,EAAE,CAACC,KAAH,KAAaJ,aADD,CAAvB;;AAGA,QAAKC,cAAL,EAAsB;AACrBA,MAAAA,cAAc,CAACI,OAAf;AACA;AACD;;AAED,MAAK,CAAEV,OAAF,IAAaA,OAAO,CAACW,MAAR,KAAmB,CAArC,EAAyC;AACxC,WAAO,IAAP;AACA;;AACD,QAAMC,WAAW,GAAGZ,OAAO,CAAE,CAAF,CAA3B;AACA,QAAMa,YAAY,GAAGb,OAAO,CAACW,MAAR,GAAiB,CAAtC;AAEA,SACC,8BACC,cAAC,YAAD,QACC,cAAC,aAAD;AACC,IAAA,KAAK,EAAGC,WAAW,CAACE,KADrB;AAEC,IAAA,IAAI,EAAG,cAAC,IAAD;AAAM,MAAA,IAAI,EAAGF,WAAW,CAACG;AAAzB,MAFR;AAGC,IAAA,OAAO,EAAGH,WAAW,CAACF,OAHvB;AAIC,IAAA,WAAW,EAAGG,YAAY,GAAGX,aAAH,GAAmBc;AAJ9C,IADD,CADD,EASGH,YAAY,IACb,cAAC,MAAD;AACC,IAAA,GAAG,EAAGZ,MADP;AAEC,IAAA,OAAO,EAAGD,OAFX;AAGC,IAAA,QAAQ,EAAGI,eAHZ;AAIC,IAAA,gBAAgB;AAJjB,IAVF,CADD;AAoBA;;AAED,eAAeL,wBAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Picker, ToolbarGroup, ToolbarButton } from '@wordpress/components';\nimport { useRef } from '@wordpress/element';\nimport { Icon } from '@wordpress/icons';\n\n/**\n * Toolbar button component that, upon a long press, opens a Picker\n * to allow selecting from among multiple options.\n *\n * @param {Object} props         Component props.\n * @param {Object} props.options Options to pick from.\n */\nfunction ToolbarButtonWithOptions( { options } ) {\n\tconst picker = useRef();\n\n\tfunction presentPicker() {\n\t\tif ( picker.current ) {\n\t\t\tpicker.current.presentPicker();\n\t\t}\n\t}\n\n\tfunction onValueSelected( selectedValue ) {\n\t\tconst selectedOption = options.find(\n\t\t\t( op ) => op.value === selectedValue\n\t\t);\n\t\tif ( selectedOption ) {\n\t\t\tselectedOption.onClick();\n\t\t}\n\t}\n\n\tif ( ! options || options.length === 0 ) {\n\t\treturn null;\n\t}\n\tconst firstOption = options[ 0 ];\n\tconst enablePicker = options.length > 1;\n\n\treturn (\n\t\t<>\n\t\t\t<ToolbarGroup>\n\t\t\t\t<ToolbarButton\n\t\t\t\t\ttitle={ firstOption.title }\n\t\t\t\t\ticon={ <Icon icon={ firstOption.icon } /> }\n\t\t\t\t\tonClick={ firstOption.onClick }\n\t\t\t\t\tonLongPress={ enablePicker ? presentPicker : undefined }\n\t\t\t\t/>\n\t\t\t</ToolbarGroup>\n\t\t\t{ enablePicker && (\n\t\t\t\t<Picker\n\t\t\t\t\tref={ picker }\n\t\t\t\t\toptions={ options }\n\t\t\t\t\tonChange={ onValueSelected }\n\t\t\t\t\thideCancelButton\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport default ToolbarButtonWithOptions;\n"]}