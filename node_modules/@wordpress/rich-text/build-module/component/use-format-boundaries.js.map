{"version":3,"sources":["@wordpress/rich-text/src/component/use-format-boundaries.js"],"names":["useRef","useReducer","useRefEffect","LEFT","RIGHT","isCollapsed","EMPTY_ACTIVE_FORMATS","useFormatBoundaries","props","forceRender","propsRef","current","element","onKeyDown","event","keyCode","shiftKey","altKey","metaKey","ctrlKey","record","applyRecord","text","formats","start","end","activeFormats","currentActiveFormats","collapsed","ownerDocument","defaultView","direction","getComputedStyle","reverseKey","isReverse","length","formatsBefore","formatsAfter","newActiveFormatsLength","source","_newActiveFormats","preventDefault","newActiveFormats","slice","newValue","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef, useReducer } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\nimport { LEFT, RIGHT } from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { isCollapsed } from '../is-collapsed';\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nexport function useFormatBoundaries( props ) {\n\tconst [ , forceRender ] = useReducer( () => ( {} ) );\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\treturn useRefEffect( ( element ) => {\n\t\tfunction onKeyDown( event ) {\n\t\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\t\tif (\n\t\t\t\t// Only override left and right keys without modifiers pressed.\n\t\t\t\tshiftKey ||\n\t\t\t\taltKey ||\n\t\t\t\tmetaKey ||\n\t\t\t\tctrlKey ||\n\t\t\t\t( keyCode !== LEFT && keyCode !== RIGHT )\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { record, applyRecord } = propsRef.current;\n\t\t\tconst {\n\t\t\t\ttext,\n\t\t\t\tformats,\n\t\t\t\tstart,\n\t\t\t\tend,\n\t\t\t\tactiveFormats: currentActiveFormats = [],\n\t\t\t} = record.current;\n\t\t\tconst collapsed = isCollapsed( record.current );\n\t\t\tconst { ownerDocument } = element;\n\t\t\tconst { defaultView } = ownerDocument;\n\t\t\t// To do: ideally, we should look at visual position instead.\n\t\t\tconst { direction } = defaultView.getComputedStyle( element );\n\t\t\tconst reverseKey = direction === 'rtl' ? RIGHT : LEFT;\n\t\t\tconst isReverse = event.keyCode === reverseKey;\n\n\t\t\t// If the selection is collapsed and at the very start, do nothing if\n\t\t\t// navigating backward.\n\t\t\t// If the selection is collapsed and at the very end, do nothing if\n\t\t\t// navigating forward.\n\t\t\tif ( collapsed && currentActiveFormats.length === 0 ) {\n\t\t\t\tif ( start === 0 && isReverse ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( end === text.length && ! isReverse ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the selection is not collapsed, let the browser handle collapsing\n\t\t\t// the selection for now. Later we could expand this logic to set\n\t\t\t// boundary positions if needed.\n\t\t\tif ( ! collapsed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\n\t\t\tlet newActiveFormatsLength = currentActiveFormats.length;\n\t\t\tlet source = formatsAfter;\n\n\t\t\tif ( formatsBefore.length > formatsAfter.length ) {\n\t\t\t\tsource = formatsBefore;\n\t\t\t}\n\n\t\t\t// If the amount of formats before the caret and after the caret is\n\t\t\t// different, the caret is at a format boundary.\n\t\t\tif ( formatsBefore.length < formatsAfter.length ) {\n\t\t\t\tif (\n\t\t\t\t\t! isReverse &&\n\t\t\t\t\tcurrentActiveFormats.length < formatsAfter.length\n\t\t\t\t) {\n\t\t\t\t\tnewActiveFormatsLength++;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tisReverse &&\n\t\t\t\t\tcurrentActiveFormats.length > formatsBefore.length\n\t\t\t\t) {\n\t\t\t\t\tnewActiveFormatsLength--;\n\t\t\t\t}\n\t\t\t} else if ( formatsBefore.length > formatsAfter.length ) {\n\t\t\t\tif (\n\t\t\t\t\t! isReverse &&\n\t\t\t\t\tcurrentActiveFormats.length > formatsAfter.length\n\t\t\t\t) {\n\t\t\t\t\tnewActiveFormatsLength--;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tisReverse &&\n\t\t\t\t\tcurrentActiveFormats.length < formatsBefore.length\n\t\t\t\t) {\n\t\t\t\t\tnewActiveFormatsLength++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( newActiveFormatsLength === currentActiveFormats.length ) {\n\t\t\t\trecord.current._newActiveFormats = isReverse\n\t\t\t\t\t? formatsBefore\n\t\t\t\t\t: formatsAfter;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconst newActiveFormats = source.slice( 0, newActiveFormatsLength );\n\t\t\tconst newValue = {\n\t\t\t\t...record.current,\n\t\t\t\tactiveFormats: newActiveFormats,\n\t\t\t};\n\t\t\trecord.current = newValue;\n\t\t\tapplyRecord( newValue );\n\t\t\tforceRender();\n\t\t}\n\n\t\telement.addEventListener( 'keydown', onKeyDown );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'keydown', onKeyDown );\n\t\t};\n\t}, [] );\n}\n"]}