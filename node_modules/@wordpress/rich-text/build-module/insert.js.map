{"version":3,"sources":["@wordpress/rich-text/src/insert.js"],"names":["create","normaliseFormats","insert","value","valueToInsert","startIndex","start","endIndex","end","formats","replacements","text","index","length","slice","concat"],"mappings":"AAAA;AACA;AACA;AAEA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,MAAT,CACNC,KADM,EAENC,aAFM,EAGNC,UAAU,GAAGF,KAAK,CAACG,KAHb,EAINC,QAAQ,GAAGJ,KAAK,CAACK,GAJX,EAKL;AACD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAAkCR,KAAxC;;AAEA,MAAK,OAAOC,aAAP,KAAyB,QAA9B,EAAyC;AACxCA,IAAAA,aAAa,GAAGJ,MAAM,CAAE;AAAEW,MAAAA,IAAI,EAAEP;AAAR,KAAF,CAAtB;AACA;;AAED,QAAMQ,KAAK,GAAGP,UAAU,GAAGD,aAAa,CAACO,IAAd,CAAmBE,MAA9C;AAEA,SAAOZ,gBAAgB,CAAE;AACxBQ,IAAAA,OAAO,EAAEA,OAAO,CACdK,KADO,CACA,CADA,EACGT,UADH,EAEPU,MAFO,CAECX,aAAa,CAACK,OAFf,EAEwBA,OAAO,CAACK,KAAR,CAAeP,QAAf,CAFxB,CADe;AAIxBG,IAAAA,YAAY,EAAEA,YAAY,CACxBI,KADY,CACL,CADK,EACFT,UADE,EAEZU,MAFY,CAGZX,aAAa,CAACM,YAHF,EAIZA,YAAY,CAACI,KAAb,CAAoBP,QAApB,CAJY,CAJU;AAUxBI,IAAAA,IAAI,EACHA,IAAI,CAACG,KAAL,CAAY,CAAZ,EAAeT,UAAf,IACAD,aAAa,CAACO,IADd,GAEAA,IAAI,CAACG,KAAL,CAAYP,QAAZ,CAbuB;AAcxBD,IAAAA,KAAK,EAAEM,KAdiB;AAexBJ,IAAAA,GAAG,EAAEI;AAfmB,GAAF,CAAvB;AAiBA","sourcesContent":["/**\n * Internal dependencies\n */\n\nimport { create } from './create';\nimport { normaliseFormats } from './normalise-formats';\n\n/** @typedef {import('./create').RichTextValue} RichTextValue */\n\n/**\n * Insert a Rich Text value, an HTML string, or a plain text string, into a\n * Rich Text value at the given `startIndex`. Any content between `startIndex`\n * and `endIndex` will be removed. Indices are retrieved from the selection if\n * none are provided.\n *\n * @param {RichTextValue}        value         Value to modify.\n * @param {RichTextValue|string} valueToInsert Value to insert.\n * @param {number}               [startIndex]  Start index.\n * @param {number}               [endIndex]    End index.\n *\n * @return {RichTextValue} A new value with the value inserted.\n */\nexport function insert(\n\tvalue,\n\tvalueToInsert,\n\tstartIndex = value.start,\n\tendIndex = value.end\n) {\n\tconst { formats, replacements, text } = value;\n\n\tif ( typeof valueToInsert === 'string' ) {\n\t\tvalueToInsert = create( { text: valueToInsert } );\n\t}\n\n\tconst index = startIndex + valueToInsert.text.length;\n\n\treturn normaliseFormats( {\n\t\tformats: formats\n\t\t\t.slice( 0, startIndex )\n\t\t\t.concat( valueToInsert.formats, formats.slice( endIndex ) ),\n\t\treplacements: replacements\n\t\t\t.slice( 0, startIndex )\n\t\t\t.concat(\n\t\t\t\tvalueToInsert.replacements,\n\t\t\t\treplacements.slice( endIndex )\n\t\t\t),\n\t\ttext:\n\t\t\ttext.slice( 0, startIndex ) +\n\t\t\tvalueToInsert.text +\n\t\t\ttext.slice( endIndex ),\n\t\tstart: index,\n\t\tend: index,\n\t} );\n}\n"]}