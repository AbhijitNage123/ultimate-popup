/**
 * Given a string, returns a new string with dash separators converted to
 * camelCase equivalent. This is not as aggressive as `_.camelCase` in
 * converting to uppercase, where Lodash will also capitalize letters
 * following numbers.
 *
 * @param {string} string Input dash-delimited string.
 *
 * @return {string} Camel-cased string.
 */
export function camelCaseDash(string: string): string;
/**
 * Default request to global transformation
 *
 * Transform @wordpress dependencies:
 *
 *   request `@wordpress/api-fetch` becomes `wp.apiFetch`
 *   request `@wordpress/i18n` becomes `wp.i18n`
 *
 * @type {import('.').RequestToExternal}
 */
export function defaultRequestToExternal(request: string): string | void | string[];
/**
 * Default request to WordPress script handle transformation
 *
 * Transform @wordpress dependencies:
 *
 *   request `@wordpress/i18n` becomes `wp-i18n`
 *   request `@wordpress/escape-html` becomes `wp-escape-html`
 *
 * @type {import('.').RequestToHandle}
 */
export function defaultRequestToHandle(request: string): string | void;
//# sourceMappingURL=util.d.ts.map