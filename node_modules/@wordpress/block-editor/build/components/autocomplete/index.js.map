{"version":3,"sources":["@wordpress/block-editor/src/components/autocomplete/index.js"],"names":["EMPTY_ARRAY","useCompleters","completers","name","filteredCompleters","concat","blockAutocompleter","map","clone","useBlockEditorAutocompleteProps","props","BlockEditorAutocomplete"],"mappings":";;;;;;;;;;AAaA;;;;AAVA;;AAKA;;AACA;;AAKA;;AAKA;;AACA;;AApBA;AACA;AACA;;AAGA;AACA;AACA;;AASA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,WAAW,GAAG,EAApB;;AAEA,SAASC,aAAT,CAAwB;AAAEC,EAAAA,UAAU,GAAGF;AAAf,CAAxB,EAAuD;AACtD,QAAM;AAAEG,IAAAA;AAAF,MAAW,mCAAjB;AACA,SAAO,sBAAS,MAAM;AACrB,QAAIC,kBAAkB,GAAGF,UAAzB;;AAEA,QAAKC,IAAI,KAAK,kCAAd,EAAsC;AACrCC,MAAAA,kBAAkB,GAAGA,kBAAkB,CAACC,MAAnB,CAA2B,CAC/CC,cAD+C,CAA3B,CAArB;AAGA;;AAED,QAAK,sBAAW,gCAAX,CAAL,EAAqD;AACpD;AACA,UAAKF,kBAAkB,KAAKF,UAA5B,EAAyC;AACxCE,QAAAA,kBAAkB,GAAGA,kBAAkB,CAACG,GAAnB,CAAwBC,aAAxB,CAArB;AACA;;AAEDJ,MAAAA,kBAAkB,GAAG,yBACpB,gCADoB,EAEpBA,kBAFoB,EAGpBD,IAHoB,CAArB;AAKA;;AAED,WAAOC,kBAAP;AACA,GAvBM,EAuBJ,CAAEF,UAAF,EAAcC,IAAd,CAvBI,CAAP;AAwBA;;AAEM,SAASM,+BAAT,CAA0CC,KAA1C,EAAkD;AACxD,SAAO,gDAAsB,EAC5B,GAAGA,KADyB;AAE5BR,IAAAA,UAAU,EAAED,aAAa,CAAES,KAAF;AAFG,GAAtB,CAAP;AAIA;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,uBAAT,CAAkCD,KAAlC,EAA0C;AACzC,SAAO,4BAAC,wBAAD,6BAAmBA,KAAnB;AAA2B,IAAA,UAAU,EAAGT,aAAa,CAAES,KAAF;AAArD,KAAP;AACA;AAED;AACA;AACA;;;eACeC,uB","sourcesContent":["/**\n * External dependencies\n */\nimport { clone } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { applyFilters, hasFilter } from '@wordpress/hooks';\nimport {\n\tAutocomplete,\n\t__unstableUseAutocompleteProps as useAutocompleteProps,\n} from '@wordpress/components';\nimport { useMemo } from '@wordpress/element';\nimport { getDefaultBlockName } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { useBlockEditContext } from '../block-edit/context';\nimport blockAutocompleter from '../../autocompleters/block';\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation.\n *\n * @type {Array}\n */\nconst EMPTY_ARRAY = [];\n\nfunction useCompleters( { completers = EMPTY_ARRAY } ) {\n\tconst { name } = useBlockEditContext();\n\treturn useMemo( () => {\n\t\tlet filteredCompleters = completers;\n\n\t\tif ( name === getDefaultBlockName() ) {\n\t\t\tfilteredCompleters = filteredCompleters.concat( [\n\t\t\t\tblockAutocompleter,\n\t\t\t] );\n\t\t}\n\n\t\tif ( hasFilter( 'editor.Autocomplete.completers' ) ) {\n\t\t\t// Provide copies so filters may directly modify them.\n\t\t\tif ( filteredCompleters === completers ) {\n\t\t\t\tfilteredCompleters = filteredCompleters.map( clone );\n\t\t\t}\n\n\t\t\tfilteredCompleters = applyFilters(\n\t\t\t\t'editor.Autocomplete.completers',\n\t\t\t\tfilteredCompleters,\n\t\t\t\tname\n\t\t\t);\n\t\t}\n\n\t\treturn filteredCompleters;\n\t}, [ completers, name ] );\n}\n\nexport function useBlockEditorAutocompleteProps( props ) {\n\treturn useAutocompleteProps( {\n\t\t...props,\n\t\tcompleters: useCompleters( props ),\n\t} );\n}\n\n/**\n * Wrap the default Autocomplete component with one that supports a filter hook\n * for customizing its list of autocompleters.\n *\n * @type {import('react').FC}\n */\nfunction BlockEditorAutocomplete( props ) {\n\treturn <Autocomplete { ...props } completers={ useCompleters( props ) } />;\n}\n\n/**\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/autocomplete/README.md\n */\nexport default BlockEditorAutocomplete;\n"]}