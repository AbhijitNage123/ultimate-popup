{"version":3,"sources":["@wordpress/block-editor/src/components/list-view/index.js"],"names":["noop","expanded","state","action","type","clientId","ListView","blocks","showOnlyCurrentHierarchy","onSelect","__experimentalFeatures","__experimentalPersistentListViewFeatures","props","clientIdsTree","selectedClientIds","selectBlock","blockEditorStore","selectEditorBlock","expandedState","setExpandedState","ref","dropZoneRef","target","blockDropTarget","elementRef","treeGridRef","isMounted","current","expand","collapse","expandRow","row","dataset","block","collapseRow","contextValue","isTreeGridMounted"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\n\nimport { useMergeRefs } from '@wordpress/compose';\nimport { __experimentalTreeGrid as TreeGrid } from '@wordpress/components';\nimport { useDispatch } from '@wordpress/data';\nimport {\n\tuseCallback,\n\tuseEffect,\n\tuseMemo,\n\tuseRef,\n\tuseReducer,\n} from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport ListViewBranch from './branch';\nimport { ListViewContext } from './context';\nimport ListViewDropIndicator from './drop-indicator';\nimport useListViewClientIds from './use-list-view-client-ids';\nimport useListViewDropZone from './use-list-view-drop-zone';\nimport { store as blockEditorStore } from '../../store';\n\nconst noop = () => {};\nconst expanded = ( state, action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'expand':\n\t\t\treturn { ...state, ...{ [ action.clientId ]: true } };\n\t\tcase 'collapse':\n\t\t\treturn { ...state, ...{ [ action.clientId ]: false } };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\n/**\n * Wrap `ListViewRows` with `TreeGrid`. ListViewRows is a\n * recursive component (it renders itself), so this ensures TreeGrid is only\n * present at the very top of the navigation grid.\n *\n * @param {Object}   props                                          Components props.\n * @param {Array}    props.blocks                                   Custom subset of block client IDs to be used instead of the default hierarchy.\n * @param {Function} props.onSelect                                 Block selection callback.\n * @param {boolean}  props.showNestedBlocks                         Flag to enable displaying nested blocks.\n * @param {boolean}  props.showOnlyCurrentHierarchy                 Flag to limit the list to the current hierarchy of blocks.\n * @param {boolean}  props.__experimentalFeatures                   Flag to enable experimental features.\n * @param {boolean}  props.__experimentalPersistentListViewFeatures Flag to enable features for the Persistent List View experiment.\n */\nexport default function ListView( {\n\tblocks,\n\tshowOnlyCurrentHierarchy,\n\tonSelect = noop,\n\t__experimentalFeatures,\n\t__experimentalPersistentListViewFeatures,\n\t...props\n} ) {\n\tconst { clientIdsTree, selectedClientIds } = useListViewClientIds(\n\t\tblocks,\n\t\tshowOnlyCurrentHierarchy,\n\t\t__experimentalPersistentListViewFeatures\n\t);\n\tconst { selectBlock } = useDispatch( blockEditorStore );\n\tconst selectEditorBlock = useCallback(\n\t\t( clientId ) => {\n\t\t\tselectBlock( clientId );\n\t\t\tonSelect( clientId );\n\t\t},\n\t\t[ selectBlock, onSelect ]\n\t);\n\tconst [ expandedState, setExpandedState ] = useReducer( expanded, {} );\n\n\tconst { ref: dropZoneRef, target: blockDropTarget } = useListViewDropZone();\n\tconst elementRef = useRef();\n\tconst treeGridRef = useMergeRefs( [ elementRef, dropZoneRef ] );\n\n\tconst isMounted = useRef( false );\n\tuseEffect( () => {\n\t\tisMounted.current = true;\n\t}, [] );\n\n\tconst expand = ( clientId ) => {\n\t\tif ( ! clientId ) {\n\t\t\treturn;\n\t\t}\n\t\tsetExpandedState( { type: 'expand', clientId } );\n\t};\n\tconst collapse = ( clientId ) => {\n\t\tif ( ! clientId ) {\n\t\t\treturn;\n\t\t}\n\t\tsetExpandedState( { type: 'collapse', clientId } );\n\t};\n\tconst expandRow = ( row ) => {\n\t\texpand( row?.dataset?.block );\n\t};\n\tconst collapseRow = ( row ) => {\n\t\tcollapse( row?.dataset?.block );\n\t};\n\n\tconst contextValue = useMemo(\n\t\t() => ( {\n\t\t\t__experimentalFeatures,\n\t\t\t__experimentalPersistentListViewFeatures,\n\t\t\tisTreeGridMounted: isMounted.current,\n\t\t\texpandedState,\n\t\t\texpand,\n\t\t\tcollapse,\n\t\t} ),\n\t\t[\n\t\t\t__experimentalFeatures,\n\t\t\t__experimentalPersistentListViewFeatures,\n\t\t\tisMounted.current,\n\t\t\texpandedState,\n\t\t\texpand,\n\t\t\tcollapse,\n\t\t]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<ListViewDropIndicator\n\t\t\t\tlistViewRef={ elementRef }\n\t\t\t\tblockDropTarget={ blockDropTarget }\n\t\t\t/>\n\t\t\t<TreeGrid\n\t\t\t\tclassName=\"block-editor-list-view-tree\"\n\t\t\t\taria-label={ __( 'Block navigation structure' ) }\n\t\t\t\tref={ treeGridRef }\n\t\t\t\tonCollapseRow={ collapseRow }\n\t\t\t\tonExpandRow={ expandRow }\n\t\t\t>\n\t\t\t\t<ListViewContext.Provider value={ contextValue }>\n\t\t\t\t\t<ListViewBranch\n\t\t\t\t\t\tblocks={ clientIdsTree }\n\t\t\t\t\t\tselectBlock={ selectEditorBlock }\n\t\t\t\t\t\tselectedBlockClientIds={ selectedClientIds }\n\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t/>\n\t\t\t\t</ListViewContext.Provider>\n\t\t\t</TreeGrid>\n\t\t</>\n\t);\n}\n"]}