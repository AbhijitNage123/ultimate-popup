"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classnames = _interopRequireDefault(require("classnames"));

var _data = require("@wordpress/data");

var _context = require("./context");

var _blockSlot = _interopRequireDefault(require("./block-slot"));

var _blockSelectButton = _interopRequireDefault(require("./block-select-button"));

var _blockDraggable = _interopRequireDefault(require("../block-draggable"));

var _store = require("../../store");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
const ListViewBlockContents = (0, _element.forwardRef)(({
  onClick,
  onToggleExpanded,
  block,
  isSelected,
  position,
  siblingBlockCount,
  level,
  ...props
}, ref) => {
  const {
    __experimentalFeatures
  } = (0, _context.useListViewContext)();
  const {
    clientId
  } = block;
  const {
    blockMovingClientId,
    selectedBlockInBlockEditor
  } = (0, _data.useSelect)(select => {
    const {
      getBlockRootClientId,
      hasBlockMovingClientId,
      getSelectedBlockClientId
    } = select(_store.store);
    return {
      rootClientId: getBlockRootClientId(clientId) || '',
      blockMovingClientId: hasBlockMovingClientId(),
      selectedBlockInBlockEditor: getSelectedBlockClientId()
    };
  }, [clientId]);
  const isBlockMoveTarget = blockMovingClientId && selectedBlockInBlockEditor === clientId;
  const className = (0, _classnames.default)('block-editor-list-view-block-contents', {
    'is-dropping-before': isBlockMoveTarget
  });
  return (0, _element.createElement)(_blockDraggable.default, {
    clientIds: [block.clientId]
  }, ({
    draggable,
    onDragStart,
    onDragEnd
  }) => __experimentalFeatures ? (0, _element.createElement)(_blockSlot.default, (0, _extends2.default)({
    ref: ref,
    className: className,
    block: block,
    onToggleExpanded: onToggleExpanded,
    isSelected: isSelected,
    position: position,
    siblingBlockCount: siblingBlockCount,
    level: level,
    draggable: draggable && __experimentalFeatures,
    onDragStart: onDragStart,
    onDragEnd: onDragEnd
  }, props)) : (0, _element.createElement)(_blockSelectButton.default, (0, _extends2.default)({
    ref: ref,
    className: className,
    block: block,
    onClick: onClick,
    onToggleExpanded: onToggleExpanded,
    isSelected: isSelected,
    position: position,
    siblingBlockCount: siblingBlockCount,
    level: level,
    draggable: draggable,
    onDragStart: onDragStart,
    onDragEnd: onDragEnd
  }, props)));
});
var _default = ListViewBlockContents;
exports.default = _default;
//# sourceMappingURL=block-contents.js.map