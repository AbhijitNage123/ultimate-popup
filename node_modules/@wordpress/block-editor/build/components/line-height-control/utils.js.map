{"version":3,"sources":["@wordpress/block-editor/src/components/line-height-control/utils.js"],"names":["BASE_DEFAULT_VALUE","STEP","RESET_VALUE","isLineHeightDefined","lineHeight","undefined"],"mappings":";;;;;;;AAAO,MAAMA,kBAAkB,GAAG,GAA3B;;AACA,MAAMC,IAAI,GAAG,GAAb;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,MAAMC,WAAW,GAAG,EAApB;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACO,SAASC,mBAAT,CAA8BC,UAA9B,EAA2C;AACjD,SAAOA,UAAU,KAAKC,SAAf,IAA4BD,UAAU,KAAKF,WAAlD;AACA","sourcesContent":["export const BASE_DEFAULT_VALUE = 1.5;\nexport const STEP = 0.1;\n/**\n * There are varying value types within LineHeightControl:\n *\n * {undefined} Initial value. No changes from the user.\n * {string} Input value. Value consumed/outputted by the input. Empty would be ''.\n * {number} Block attribute type. Input value needs to be converted for attribute setting.\n *\n * Note: If the value is undefined, the input requires it to be an empty string ('')\n * in order to be considered \"controlled\" by props (rather than internal state).\n */\nexport const RESET_VALUE = '';\n\n/**\n * Determines if the lineHeight attribute has been properly defined.\n *\n * @param {any} lineHeight The value to check.\n *\n * @return {boolean} Whether the lineHeight attribute is valid.\n */\nexport function isLineHeightDefined( lineHeight ) {\n\treturn lineHeight !== undefined && lineHeight !== RESET_VALUE;\n}\n"]}