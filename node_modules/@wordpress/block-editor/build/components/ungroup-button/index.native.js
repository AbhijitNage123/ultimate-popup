"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UngroupButton = UngroupButton;
exports.default = void 0;

var _element = require("@wordpress/element");

var _lodash = require("lodash");

var _blocks = require("@wordpress/blocks");

var _components = require("@wordpress/components");

var _i18n = require("@wordpress/i18n");

var _data = require("@wordpress/data");

var _compose = require("@wordpress/compose");

var _icon = _interopRequireDefault(require("./icon"));

var _store = require("../../store");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function UngroupButton({
  onConvertFromGroup,
  isUngroupable = false
}) {
  if (!isUngroupable) {
    return null;
  }

  return (0, _element.createElement)(_components.ToolbarGroup, null, (0, _element.createElement)(_components.ToolbarButton, {
    title: (0, _i18n.__)('Ungroup'),
    icon: _icon.default,
    onClick: onConvertFromGroup
  }));
}

var _default = (0, _compose.compose)([(0, _data.withSelect)(select => {
  const {
    getSelectedBlockClientId,
    getBlock
  } = select(_store.store);
  const {
    getGroupingBlockName
  } = select(_blocks.store);
  const selectedId = getSelectedBlockClientId();
  const selectedBlock = getBlock(selectedId);
  const groupingBlockName = getGroupingBlockName();
  const isUngroupable = selectedBlock && selectedBlock.innerBlocks && !!selectedBlock.innerBlocks.length && selectedBlock.name === groupingBlockName;
  const innerBlocks = isUngroupable ? selectedBlock.innerBlocks : [];
  return {
    isUngroupable,
    clientId: selectedId,
    innerBlocks
  };
}), (0, _data.withDispatch)((dispatch, {
  clientId,
  innerBlocks,
  onToggle = _lodash.noop
}) => {
  const {
    replaceBlocks
  } = dispatch(_store.store);
  return {
    onConvertFromGroup() {
      if (!innerBlocks.length) {
        return;
      }

      replaceBlocks(clientId, innerBlocks);
      onToggle();
    }

  };
})])(UngroupButton);

exports.default = _default;
//# sourceMappingURL=index.native.js.map