{"version":3,"sources":["@wordpress/block-editor/src/components/default-block-appender/index.native.js"],"names":["DefaultBlockAppender","isLocked","isVisible","onAppend","placeholder","containerStyle","showSeparator","value","styles","blockHolder","select","ownProps","getBlockCount","getBlockName","isBlockValid","getTemplateLock","blockEditorStore","isEmpty","rootClientId","isLastBlockDefault","lastBlockClientId","isLastBlockValid","dispatch","insertDefaultBlock","startTyping","undefined"],"mappings":";;;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AApBA;AACA;AACA;;AAGA;AACA;AACA;;AAQA;AACA;AACA;AAKO,SAASA,oBAAT,CAA+B;AACrCC,EAAAA,QADqC;AAErCC,EAAAA,SAFqC;AAGrCC,EAAAA,QAHqC;AAIrCC,EAAAA,WAJqC;AAKrCC,EAAAA,cALqC;AAMrCC,EAAAA;AANqC,CAA/B,EAOH;AACH,MAAKL,QAAQ,IAAI,CAAEC,SAAnB,EAA+B;AAC9B,WAAO,IAAP;AACA;;AAED,QAAMK,KAAK,GACV,OAAOH,WAAP,KAAuB,QAAvB,GACG,kCAAgBA,WAAhB,CADH,GAEG,cAAI,gBAAJ,CAHJ;AAKA,SACC,4BAAC,qCAAD;AAA0B,IAAA,OAAO,EAAGD;AAApC,KACC,4BAAC,iBAAD;AACC,IAAA,KAAK,EAAG,CACPK,eAAOC,WADA,EAEPH,aAAa,IAAID,cAFV,CADT;AAKC,IAAA,aAAa,EAAC;AALf,KAOGC,aAAa,GACd,4BAAC,uBAAD,OADc,GAGd,4BAAC,qBAAD;AAAU,IAAA,WAAW,EAAGC,KAAxB;AAAgC,IAAA,QAAQ,EAAG,MAAM,CAAE;AAAnD,IAVF,CADD,CADD;AAiBA;;eAEc,sBACd,sBAAY,CAAEG,MAAF,EAAUC,QAAV,KAAwB;AACnC,QAAM;AACLC,IAAAA,aADK;AAELC,IAAAA,YAFK;AAGLC,IAAAA,YAHK;AAILC,IAAAA;AAJK,MAKFL,MAAM,CAAEM,YAAF,CALV;AAOA,QAAMC,OAAO,GAAG,CAAEL,aAAa,CAAED,QAAQ,CAACO,YAAX,CAA/B;AACA,QAAMC,kBAAkB,GACvBN,YAAY,CAAEF,QAAQ,CAACS,iBAAX,CAAZ,KACA,kCAFD;AAGA,QAAMC,gBAAgB,GAAGP,YAAY,CAAEH,QAAQ,CAACS,iBAAX,CAArC;AAEA,SAAO;AACNlB,IAAAA,SAAS,EAAEe,OAAO,IAAI,CAAEE,kBAAb,IAAmC,CAAEE,gBAD1C;AAENpB,IAAAA,QAAQ,EAAE,CAAC,CAAEc,eAAe,CAAEJ,QAAQ,CAACO,YAAX;AAFtB,GAAP;AAIA,CAlBD,CADc,EAoBd,wBAAc,CAAEI,QAAF,EAAYX,QAAZ,KAA0B;AACvC,QAAM;AAAEY,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MAAsCF,QAAQ,CACnDN,YADmD,CAApD;AAIA,SAAO;AACNb,IAAAA,QAAQ,GAAG;AACV,YAAM;AAAEe,QAAAA;AAAF,UAAmBP,QAAzB;AAEAY,MAAAA,kBAAkB,CAAEE,SAAF,EAAaP,YAAb,CAAlB;AACAM,MAAAA,WAAW;AACX;;AANK,GAAP;AAQA,CAbD,CApBc,EAkCZxB,oBAlCY,C","sourcesContent":["/**\n * External dependencies\n */\nimport { TouchableWithoutFeedback, View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { RichText } from '@wordpress/block-editor';\nimport { compose } from '@wordpress/compose';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { getDefaultBlockName } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport BlockInsertionPoint from '../block-list/insertion-point';\nimport styles from './style.scss';\nimport { store as blockEditorStore } from '../../store';\n\nexport function DefaultBlockAppender( {\n\tisLocked,\n\tisVisible,\n\tonAppend,\n\tplaceholder,\n\tcontainerStyle,\n\tshowSeparator,\n} ) {\n\tif ( isLocked || ! isVisible ) {\n\t\treturn null;\n\t}\n\n\tconst value =\n\t\ttypeof placeholder === 'string'\n\t\t\t? decodeEntities( placeholder )\n\t\t\t: __( 'Start writingâ€¦' );\n\n\treturn (\n\t\t<TouchableWithoutFeedback onPress={ onAppend }>\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\tstyles.blockHolder,\n\t\t\t\t\tshowSeparator && containerStyle,\n\t\t\t\t] }\n\t\t\t\tpointerEvents=\"box-only\"\n\t\t\t>\n\t\t\t\t{ showSeparator ? (\n\t\t\t\t\t<BlockInsertionPoint />\n\t\t\t\t) : (\n\t\t\t\t\t<RichText placeholder={ value } onChange={ () => {} } />\n\t\t\t\t) }\n\t\t\t</View>\n\t\t</TouchableWithoutFeedback>\n\t);\n}\n\nexport default compose(\n\twithSelect( ( select, ownProps ) => {\n\t\tconst {\n\t\t\tgetBlockCount,\n\t\t\tgetBlockName,\n\t\t\tisBlockValid,\n\t\t\tgetTemplateLock,\n\t\t} = select( blockEditorStore );\n\n\t\tconst isEmpty = ! getBlockCount( ownProps.rootClientId );\n\t\tconst isLastBlockDefault =\n\t\t\tgetBlockName( ownProps.lastBlockClientId ) ===\n\t\t\tgetDefaultBlockName();\n\t\tconst isLastBlockValid = isBlockValid( ownProps.lastBlockClientId );\n\n\t\treturn {\n\t\t\tisVisible: isEmpty || ! isLastBlockDefault || ! isLastBlockValid,\n\t\t\tisLocked: !! getTemplateLock( ownProps.rootClientId ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => {\n\t\tconst { insertDefaultBlock, startTyping } = dispatch(\n\t\t\tblockEditorStore\n\t\t);\n\n\t\treturn {\n\t\t\tonAppend() {\n\t\t\t\tconst { rootClientId } = ownProps;\n\n\t\t\t\tinsertDefaultBlock( undefined, rootClientId );\n\t\t\t\tstartTyping();\n\t\t\t},\n\t\t};\n\t} )\n)( DefaultBlockAppender );\n"]}