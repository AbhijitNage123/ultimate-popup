{"version":3,"sources":["@wordpress/block-editor/src/components/use-canvas-click-redirect/index.js"],"names":["isTabbableTextField","isTextField","focus","tabbable","isTabbableIndex","useCanvasClickRedirect","node","onMouseDown","event","target","focusableNodes","focusable","find","bottom","getBoundingClientRect","clientY","preventDefault","addEventListener"],"mappings":";;;;;;;AAGA;;AAKA;;AACA;;AATA;AACA;AACA;;AAGA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,mBAAmB,GAAG,uBAAW,CACtCC,gBADsC,EAEtCC,WAAMC,QAAN,CAAeC,eAFuB,CAAX,CAA5B;;AAKO,SAASC,sBAAT,GAAkC;AACxC,SAAO,2BAAgBC,IAAF,IAAY;AAChC,aAASC,WAAT,CAAsBC,KAAtB,EAA8B;AAC7B;AACA,UAAKA,KAAK,CAACC,MAAN,KAAiBH,IAAtB,EAA6B;AAC5B;AACA;;AAED,YAAMI,cAAc,GAAGR,WAAMS,SAAN,CAAgBC,IAAhB,CAAsBN,IAAtB,CAAvB;;AACA,YAAMG,MAAM,GAAG,sBAAUC,cAAV,EAA0BV,mBAA1B,CAAf;;AAEA,UAAK,CAAES,MAAP,EAAgB;AACf;AACA;;AAED,YAAM;AAAEI,QAAAA;AAAF,UAAaJ,MAAM,CAACK,qBAAP,EAAnB,CAb6B,CAe7B;;AACA,UAAKN,KAAK,CAACO,OAAN,GAAgBF,MAArB,EAA8B;AAC7B;AACA;;AAED,2CAA4BJ,MAA5B,EAAoC,IAApC;AACAD,MAAAA,KAAK,CAACQ,cAAN;AACA;;AAEDV,IAAAA,IAAI,CAACW,gBAAL,CAAuB,WAAvB,EAAoCV,WAApC;AAEA,WAAO,MAAM;AACZD,MAAAA,IAAI,CAACW,gBAAL,CAAuB,WAAvB,EAAoCV,WAApC;AACA,KAFD;AAGA,GA9BM,EA8BJ,EA9BI,CAAP;AA+BA","sourcesContent":["/**\n * External dependencies\n */\nimport { overEvery, findLast } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useRefEffect } from '@wordpress/compose';\nimport { focus, isTextField, placeCaretAtHorizontalEdge } from '@wordpress/dom';\n\n/**\n * Given an element, returns true if the element is a tabbable text field, or\n * false otherwise.\n *\n * @param {Element} element Element to test.\n *\n * @return {boolean} Whether element is a tabbable text field.\n */\nconst isTabbableTextField = overEvery( [\n\tisTextField,\n\tfocus.tabbable.isTabbableIndex,\n] );\n\nexport function useCanvasClickRedirect() {\n\treturn useRefEffect( ( node ) => {\n\t\tfunction onMouseDown( event ) {\n\t\t\t// Only handle clicks on the canvas, not the content.\n\t\t\tif ( event.target !== node ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst focusableNodes = focus.focusable.find( node );\n\t\t\tconst target = findLast( focusableNodes, isTabbableTextField );\n\n\t\t\tif ( ! target ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { bottom } = target.getBoundingClientRect();\n\n\t\t\t// Ensure the click is below the last block.\n\t\t\tif ( event.clientY < bottom ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tplaceCaretAtHorizontalEdge( target, true );\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tnode.addEventListener( 'mousedown', onMouseDown );\n\n\t\treturn () => {\n\t\t\tnode.addEventListener( 'mousedown', onMouseDown );\n\t\t};\n\t}, [] );\n}\n"]}