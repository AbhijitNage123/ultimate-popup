{"version":3,"sources":["@wordpress/block-editor/src/components/text-decoration-and-transform/index.js"],"names":["TextDecorationAndTransformEdit","props","decorationAvailable","transformAvailable"],"mappings":";;;;;;;;;AAGA;;AAIA;;AAPA;AACA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,8BAAT,CAAyCC,KAAzC,EAAiD;AAC/D,QAAMC,mBAAmB,GAAG,CAAE,iDAA6BD,KAA7B,CAA9B;AACA,QAAME,kBAAkB,GAAG,CAAE,+CAA4BF,KAA5B,CAA7B;;AAEA,MAAK,CAAEC,mBAAF,IAAyB,CAAEC,kBAAhC,EAAqD;AACpD,WAAO,IAAP;AACA;;AAED,SACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGD,mBAAmB,IAAI,4BAAC,kCAAD,EAAyBD,KAAzB,CAD1B,EAEGE,kBAAkB,IAAI,4BAAC,gCAAD,EAAwBF,KAAxB,CAFzB,CADD;AAMA","sourcesContent":["/**\n * Internal dependencies\n */\nimport {\n\tTextDecorationEdit,\n\tuseIsTextDecorationDisabled,\n} from '../../hooks/text-decoration';\nimport {\n\tTextTransformEdit,\n\tuseIsTextTransformDisabled,\n} from '../../hooks/text-transform';\n\n/**\n * Handles grouping related text decoration and text transform edit components\n * so they can be laid out in a more flexible manner within the Typography\n * InspectorControls panel.\n *\n * @param {Object} props Block props to be passed on to individual controls.\n *\n * @return {WPElement} Component containing text decoration or transform controls.\n */\nexport default function TextDecorationAndTransformEdit( props ) {\n\tconst decorationAvailable = ! useIsTextDecorationDisabled( props );\n\tconst transformAvailable = ! useIsTextTransformDisabled( props );\n\n\tif ( ! decorationAvailable && ! transformAvailable ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"block-editor-text-decoration-and-transform\">\n\t\t\t{ decorationAvailable && <TextDecorationEdit { ...props } /> }\n\t\t\t{ transformAvailable && <TextTransformEdit { ...props } /> }\n\t\t</div>\n\t);\n}\n"]}