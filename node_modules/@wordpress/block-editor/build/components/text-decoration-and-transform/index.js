"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = TextDecorationAndTransformEdit;

var _element = require("@wordpress/element");

var _textDecoration = require("../../hooks/text-decoration");

var _textTransform = require("../../hooks/text-transform");

/**
 * Internal dependencies
 */

/**
 * Handles grouping related text decoration and text transform edit components
 * so they can be laid out in a more flexible manner within the Typography
 * InspectorControls panel.
 *
 * @param {Object} props Block props to be passed on to individual controls.
 *
 * @return {WPElement} Component containing text decoration or transform controls.
 */
function TextDecorationAndTransformEdit(props) {
  const decorationAvailable = !(0, _textDecoration.useIsTextDecorationDisabled)(props);
  const transformAvailable = !(0, _textTransform.useIsTextTransformDisabled)(props);

  if (!decorationAvailable && !transformAvailable) {
    return null;
  }

  return (0, _element.createElement)("div", {
    className: "block-editor-text-decoration-and-transform"
  }, decorationAvailable && (0, _element.createElement)(_textDecoration.TextDecorationEdit, props), transformAvailable && (0, _element.createElement)(_textTransform.TextTransformEdit, props));
}
//# sourceMappingURL=index.js.map