"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _reactNative = require("react-native");

var _compose = require("@wordpress/compose");

var _components = require("@wordpress/components");

var _icons = require("@wordpress/icons");

var _inserter = _interopRequireDefault(require("../inserter"));

var _styles = _interopRequireDefault(require("./styles.scss"));

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function ButtonBlockAppender({
  rootClientId,
  getStylesFromColorScheme,
  showSeparator,
  isFloating = false,
  onAddBlock
}) {
  const appenderStyle = { ..._styles.default.appender,
    ...getStylesFromColorScheme(_styles.default.appenderLight, _styles.default.appenderDark)
  };
  const addBlockButtonStyle = getStylesFromColorScheme(_styles.default.addBlockButton, isFloating ? _styles.default.floatingAddBlockButtonDark : _styles.default.addBlockButtonDark);
  return (0, _element.createElement)(_element.Fragment, null, (0, _element.createElement)(_inserter.default, {
    rootClientId: rootClientId,
    renderToggle: ({
      onToggle,
      disabled,
      isOpen
    }) => (0, _element.createElement)(_components.Button, {
      onClick: onAddBlock || onToggle,
      "aria-expanded": isOpen,
      disabled: disabled,
      fixedRatio: false
    }, (0, _element.createElement)(_reactNative.View, {
      style: [appenderStyle, isFloating && _styles.default.floatingAppender]
    }, (0, _element.createElement)(_icons.Icon, {
      icon: _icons.plusCircleFilled,
      style: addBlockButtonStyle,
      color: addBlockButtonStyle.color,
      size: addBlockButtonStyle.size
    }))),
    isAppender: true,
    showSeparator: showSeparator
  }));
}
/**
 * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/button-block-appender/README.md
 */


var _default = (0, _compose.withPreferredColorScheme)(ButtonBlockAppender);

exports.default = _default;
//# sourceMappingURL=index.native.js.map