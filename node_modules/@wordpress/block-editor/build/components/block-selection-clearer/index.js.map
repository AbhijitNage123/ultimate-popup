{"version":3,"sources":["@wordpress/block-editor/src/components/block-selection-clearer/index.js"],"names":["useBlockSelectionClearer","hasSelectedBlock","hasMultiSelection","blockEditorStore","clearSelectedBlock","node","onMouseDown","event","target","addEventListener","removeEventListener","BlockSelectionClearer","props"],"mappings":";;;;;;;;;;;;;;AAGA;;AACA;;AAKA;;AATA;AACA;AACA;;AAIA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,wBAAT,GAAoC;AAC1C,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA0C,qBAC/CC,YAD+C,CAAhD;AAGA,QAAM;AAAEC,IAAAA;AAAF,MAAyB,uBAAaD,YAAb,CAA/B;AAEA,SAAO,2BACJE,IAAF,IAAY;AACX,aAASC,WAAT,CAAsBC,KAAtB,EAA8B;AAC7B,UAAK,CAAEN,gBAAgB,EAAlB,IAAwB,CAAEC,iBAAiB,EAAhD,EAAqD;AACpD;AACA,OAH4B,CAK7B;;;AACA,UAAKK,KAAK,CAACC,MAAN,KAAiBH,IAAtB,EAA6B;AAC5B;AACA;;AAEDD,MAAAA,kBAAkB;AAClB;;AAEDC,IAAAA,IAAI,CAACI,gBAAL,CAAuB,WAAvB,EAAoCH,WAApC;AAEA,WAAO,MAAM;AACZD,MAAAA,IAAI,CAACK,mBAAL,CAA0B,WAA1B,EAAuCJ,WAAvC;AACA,KAFD;AAGA,GApBK,EAqBN,CAAEL,gBAAF,EAAoBC,iBAApB,EAAuCE,kBAAvC,CArBM,CAAP;AAuBA;;AAEc,SAASO,qBAAT,CAAgCC,KAAhC,EAAwC;AACtD,SAAO;AAAK,IAAA,GAAG,EAAGZ,wBAAwB;AAAnC,KAA6CY,KAA7C,EAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useRefEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\n/**\n * Pass the returned ref callback to an element that should clear block\n * selection. Selection will only be cleared if the element is clicked directly,\n * not if a child element is clicked.\n *\n * @return {import('react').RefCallback} Ref callback.\n */\nexport function useBlockSelectionClearer() {\n\tconst { hasSelectedBlock, hasMultiSelection } = useSelect(\n\t\tblockEditorStore\n\t);\n\tconst { clearSelectedBlock } = useDispatch( blockEditorStore );\n\n\treturn useRefEffect(\n\t\t( node ) => {\n\t\t\tfunction onMouseDown( event ) {\n\t\t\t\tif ( ! hasSelectedBlock() && ! hasMultiSelection() ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Only handle clicks on the element, not the children.\n\t\t\t\tif ( event.target !== node ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tclearSelectedBlock();\n\t\t\t}\n\n\t\t\tnode.addEventListener( 'mousedown', onMouseDown );\n\n\t\t\treturn () => {\n\t\t\t\tnode.removeEventListener( 'mousedown', onMouseDown );\n\t\t\t};\n\t\t},\n\t\t[ hasSelectedBlock, hasMultiSelection, clearSelectedBlock ]\n\t);\n}\n\nexport default function BlockSelectionClearer( props ) {\n\treturn <div ref={ useBlockSelectionClearer() } { ...props } />;\n}\n"]}