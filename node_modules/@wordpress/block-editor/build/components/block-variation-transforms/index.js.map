{"version":3,"sources":["@wordpress/block-editor/src/components/block-variation-transforms/index.js"],"names":["__experimentalBlockVariationTransforms","blockClientId","selectedValue","setSelectedValue","updateBlockAttributes","blockEditorStore","variations","blockAttributes","select","getBlockVariations","blocksStore","getBlockName","getBlockAttributes","blockName","name","length","selectOptions","map","title","description","value","label","info","onSelectVariation","variationName","find","attributes","baseClass","position","className","chevronDown","iconPosition"],"mappings":";;;;;;;AAWA;;AARA;;AACA;;AACA;;AAKA;;AAEA;;AAKA;;AACA;;AAlBA;AACA;AACA;;AAYA;AACA;AACA;AAIA,SAASA,sCAAT,CAAiD;AAAEC,EAAAA;AAAF,CAAjD,EAAqE;AACpE,QAAM,CAAEC,aAAF,EAAiBC,gBAAjB,IAAsC,wBAA5C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAA4B,uBAAaC,YAAb,CAAlC;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAkC,qBACrCC,MAAF,IAAc;AACb,UAAM;AAAEC,MAAAA;AAAF,QAAyBD,MAAM,CAAEE,aAAF,CAArC;AACA,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAAuCJ,MAAM,CAClDH,YADkD,CAAnD;AAGA,UAAMQ,SAAS,GAAGZ,aAAa,IAAIU,YAAY,CAAEV,aAAF,CAA/C;AACA,WAAO;AACNK,MAAAA,UAAU,EACTO,SAAS,IAAIJ,kBAAkB,CAAEI,SAAF,EAAa,WAAb,CAF1B;AAGNN,MAAAA,eAAe,EAAEK,kBAAkB,CAAEX,aAAF;AAH7B,KAAP;AAKA,GAZsC,EAavC,CAAEA,aAAF,CAbuC,CAAxC;AAeA,0BAAW,MAAM;AAAA;;AAChBE,IAAAA,gBAAgB,0BACf,+CAAsBI,eAAtB,EAAuCD,UAAvC,CADe,0DACf,sBAAqDQ,IADtC,CAAhB;AAGA,GAJD,EAIG,CAAEP,eAAF,EAAmBD,UAAnB,CAJH;AAKA,MAAK,EAAEA,UAAF,aAAEA,UAAF,eAAEA,UAAU,CAAES,MAAd,CAAL,EAA4B,OAAO,IAAP;AAE5B,QAAMC,aAAa,GAAGV,UAAU,CAACW,GAAX,CACrB,CAAE;AAAEH,IAAAA,IAAF;AAAQI,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAF,MAAsC;AACrCC,IAAAA,KAAK,EAAEN,IAD8B;AAErCO,IAAAA,KAAK,EAAEH,KAF8B;AAGrCI,IAAAA,IAAI,EAAEH;AAH+B,GAAtC,CADqB,CAAtB;;AAOA,QAAMI,iBAAiB,GAAKC,aAAF,IAAqB;AAC9CpB,IAAAA,qBAAqB,CAAEH,aAAF,EAAiB,EACrC,GAAGK,UAAU,CAACmB,IAAX,CAAiB,CAAE;AAAEX,QAAAA;AAAF,OAAF,KAAgBA,IAAI,KAAKU,aAA1C,EACDE;AAFmC,KAAjB,CAArB;AAIA,GALD;;AAMA,QAAMC,SAAS,GAAG,yCAAlB;AACA,SACC,4BAAC,wBAAD;AACC,IAAA,SAAS,EAAGA,SADb;AAEC,IAAA,KAAK,EAAG,cAAI,wBAAJ,CAFT;AAGC,IAAA,IAAI,EAAG,cAAI,wBAAJ,CAHR;AAIC,IAAA,YAAY,EAAG;AACdC,MAAAA,QAAQ,EAAE,eADI;AAEdC,MAAAA,SAAS,EAAG,GAAGF,SAAW;AAFZ,KAJhB;AAQC,IAAA,IAAI,EAAGG,kBARR;AASC,IAAA,WAAW,EAAG;AAAEC,MAAAA,YAAY,EAAE;AAAhB;AATf,KAWG,MACD;AAAK,IAAA,SAAS,EAAI,GAAGJ,SAAW;AAAhC,KACC,4BAAC,qBAAD,QACC,4BAAC,2BAAD;AACC,IAAA,OAAO,EAAGX,aADX;AAEC,IAAA,KAAK,EAAGd,aAFT;AAGC,IAAA,QAAQ,EAAGqB;AAHZ,IADD,CADD,CAZF,CADD;AAyBA;;eAEcvB,sC","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tDropdownMenu,\n\tMenuGroup,\n\tMenuItemsChoice,\n} from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState, useEffect } from '@wordpress/element';\nimport { chevronDown } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport { __experimentalGetMatchingVariation as getMatchingVariation } from '../../utils';\nimport { store as blockEditorStore } from '../../store';\n\nfunction __experimentalBlockVariationTransforms( { blockClientId } ) {\n\tconst [ selectedValue, setSelectedValue ] = useState();\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\tconst { variations, blockAttributes } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockVariations } = select( blocksStore );\n\t\t\tconst { getBlockName, getBlockAttributes } = select(\n\t\t\t\tblockEditorStore\n\t\t\t);\n\t\t\tconst blockName = blockClientId && getBlockName( blockClientId );\n\t\t\treturn {\n\t\t\t\tvariations:\n\t\t\t\t\tblockName && getBlockVariations( blockName, 'transform' ),\n\t\t\t\tblockAttributes: getBlockAttributes( blockClientId ),\n\t\t\t};\n\t\t},\n\t\t[ blockClientId ]\n\t);\n\tuseEffect( () => {\n\t\tsetSelectedValue(\n\t\t\tgetMatchingVariation( blockAttributes, variations )?.name\n\t\t);\n\t}, [ blockAttributes, variations ] );\n\tif ( ! variations?.length ) return null;\n\n\tconst selectOptions = variations.map(\n\t\t( { name, title, description } ) => ( {\n\t\t\tvalue: name,\n\t\t\tlabel: title,\n\t\t\tinfo: description,\n\t\t} )\n\t);\n\tconst onSelectVariation = ( variationName ) => {\n\t\tupdateBlockAttributes( blockClientId, {\n\t\t\t...variations.find( ( { name } ) => name === variationName )\n\t\t\t\t.attributes,\n\t\t} );\n\t};\n\tconst baseClass = 'block-editor-block-variation-transforms';\n\treturn (\n\t\t<DropdownMenu\n\t\t\tclassName={ baseClass }\n\t\t\tlabel={ __( 'Transform to variation' ) }\n\t\t\ttext={ __( 'Transform to variation' ) }\n\t\t\tpopoverProps={ {\n\t\t\t\tposition: 'bottom center',\n\t\t\t\tclassName: `${ baseClass }__popover`,\n\t\t\t} }\n\t\t\ticon={ chevronDown }\n\t\t\ttoggleProps={ { iconPosition: 'right' } }\n\t\t>\n\t\t\t{ () => (\n\t\t\t\t<div className={ `${ baseClass }__container` }>\n\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t<MenuItemsChoice\n\t\t\t\t\t\t\tchoices={ selectOptions }\n\t\t\t\t\t\t\tvalue={ selectedValue }\n\t\t\t\t\t\t\tonSelect={ onSelectVariation }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</MenuGroup>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t</DropdownMenu>\n\t);\n}\n\nexport default __experimentalBlockVariationTransforms;\n"]}