"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = BorderStyleControl;

var _element = require("@wordpress/element");

var _components = require("@wordpress/components");

var _i18n = require("@wordpress/i18n");

var _icons = require("@wordpress/icons");

/**
 * WordPress dependencies
 */
const BORDER_STYLES = [{
  label: (0, _i18n.__)('Solid'),
  icon: _icons.lineSolid,
  value: 'solid'
}, {
  label: (0, _i18n.__)('Dashed'),
  icon: _icons.lineDashed,
  value: 'dashed'
}, {
  label: (0, _i18n.__)('Dotted'),
  icon: _icons.lineDotted,
  value: 'dotted'
}];
/**
 * Control to display border style options.
 *
 * @param {Object}   props          Component props.
 * @param {Function} props.onChange Handler for changing border style selection.
 * @param {string}   props.value    Currently selected border style value.
 *
 * @return {WPElement} Custom border style segmented control.
 */

function BorderStyleControl({
  onChange,
  value
}) {
  return (0, _element.createElement)("fieldset", {
    className: "components-border-style-control"
  }, (0, _element.createElement)("legend", null, (0, _i18n.__)('Style')), (0, _element.createElement)("div", {
    className: "components-border-style-control__buttons"
  }, BORDER_STYLES.map(borderStyle => (0, _element.createElement)(_components.Button, {
    key: borderStyle.value,
    icon: borderStyle.icon,
    isSmall: true,
    isPressed: borderStyle.value === value,
    onClick: () => onChange(borderStyle.value === value ? undefined : borderStyle.value),
    "aria-label": borderStyle.label
  }))));
}
//# sourceMappingURL=index.js.map