{"version":3,"sources":["@wordpress/block-editor/src/hooks/padding.js"],"names":["hasPaddingSupport","blockType","support","SPACING_SUPPORT_KEY","padding","useIsPaddingDisabled","name","blockName","isDisabled","PaddingEdit","props","attributes","style","setAttributes","units","availableUnits","sides","onChange","next","newStyle","spacing","onChangeShowVisualizer","visualizers","Platform","select","web","native"],"mappings":";;;;;;;;;;;AAIA;;AADA;;AAEA;;AACA;;AAQA;;AACA;;AACA;;AAhBA;AACA;AACA;;AASA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,iBAAT,CAA4BC,SAA5B,EAAwC;AAC9C,QAAMC,OAAO,GAAG,6BAAiBD,SAAjB,EAA4BE,4BAA5B,CAAhB;AACA,SAAO,CAAC,EAAI,SAASD,OAAT,IAAoBA,OAApB,aAAoBA,OAApB,eAAoBA,OAAO,CAAEE,OAAjC,CAAR;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,oBAAT,CAA+B;AAAEC,EAAAA,IAAI,EAAEC;AAAR,IAAsB,EAArD,EAA0D;AAChE,QAAMC,UAAU,GAAG,CAAE,yBAAY,uBAAZ,CAArB;AACA,SAAO,CAAER,iBAAiB,CAAEO,SAAF,CAAnB,IAAoCC,UAA3C;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,WAAT,CAAsBC,KAAtB,EAA8B;AAAA;;AACpC,QAAM;AACLJ,IAAAA,IAAI,EAAEC,SADD;AAELI,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF,KAFP;AAGLC,IAAAA;AAHK,MAIFH,KAJJ;AAMA,QAAMI,KAAK,GAAG,8CAAgB;AAC7BC,IAAAA,cAAc,EAAE,yBAAY,eAAZ,KAAiC,CAChD,GADgD,EAEhD,IAFgD,EAGhD,IAHgD,EAIhD,KAJgD,EAKhD,IALgD;AADpB,GAAhB,CAAd;AASA,QAAMC,KAAK,GAAG,6BAAgBT,SAAhB,EAA2B,SAA3B,CAAd;;AAEA,MAAKF,oBAAoB,CAAEK,KAAF,CAAzB,EAAqC;AACpC,WAAO,IAAP;AACA;;AAED,QAAMO,QAAQ,GAAKC,IAAF,IAAY;AAC5B,UAAMC,QAAQ,GAAG,EAChB,GAAGP,KADa;AAEhBQ,MAAAA,OAAO,EAAE,EACR,IAAGR,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEQ,OAAV,CADQ;AAERhB,QAAAA,OAAO,EAAEc;AAFD;AAFO,KAAjB;AAQAL,IAAAA,aAAa,CAAE;AACdD,MAAAA,KAAK,EAAE,6BAAkBO,QAAlB;AADO,KAAF,CAAb;AAGA,GAZD;;AAcA,QAAME,sBAAsB,GAAKH,IAAF,IAAY;AAC1C,UAAMC,QAAQ,GAAG,EAChB,GAAGP,KADa;AAEhBU,MAAAA,WAAW,EAAE;AACZlB,QAAAA,OAAO,EAAEc;AADG;AAFG,KAAjB;AAOAL,IAAAA,aAAa,CAAE;AACdD,MAAAA,KAAK,EAAE,6BAAkBO,QAAlB;AADO,KAAF,CAAb;AAGA,GAXD;;AAaA,SAAOI,kBAASC,MAAT,CAAiB;AACvBC,IAAAA,GAAG,EACF,qDACC,4BAAC,oCAAD;AACC,MAAA,MAAM,EAAGb,KAAH,aAAGA,KAAH,yCAAGA,KAAK,CAAEQ,OAAV,mDAAG,eAAgBhB,OAD1B;AAEC,MAAA,QAAQ,EAAGa,QAFZ;AAGC,MAAA,sBAAsB,EAAGI,sBAH1B;AAIC,MAAA,KAAK,EAAG,cAAI,SAAJ,CAJT;AAKC,MAAA,KAAK,EAAGL,KALT;AAMC,MAAA,KAAK,EAAGF;AANT,MADD,CAFsB;AAavBY,IAAAA,MAAM,EAAE;AAbe,GAAjB,CAAP;AAeA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Platform } from '@wordpress/element';\nimport { getBlockSupport } from '@wordpress/blocks';\nimport {\n\t__experimentalUseCustomUnits as useCustomUnits,\n\t__experimentalBoxControl as BoxControl,\n} from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport useSetting from '../components/use-setting';\nimport { SPACING_SUPPORT_KEY, useCustomSides } from './spacing';\nimport { cleanEmptyObject } from './utils';\n\n/**\n * Determines if there is padding support.\n *\n * @param {string|Object} blockType Block name or Block Type object.\n *\n * @return {boolean} Whether there is support.\n */\nexport function hasPaddingSupport( blockType ) {\n\tconst support = getBlockSupport( blockType, SPACING_SUPPORT_KEY );\n\treturn !! ( true === support || support?.padding );\n}\n\n/**\n * Custom hook that checks if padding settings have been disabled.\n *\n * @param {string} name The name of the block.\n *\n * @return {boolean} Whether padding setting is disabled.\n */\nexport function useIsPaddingDisabled( { name: blockName } = {} ) {\n\tconst isDisabled = ! useSetting( 'spacing.customPadding' );\n\treturn ! hasPaddingSupport( blockName ) || isDisabled;\n}\n\n/**\n * Inspector control panel containing the padding related configuration\n *\n * @param {Object} props\n *\n * @return {WPElement} Padding edit element.\n */\nexport function PaddingEdit( props ) {\n\tconst {\n\t\tname: blockName,\n\t\tattributes: { style },\n\t\tsetAttributes,\n\t} = props;\n\n\tconst units = useCustomUnits( {\n\t\tavailableUnits: useSetting( 'spacing.units' ) || [\n\t\t\t'%',\n\t\t\t'px',\n\t\t\t'em',\n\t\t\t'rem',\n\t\t\t'vw',\n\t\t],\n\t} );\n\tconst sides = useCustomSides( blockName, 'padding' );\n\n\tif ( useIsPaddingDisabled( props ) ) {\n\t\treturn null;\n\t}\n\n\tconst onChange = ( next ) => {\n\t\tconst newStyle = {\n\t\t\t...style,\n\t\t\tspacing: {\n\t\t\t\t...style?.spacing,\n\t\t\t\tpadding: next,\n\t\t\t},\n\t\t};\n\n\t\tsetAttributes( {\n\t\t\tstyle: cleanEmptyObject( newStyle ),\n\t\t} );\n\t};\n\n\tconst onChangeShowVisualizer = ( next ) => {\n\t\tconst newStyle = {\n\t\t\t...style,\n\t\t\tvisualizers: {\n\t\t\t\tpadding: next,\n\t\t\t},\n\t\t};\n\n\t\tsetAttributes( {\n\t\t\tstyle: cleanEmptyObject( newStyle ),\n\t\t} );\n\t};\n\n\treturn Platform.select( {\n\t\tweb: (\n\t\t\t<>\n\t\t\t\t<BoxControl\n\t\t\t\t\tvalues={ style?.spacing?.padding }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\tonChangeShowVisualizer={ onChangeShowVisualizer }\n\t\t\t\t\tlabel={ __( 'Padding' ) }\n\t\t\t\t\tsides={ sides }\n\t\t\t\t\tunits={ units }\n\t\t\t\t/>\n\t\t\t</>\n\t\t),\n\t\tnative: null,\n\t} );\n}\n"]}