{"version":3,"sources":["@wordpress/block-editor/src/hooks/align.native.js"],"names":["without","addFilter","hasBlockSupport","WIDE_ALIGNMENTS","ALIGNMENTS","settings","name","excludeBlocks","includes","blockAlign","supports","align","Array","isArray","Object","values","alignments","alignWide","attributes","type","enum"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,QAAxB;AAEA;AACA;AACA;;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AAEA,MAAMC,UAAU,GAAG,CAAE,MAAF,EAAU,QAAV,EAAoB,OAApB,CAAnB;AAEA,cAAc,YAAd,C,CAEA;;AACAH,SAAS,CACR,0BADQ,EAER,gCAFQ,EAGR,CAAEI,QAAF,EAAYC,IAAZ,KAAsB;AACrB,MACCH,eAAe,CAACI,aAAhB,CAA8BC,QAA9B,CAAwCF,IAAxC,KACAJ,eAAe,CAAEG,QAAF,EAAY,OAAZ,CAFhB,EAGE;AACD,UAAMI,UAAU,GAAGJ,QAAQ,CAACK,QAAT,CAAkBC,KAArC;AAEAN,IAAAA,QAAQ,CAACK,QAAT,GAAoB,EACnB,GAAGL,QAAQ,CAACK,QADO;AAEnBC,MAAAA,KAAK,EAAEC,KAAK,CAACC,OAAN,CAAeJ,UAAf,IACJT,OAAO,CACPS,UADO,EAEP,GAAGK,MAAM,CAACC,MAAP,CAAeZ,eAAe,CAACa,UAA/B,CAFI,CADH,GAKJP,UAPgB;AAQnBQ,MAAAA,SAAS,EAAE;AARQ,KAApB;AAUAZ,IAAAA,QAAQ,CAACa,UAAT,GAAsB,EACrB,GAAGb,QAAQ,CAACa,UADS;AAErBP,MAAAA,KAAK,EAAE;AACNQ,QAAAA,IAAI,EAAE,QADA;AAEN;AACA;AACAC,QAAAA,IAAI,EAAE,CAAE,GAAGhB,UAAL,EAAiB,EAAjB;AAJA;AAFc,KAAtB;AASA;;AAED,SAAOC,QAAP;AACA,CAhCO,CAAT","sourcesContent":["/**\n * External dependencies\n */\nimport { without } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { hasBlockSupport } from '@wordpress/blocks';\nimport { WIDE_ALIGNMENTS } from '@wordpress/components';\n\nconst ALIGNMENTS = [ 'left', 'center', 'right' ];\n\nexport * from './align.js';\n\n// Used to filter out blocks that don't support wide/full alignment on mobile\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/react-native-editor/align',\n\t( settings, name ) => {\n\t\tif (\n\t\t\tWIDE_ALIGNMENTS.excludeBlocks.includes( name ) &&\n\t\t\thasBlockSupport( settings, 'align' )\n\t\t) {\n\t\t\tconst blockAlign = settings.supports.align;\n\n\t\t\tsettings.supports = {\n\t\t\t\t...settings.supports,\n\t\t\t\talign: Array.isArray( blockAlign )\n\t\t\t\t\t? without(\n\t\t\t\t\t\t\tblockAlign,\n\t\t\t\t\t\t\t...Object.values( WIDE_ALIGNMENTS.alignments )\n\t\t\t\t\t  )\n\t\t\t\t\t: blockAlign,\n\t\t\t\talignWide: false,\n\t\t\t};\n\t\t\tsettings.attributes = {\n\t\t\t\t...settings.attributes,\n\t\t\t\talign: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\t// Allow for '' since it is used by updateAlignment function\n\t\t\t\t\t// in withToolbarControls for special cases with defined default values.\n\t\t\t\t\tenum: [ ...ALIGNMENTS, '' ],\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\treturn settings;\n\t}\n);\n"]}