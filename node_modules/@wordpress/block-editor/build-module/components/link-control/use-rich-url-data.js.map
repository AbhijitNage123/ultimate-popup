{"version":3,"sources":["@wordpress/block-editor/src/components/link-control/use-rich-url-data.js"],"names":["store","blockEditorStore","useSelect","useEffect","useReducer","reducer","state","action","type","isFetching","richData","Error","useRemoteUrlData","url","dispatch","fetchRichUrlData","select","getSettings","__experimentalFetchRichUrlData","length","AbortController","controller","window","signal","then","urlData","catch","aborted","abort"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,KAAK,IAAIC,gBAAlB,QAA0C,aAA1C;AAEA;AACA;AACA;;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,oBAAtC;;AAEA,SAASC,OAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAkC;AACjC,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,UAAL;AACC,aAAO,EACN,GAAGF,KADG;AAENG,QAAAA,UAAU,EAAE,KAFN;AAGNC,QAAAA,QAAQ,EAAEH,MAAM,CAACG;AAHX,OAAP;;AAKD,SAAK,OAAL;AACC,aAAO,EACN,GAAGJ,KADG;AAENG,QAAAA,UAAU,EAAE,KAFN;AAGNC,QAAAA,QAAQ,EAAE;AAHJ,OAAP;;AAKD,SAAK,SAAL;AACC,aAAO,EACN,GAAGJ,KADG;AAENG,QAAAA,UAAU,EAAE;AAFN,OAAP;;AAID;AACC,YAAM,IAAIE,KAAJ,CAAY,0BAA0BJ,MAAM,CAACC,IAAM,EAAnD,CAAN;AAnBF;AAqBA;;AAED,SAASI,gBAAT,CAA2BC,GAA3B,EAAiC;AAChC,QAAM,CAAEP,KAAF,EAASQ,QAAT,IAAsBV,UAAU,CAAEC,OAAF,EAAW;AAChDK,IAAAA,QAAQ,EAAE,IADsC;AAEhDD,IAAAA,UAAU,EAAE;AAFoC,GAAX,CAAtC;AAKA,QAAM;AAAEM,IAAAA;AAAF,MAAuBb,SAAS,CAAIc,MAAF,IAAc;AACrD,UAAM;AAAEC,MAAAA;AAAF,QAAkBD,MAAM,CAAEf,gBAAF,CAA9B;AACA,WAAO;AACNc,MAAAA,gBAAgB,EAAEE,WAAW,GAAGC;AAD1B,KAAP;AAGA,GALqC,EAKnC,EALmC,CAAtC;AAOAf,EAAAA,SAAS,CAAE,MAAM;AAChB;AACA;AACA;AACA,QACCU,GAAG,SAAH,IAAAA,GAAG,WAAH,IAAAA,GAAG,CAAEM,MAAL,IACAJ,gBADA,IAEA,OAAOK,eAAP,KAA2B,WAH5B,EAIE;AACDN,MAAAA,QAAQ,CAAE;AACTN,QAAAA,IAAI,EAAE;AADG,OAAF,CAAR;AAIA,YAAMa,UAAU,GAAG,IAAIC,MAAM,CAACF,eAAX,EAAnB;AAEA,YAAMG,MAAM,GAAGF,UAAU,CAACE,MAA1B;AAEAR,MAAAA,gBAAgB,CAAEF,GAAF,EAAO;AACtBU,QAAAA;AADsB,OAAP,CAAhB,CAGEC,IAHF,CAGUC,OAAF,IAAe;AACrBX,QAAAA,QAAQ,CAAE;AACTN,UAAAA,IAAI,EAAE,UADG;AAETE,UAAAA,QAAQ,EAAEe;AAFD,SAAF,CAAR;AAIA,OARF,EASEC,KATF,CASS,MAAM;AACb;AACA,YAAK,CAAEH,MAAM,CAACI,OAAd,EAAwB;AACvBb,UAAAA,QAAQ,CAAE;AACTN,YAAAA,IAAI,EAAE;AADG,WAAF,CAAR;AAGA;AACD,OAhBF,EATC,CA0BD;;AACA,aAAO,MAAM;AACZa,QAAAA,UAAU,CAACO,KAAX;AACA,OAFD;AAGA;AACD,GAvCQ,EAuCN,CAAEf,GAAF,CAvCM,CAAT;AAyCA,SAAOP,KAAP;AACA;;AAED,eAAeM,gBAAf","sourcesContent":["/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useEffect, useReducer } from '@wordpress/element';\n\nfunction reducer( state, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'RESOLVED':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: false,\n\t\t\t\trichData: action.richData,\n\t\t\t};\n\t\tcase 'ERROR':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: false,\n\t\t\t\trichData: null,\n\t\t\t};\n\t\tcase 'LOADING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: true,\n\t\t\t};\n\t\tdefault:\n\t\t\tthrow new Error( `Unexpected action type ${ action.type }` );\n\t}\n}\n\nfunction useRemoteUrlData( url ) {\n\tconst [ state, dispatch ] = useReducer( reducer, {\n\t\trichData: null,\n\t\tisFetching: false,\n\t} );\n\n\tconst { fetchRichUrlData } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn {\n\t\t\tfetchRichUrlData: getSettings().__experimentalFetchRichUrlData,\n\t\t};\n\t}, [] );\n\n\tuseEffect( () => {\n\t\t// Only make the request if we have an actual URL\n\t\t// and the fetching util is available. In some editors\n\t\t// there may not be such a util.\n\t\tif (\n\t\t\turl?.length &&\n\t\t\tfetchRichUrlData &&\n\t\t\ttypeof AbortController !== 'undefined'\n\t\t) {\n\t\t\tdispatch( {\n\t\t\t\ttype: 'LOADING',\n\t\t\t} );\n\n\t\t\tconst controller = new window.AbortController();\n\n\t\t\tconst signal = controller.signal;\n\n\t\t\tfetchRichUrlData( url, {\n\t\t\t\tsignal,\n\t\t\t} )\n\t\t\t\t.then( ( urlData ) => {\n\t\t\t\t\tdispatch( {\n\t\t\t\t\t\ttype: 'RESOLVED',\n\t\t\t\t\t\trichData: urlData,\n\t\t\t\t\t} );\n\t\t\t\t} )\n\t\t\t\t.catch( () => {\n\t\t\t\t\t// Avoid setting state on unmounted component\n\t\t\t\t\tif ( ! signal.aborted ) {\n\t\t\t\t\t\tdispatch( {\n\t\t\t\t\t\t\ttype: 'ERROR',\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t// Cleanup: when the URL changes the abort the current request\n\t\t\treturn () => {\n\t\t\t\tcontroller.abort();\n\t\t\t};\n\t\t}\n\t}, [ url ] );\n\n\treturn state;\n}\n\nexport default useRemoteUrlData;\n"]}