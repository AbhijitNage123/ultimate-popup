{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/use-block-props/use-block-custom-class-name.js"],"names":["useSelect","hasBlockSupport","getBlockType","store","blockEditorStore","useBlockCustomClassName","clientId","select","getBlockName","getBlockAttributes","className","blockType","hasLightBlockWrapper","apiVersion"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,mBAA9C;AAEA;AACA;AACA;;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,gBAA1C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,uBAAT,CAAkCC,QAAlC,EAA6C;AACnD;AACA;AACA;AACA,SAAON,SAAS,CACbO,MAAF,IAAc;AACb,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAAuCF,MAAM,CAClDH,gBADkD,CAAnD;AAGA,UAAM;AAAEM,MAAAA;AAAF,QAAgBD,kBAAkB,CAAEH,QAAF,CAAxC;;AAEA,QAAK,CAAEI,SAAP,EAAmB;AAClB;AACA;;AAED,UAAMC,SAAS,GAAGT,YAAY,CAAEM,YAAY,CAAEF,QAAF,CAAd,CAA9B;AACA,UAAMM,oBAAoB,GACzBD,SAAS,CAACE,UAAV,GAAuB,CAAvB,IACAZ,eAAe,CAAEU,SAAF,EAAa,mBAAb,EAAkC,KAAlC,CAFhB;;AAIA,QAAK,CAAEC,oBAAP,EAA8B;AAC7B;AACA;;AAED,WAAOF,SAAP;AACA,GArBc,EAsBf,CAAEJ,QAAF,CAtBe,CAAhB;AAwBA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { hasBlockSupport, getBlockType } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../../store';\n\n/**\n * Returns the custom class name if the block is a light block.\n *\n * @param {string} clientId The block client ID.\n *\n * @return {string} The custom class name.\n */\nexport function useBlockCustomClassName( clientId ) {\n\t// It's good for this to be a separate selector because it will be executed\n\t// on every attribute change, while the other selectors are not re-evaluated\n\t// as much.\n\treturn useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlockName, getBlockAttributes } = select(\n\t\t\t\tblockEditorStore\n\t\t\t);\n\t\t\tconst { className } = getBlockAttributes( clientId );\n\n\t\t\tif ( ! className ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst blockType = getBlockType( getBlockName( clientId ) );\n\t\t\tconst hasLightBlockWrapper =\n\t\t\t\tblockType.apiVersion > 1 ||\n\t\t\t\thasBlockSupport( blockType, 'lightBlockWrapper', false );\n\n\t\t\tif ( ! hasLightBlockWrapper ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn className;\n\t\t},\n\t\t[ clientId ]\n\t);\n}\n"]}