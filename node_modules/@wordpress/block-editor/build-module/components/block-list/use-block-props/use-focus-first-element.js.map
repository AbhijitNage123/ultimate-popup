{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/use-block-props/use-focus-first-element.js"],"names":["first","last","useEffect","useRef","focus","isTextField","placeCaretAtHorizontalEdge","useSelect","isInsideRootBlock","store","blockEditorStore","useInitialPosition","clientId","select","getSelectedBlocksInitialCaretPosition","isMultiSelecting","isNavigationMode","isBlockSelected","useFocusFirstElement","ref","initialPosition","undefined","current","ownerDocument","contains","activeElement","textInputs","tabbable","find","filter","node","isReverse","target","closest"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,QAA5B;AAEA;AACA;AACA;;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,oBAAlC;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,0BAA7B,QAA+D,gBAA/D;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA;AACA;AACA;;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,gBAA1C;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,kBAAT,CAA6BC,QAA7B,EAAwC;AACvC,SAAOL,SAAS,CACbM,MAAF,IAAc;AACb,UAAM;AACLC,MAAAA,qCADK;AAELC,MAAAA,gBAFK;AAGLC,MAAAA,gBAHK;AAILC,MAAAA;AAJK,QAKFJ,MAAM,CAAEH,gBAAF,CALV;;AAOA,QAAK,CAAEO,eAAe,CAAEL,QAAF,CAAtB,EAAqC;AACpC;AACA;;AAED,QAAKG,gBAAgB,MAAMC,gBAAgB,EAA3C,EAAgD;AAC/C;AACA,KAdY,CAgBb;;;AACA,WAAOF,qCAAqC,EAA5C;AACA,GAnBc,EAoBf,CAAEF,QAAF,CApBe,CAAhB;AAsBA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASM,oBAAT,CAA+BN,QAA/B,EAA0C;AAChD,QAAMO,GAAG,GAAGhB,MAAM,EAAlB;AACA,QAAMiB,eAAe,GAAGT,kBAAkB,CAAEC,QAAF,CAA1C;AAEAV,EAAAA,SAAS,CAAE,MAAM;AAChB,QAAKkB,eAAe,KAAKC,SAApB,IAAiCD,eAAe,KAAK,IAA1D,EAAiE;AAChE;AACA;;AAED,QAAK,CAAED,GAAG,CAACG,OAAX,EAAqB;AACpB;AACA;;AAED,UAAM;AAAEC,MAAAA;AAAF,QAAoBJ,GAAG,CAACG,OAA9B,CATgB,CAWhB;;AACA,QAAKH,GAAG,CAACG,OAAJ,CAAYE,QAAZ,CAAsBD,aAAa,CAACE,aAApC,CAAL,EAA2D;AAC1D;AACA,KAde,CAgBhB;;;AACA,UAAMC,UAAU,GAAGtB,KAAK,CAACuB,QAAN,CACjBC,IADiB,CACXT,GAAG,CAACG,OADO,EAEjBO,MAFiB,CAEPC,IAAF,IAAYzB,WAAW,CAAEyB,IAAF,CAFd,CAAnB,CAjBgB,CAqBhB;AACA;;AACA,UAAMC,SAAS,GAAG,CAAC,CAAD,KAAOX,eAAzB;AACA,UAAMY,MAAM,GACX,CAAED,SAAS,GAAG9B,IAAH,GAAUD,KAArB,EAA8B0B,UAA9B,KAA8CP,GAAG,CAACG,OADnD;;AAGA,SACC;AACA,KAAEd,iBAAiB,CAAEW,GAAG,CAACG,OAAN,EAAeU,MAAf,CAAnB,IACAA,MAAM,CAACC,OAAP,CAAgB,sBAAhB,CAHD,EAIE;AACDd,MAAAA,GAAG,CAACG,OAAJ,CAAYlB,KAAZ;AACA;AACA;;AAEDE,IAAAA,0BAA0B,CAAE0B,MAAF,EAAUD,SAAV,CAA1B;AACA,GArCQ,EAqCN,CAAEX,eAAF,CArCM,CAAT;AAuCA,SAAOD,GAAP;AACA","sourcesContent":["/**\n * External dependencies\n */\nimport { first, last } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useEffect, useRef } from '@wordpress/element';\nimport { focus, isTextField, placeCaretAtHorizontalEdge } from '@wordpress/dom';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { isInsideRootBlock } from '../../../utils/dom';\nimport { store as blockEditorStore } from '../../../store';\n\n/** @typedef {import('@wordpress/element').RefObject} RefObject */\n\n/**\n * Returns the initial position if the block needs to be focussed, `undefined`\n * otherwise. The initial position is either 0 (start) or -1 (end).\n *\n * @param {string} clientId Block client ID.\n *\n * @return {number} The initial position, either 0 (start) or -1 (end).\n */\nfunction useInitialPosition( clientId ) {\n\treturn useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetSelectedBlocksInitialCaretPosition,\n\t\t\t\tisMultiSelecting,\n\t\t\t\tisNavigationMode,\n\t\t\t\tisBlockSelected,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\tif ( ! isBlockSelected( clientId ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isMultiSelecting() || isNavigationMode() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If there's no initial position, return 0 to focus the start.\n\t\t\treturn getSelectedBlocksInitialCaretPosition();\n\t\t},\n\t\t[ clientId ]\n\t);\n}\n\n/**\n * Transitions focus to the block or inner tabbable when the block becomes\n * selected and an initial position is set.\n *\n * @param {string} clientId Block client ID.\n *\n * @return {RefObject} React ref with the block element.\n */\nexport function useFocusFirstElement( clientId ) {\n\tconst ref = useRef();\n\tconst initialPosition = useInitialPosition( clientId );\n\n\tuseEffect( () => {\n\t\tif ( initialPosition === undefined || initialPosition === null ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! ref.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { ownerDocument } = ref.current;\n\n\t\t// Do not focus the block if it already contains the active element.\n\t\tif ( ref.current.contains( ownerDocument.activeElement ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find all tabbables within node.\n\t\tconst textInputs = focus.tabbable\n\t\t\t.find( ref.current )\n\t\t\t.filter( ( node ) => isTextField( node ) );\n\n\t\t// If reversed (e.g. merge via backspace), use the last in the set of\n\t\t// tabbables.\n\t\tconst isReverse = -1 === initialPosition;\n\t\tconst target =\n\t\t\t( isReverse ? last : first )( textInputs ) || ref.current;\n\n\t\tif (\n\t\t\t// Don't focus inner block or block appenders.\n\t\t\t! isInsideRootBlock( ref.current, target ) ||\n\t\t\ttarget.closest( '.block-list-appender' )\n\t\t) {\n\t\t\tref.current.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tplaceCaretAtHorizontalEdge( target, isReverse );\n\t}, [ initialPosition ] );\n\n\treturn ref;\n}\n"]}