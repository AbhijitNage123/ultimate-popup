{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/block-invalid-warning.js"],"names":["__","_x","Button","Modal","useState","useCallback","useMemo","getBlockType","createBlock","rawHandler","compose","withDispatch","withSelect","Warning","BlockCompare","store","blockEditorStore","BlockInvalidWarning","convertToHTML","convertToBlocks","convertToClassic","attemptBlockRecovery","block","hasHTMLBlock","compare","setCompare","onCompare","onCompareClose","hiddenActions","title","onClick","filter","Boolean","blockToBlocks","blockToClassic","content","originalContent","blockToHTML","HTML","recoverBlock","name","attributes","innerBlocks","select","clientId","getBlock","dispatch","replaceBlock"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,EAAT,EAAaC,EAAb,QAAuB,iBAAvB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,uBAA9B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,OAAhC,QAA+C,oBAA/C;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,UAApC,QAAsD,mBAAtD;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,iBAAzC;AAEA;AACA;AACA;;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,aAA1C;AAEA,OAAO,SAASC,mBAAT,CAA8B;AACpCC,EAAAA,aADoC;AAEpCC,EAAAA,eAFoC;AAGpCC,EAAAA,gBAHoC;AAIpCC,EAAAA,oBAJoC;AAKpCC,EAAAA;AALoC,CAA9B,EAMH;AACH,QAAMC,YAAY,GAAG,CAAC,CAAEhB,YAAY,CAAE,WAAF,CAApC;AACA,QAAM,CAAEiB,OAAF,EAAWC,UAAX,IAA0BrB,QAAQ,CAAE,KAAF,CAAxC;AAEA,QAAMsB,SAAS,GAAGrB,WAAW,CAAE,MAAMoB,UAAU,CAAE,IAAF,CAAlB,EAA4B,EAA5B,CAA7B;AACA,QAAME,cAAc,GAAGtB,WAAW,CAAE,MAAMoB,UAAU,CAAE,KAAF,CAAlB,EAA6B,EAA7B,CAAlC,CALG,CAOH;;AACA,QAAMG,aAAa,GAAGtB,OAAO,CAC5B,MACC,CACC;AACC;AACAuB,IAAAA,KAAK,EAAE5B,EAAE,CAAE,SAAF,EAAa,iBAAb,CAFV;AAGC6B,IAAAA,OAAO,EAAEJ;AAHV,GADD,EAMCH,YAAY,IAAI;AACfM,IAAAA,KAAK,EAAE7B,EAAE,CAAE,iBAAF,CADM;AAEf8B,IAAAA,OAAO,EAAEZ;AAFM,GANjB,EAUC;AACCW,IAAAA,KAAK,EAAE7B,EAAE,CAAE,0BAAF,CADV;AAEC8B,IAAAA,OAAO,EAAEV;AAFV,GAVD,EAcEW,MAdF,CAcUC,OAdV,CAF2B,EAiB5B,CAAEN,SAAF,EAAaR,aAAb,EAA4BE,gBAA5B,CAjB4B,CAA7B;AAoBA,SACC,8BACC,cAAC,OAAD;AACC,IAAA,OAAO,EAAG,CACT,cAAC,MAAD;AACC,MAAA,GAAG,EAAC,SADL;AAEC,MAAA,OAAO,EAAGC,oBAFX;AAGC,MAAA,OAAO,EAAC;AAHT,OAKGrB,EAAE,CAAE,wBAAF,CALL,CADS,CADX;AAUC,IAAA,gBAAgB,EAAG4B;AAVpB,KAYG5B,EAAE,CAAE,oDAAF,CAZL,CADD,EAeGwB,OAAO,IACR,cAAC,KAAD;AACC,IAAA,KAAK,EACJ;AACAxB,IAAAA,EAAE,CAAE,eAAF,CAHJ;AAKC,IAAA,cAAc,EAAG2B,cALlB;AAMC,IAAA,SAAS,EAAC;AANX,KAQC,cAAC,YAAD;AACC,IAAA,KAAK,EAAGL,KADT;AAEC,IAAA,MAAM,EAAGJ,aAFV;AAGC,IAAA,SAAS,EAAGC,eAHb;AAIC,IAAA,SAAS,EAAGc,aAJb;AAKC,IAAA,iBAAiB,EAAGjC,EAAE,CAAE,mBAAF;AALvB,IARD,CAhBF,CADD;AAoCA;;AAED,MAAMkC,cAAc,GAAKZ,KAAF,IACtBd,WAAW,CAAE,eAAF,EAAmB;AAC7B2B,EAAAA,OAAO,EAAEb,KAAK,CAACc;AADc,CAAnB,CADZ;;AAIA,MAAMC,WAAW,GAAKf,KAAF,IACnBd,WAAW,CAAE,WAAF,EAAe;AACzB2B,EAAAA,OAAO,EAAEb,KAAK,CAACc;AADU,CAAf,CADZ;;AAIA,MAAMH,aAAa,GAAKX,KAAF,IACrBb,UAAU,CAAE;AACX6B,EAAAA,IAAI,EAAEhB,KAAK,CAACc;AADD,CAAF,CADX;;AAIA,MAAMG,YAAY,GAAG,CAAE;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAF,KACpBlC,WAAW,CAAEgC,IAAF,EAAQC,UAAR,EAAoBC,WAApB,CADZ;;AAGA,eAAehC,OAAO,CAAE,CACvBE,UAAU,CAAE,CAAE+B,MAAF,EAAU;AAAEC,EAAAA;AAAF,CAAV,MAA8B;AACzCtB,EAAAA,KAAK,EAAEqB,MAAM,CAAE3B,gBAAF,CAAN,CAA2B6B,QAA3B,CAAqCD,QAArC;AADkC,CAA9B,CAAF,CADa,EAIvBjC,YAAY,CAAE,CAAEmC,QAAF,EAAY;AAAExB,EAAAA;AAAF,CAAZ,KAA2B;AACxC,QAAM;AAAEyB,IAAAA;AAAF,MAAmBD,QAAQ,CAAE9B,gBAAF,CAAjC;AAEA,SAAO;AACNI,IAAAA,gBAAgB,GAAG;AAClB2B,MAAAA,YAAY,CAAEzB,KAAK,CAACsB,QAAR,EAAkBV,cAAc,CAAEZ,KAAF,CAAhC,CAAZ;AACA,KAHK;;AAINJ,IAAAA,aAAa,GAAG;AACf6B,MAAAA,YAAY,CAAEzB,KAAK,CAACsB,QAAR,EAAkBP,WAAW,CAAEf,KAAF,CAA7B,CAAZ;AACA,KANK;;AAONH,IAAAA,eAAe,GAAG;AACjB4B,MAAAA,YAAY,CAAEzB,KAAK,CAACsB,QAAR,EAAkBX,aAAa,CAAEX,KAAF,CAA/B,CAAZ;AACA,KATK;;AAUND,IAAAA,oBAAoB,GAAG;AACtB0B,MAAAA,YAAY,CAAEzB,KAAK,CAACsB,QAAR,EAAkBL,YAAY,CAAEjB,KAAF,CAA9B,CAAZ;AACA;;AAZK,GAAP;AAcA,CAjBW,CAJW,CAAF,CAAP,CAsBVL,mBAtBU,CAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { Button, Modal } from '@wordpress/components';\nimport { useState, useCallback, useMemo } from '@wordpress/element';\nimport { getBlockType, createBlock, rawHandler } from '@wordpress/blocks';\nimport { compose } from '@wordpress/compose';\nimport { withDispatch, withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport Warning from '../warning';\nimport BlockCompare from '../block-compare';\nimport { store as blockEditorStore } from '../../store';\n\nexport function BlockInvalidWarning( {\n\tconvertToHTML,\n\tconvertToBlocks,\n\tconvertToClassic,\n\tattemptBlockRecovery,\n\tblock,\n} ) {\n\tconst hasHTMLBlock = !! getBlockType( 'core/html' );\n\tconst [ compare, setCompare ] = useState( false );\n\n\tconst onCompare = useCallback( () => setCompare( true ), [] );\n\tconst onCompareClose = useCallback( () => setCompare( false ), [] );\n\n\t// We memo the array here to prevent the children components from being updated unexpectedly\n\tconst hiddenActions = useMemo(\n\t\t() =>\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t// translators: Button to fix block content\n\t\t\t\t\ttitle: _x( 'Resolve', 'imperative verb' ),\n\t\t\t\t\tonClick: onCompare,\n\t\t\t\t},\n\t\t\t\thasHTMLBlock && {\n\t\t\t\t\ttitle: __( 'Convert to HTML' ),\n\t\t\t\t\tonClick: convertToHTML,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: __( 'Convert to Classic Block' ),\n\t\t\t\t\tonClick: convertToClassic,\n\t\t\t\t},\n\t\t\t].filter( Boolean ),\n\t\t[ onCompare, convertToHTML, convertToClassic ]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Warning\n\t\t\t\tactions={ [\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey=\"recover\"\n\t\t\t\t\t\tonClick={ attemptBlockRecovery }\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Attempt Block Recovery' ) }\n\t\t\t\t\t</Button>,\n\t\t\t\t] }\n\t\t\t\tsecondaryActions={ hiddenActions }\n\t\t\t>\n\t\t\t\t{ __( 'This block contains unexpected or invalid content.' ) }\n\t\t\t</Warning>\n\t\t\t{ compare && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t// translators: Dialog title to fix block content\n\t\t\t\t\t\t__( 'Resolve Block' )\n\t\t\t\t\t}\n\t\t\t\t\tonRequestClose={ onCompareClose }\n\t\t\t\t\tclassName=\"block-editor-block-compare\"\n\t\t\t\t>\n\t\t\t\t\t<BlockCompare\n\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\tonKeep={ convertToHTML }\n\t\t\t\t\t\tonConvert={ convertToBlocks }\n\t\t\t\t\t\tconvertor={ blockToBlocks }\n\t\t\t\t\t\tconvertButtonText={ __( 'Convert to Blocks' ) }\n\t\t\t\t\t/>\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nconst blockToClassic = ( block ) =>\n\tcreateBlock( 'core/freeform', {\n\t\tcontent: block.originalContent,\n\t} );\nconst blockToHTML = ( block ) =>\n\tcreateBlock( 'core/html', {\n\t\tcontent: block.originalContent,\n\t} );\nconst blockToBlocks = ( block ) =>\n\trawHandler( {\n\t\tHTML: block.originalContent,\n\t} );\nconst recoverBlock = ( { name, attributes, innerBlocks } ) =>\n\tcreateBlock( name, attributes, innerBlocks );\n\nexport default compose( [\n\twithSelect( ( select, { clientId } ) => ( {\n\t\tblock: select( blockEditorStore ).getBlock( clientId ),\n\t} ) ),\n\twithDispatch( ( dispatch, { block } ) => {\n\t\tconst { replaceBlock } = dispatch( blockEditorStore );\n\n\t\treturn {\n\t\t\tconvertToClassic() {\n\t\t\t\treplaceBlock( block.clientId, blockToClassic( block ) );\n\t\t\t},\n\t\t\tconvertToHTML() {\n\t\t\t\treplaceBlock( block.clientId, blockToHTML( block ) );\n\t\t\t},\n\t\t\tconvertToBlocks() {\n\t\t\t\treplaceBlock( block.clientId, blockToBlocks( block ) );\n\t\t\t},\n\t\t\tattemptBlockRecovery() {\n\t\t\t\treplaceBlock( block.clientId, recoverBlock( block ) );\n\t\t\t},\n\t\t};\n\t} ),\n] )( BlockInvalidWarning );\n"]}