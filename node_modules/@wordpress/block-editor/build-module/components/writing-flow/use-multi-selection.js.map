{"version":3,"sources":["@wordpress/block-editor/src/components/writing-flow/use-multi-selection.js"],"names":["first","last","useEffect","useRef","useSelect","store","blockEditorStore","__unstableUseBlockRef","useBlockRef","toggleRichText","container","toggle","Array","from","querySelectorAll","forEach","node","setAttribute","removeAttribute","getDeepestNode","type","child","sibling","nodeType","TEXT_NODE","test","data","selector","select","isMultiSelecting","getMultiSelectedBlockClientIds","hasMultiSelection","getSelectedBlockClientId","multiSelectedBlockClientIds","selectedBlockClientId","useMultiSelection","ref","selectedRef","startRef","endRef","ownerDocument","current","defaultView","selection","getSelection","rangeCount","isCollapsed","blockNode","startContainer","endContainer","getRangeAt","contains","removeAllRanges","length","focus","range","createRange","startNode","endNode","setStartBefore","setEndAfter","addRange"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { first, last } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useEffect, useRef } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\nimport { __unstableUseBlockRef as useBlockRef } from '../block-list/use-block-props/use-block-refs';\n\nfunction toggleRichText( container, toggle ) {\n\tArray.from( container.querySelectorAll( '.rich-text' ) ).forEach(\n\t\t( node ) => {\n\t\t\tif ( toggle ) {\n\t\t\t\tnode.setAttribute( 'contenteditable', true );\n\t\t\t} else {\n\t\t\t\tnode.removeAttribute( 'contenteditable' );\n\t\t\t}\n\t\t}\n\t);\n}\n\n/**\n * Returns for the deepest node at the start or end of a container node. Ignores\n * any text nodes that only contain HTML formatting whitespace.\n *\n * @param {Element} node Container to search.\n * @param {string}  type 'start' or 'end'.\n */\nfunction getDeepestNode( node, type ) {\n\tconst child = type === 'start' ? 'firstChild' : 'lastChild';\n\tconst sibling = type === 'start' ? 'nextSibling' : 'previousSibling';\n\n\twhile ( node[ child ] ) {\n\t\tnode = node[ child ];\n\n\t\twhile (\n\t\t\tnode.nodeType === node.TEXT_NODE &&\n\t\t\t/^[ \\t\\n]*$/.test( node.data ) &&\n\t\t\tnode[ sibling ]\n\t\t) {\n\t\t\tnode = node[ sibling ];\n\t\t}\n\t}\n\n\treturn node;\n}\n\nfunction selector( select ) {\n\tconst {\n\t\tisMultiSelecting,\n\t\tgetMultiSelectedBlockClientIds,\n\t\thasMultiSelection,\n\t\tgetSelectedBlockClientId,\n\t} = select( blockEditorStore );\n\n\treturn {\n\t\tisMultiSelecting: isMultiSelecting(),\n\t\tmultiSelectedBlockClientIds: getMultiSelectedBlockClientIds(),\n\t\thasMultiSelection: hasMultiSelection(),\n\t\tselectedBlockClientId: getSelectedBlockClientId(),\n\t};\n}\n\nexport default function useMultiSelection() {\n\tconst ref = useRef();\n\tconst {\n\t\tisMultiSelecting,\n\t\tmultiSelectedBlockClientIds,\n\t\thasMultiSelection,\n\t\tselectedBlockClientId,\n\t} = useSelect( selector, [] );\n\tconst selectedRef = useBlockRef( selectedBlockClientId );\n\t// These must be in the right DOM order.\n\tconst startRef = useBlockRef( first( multiSelectedBlockClientIds ) );\n\tconst endRef = useBlockRef( last( multiSelectedBlockClientIds ) );\n\n\t/**\n\t * When the component updates, and there is multi selection, we need to\n\t * select the entire block contents.\n\t */\n\tuseEffect( () => {\n\t\tconst { ownerDocument } = ref.current;\n\t\tconst { defaultView } = ownerDocument;\n\n\t\tif ( ! hasMultiSelection || isMultiSelecting ) {\n\t\t\tif ( ! selectedBlockClientId || isMultiSelecting ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst selection = defaultView.getSelection();\n\n\t\t\tif ( selection.rangeCount && ! selection.isCollapsed ) {\n\t\t\t\tconst blockNode = selectedRef.current;\n\t\t\t\tconst { startContainer, endContainer } = selection.getRangeAt(\n\t\t\t\t\t0\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\t!! blockNode &&\n\t\t\t\t\t( ! blockNode.contains( startContainer ) ||\n\t\t\t\t\t\t! blockNode.contains( endContainer ) )\n\t\t\t\t) {\n\t\t\t\t\tselection.removeAllRanges();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst { length } = multiSelectedBlockClientIds;\n\n\t\tif ( length < 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// For some browsers, like Safari, it is important that focus happens\n\t\t// BEFORE selection.\n\t\tref.current.focus();\n\n\t\tconst selection = defaultView.getSelection();\n\t\tconst range = ownerDocument.createRange();\n\n\t\t// These must be in the right DOM order.\n\t\t// The most stable way to select the whole block contents is to start\n\t\t// and end at the deepest points.\n\t\tconst startNode = getDeepestNode( startRef.current, 'start' );\n\t\tconst endNode = getDeepestNode( endRef.current, 'end' );\n\n\t\t// While rich text will be disabled with a delay when there is a multi\n\t\t// selection, we must do it immediately because it's not possible to set\n\t\t// selection across editable hosts.\n\t\ttoggleRichText( ref.current, false );\n\n\t\trange.setStartBefore( startNode );\n\t\trange.setEndAfter( endNode );\n\n\t\tselection.removeAllRanges();\n\t\tselection.addRange( range );\n\t}, [\n\t\thasMultiSelection,\n\t\tisMultiSelecting,\n\t\tmultiSelectedBlockClientIds,\n\t\tselectedBlockClientId,\n\t] );\n\n\treturn ref;\n}\n"]}