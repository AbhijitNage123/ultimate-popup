{"version":3,"sources":["@wordpress/block-editor/src/components/list-view/branch.js"],"names":["map","compact","Fragment","ListViewBlock","ListViewAppender","isClientIdSelected","useListViewContext","ListViewBranch","props","blocks","selectBlock","selectedBlockClientIds","showAppender","showBlockMovers","showNestedBlocks","parentBlockClientId","level","terminatedLevels","path","isBranchSelected","isLastOfBranch","isTreeRoot","filteredBlocks","itemHasAppender","parentClientId","hasAppender","blockCount","length","rowCount","appenderPosition","expandedState","expand","collapse","block","index","clientId","innerBlocks","position","isLastRowAtLevel","updatedTerminatedLevels","updatedPath","hasNestedBlocks","hasNestedAppender","hasNestedBranch","isSelected","isSelectedBranch","isLastBlock","isLast","isLastOfSelectedBranch","isExpanded","undefined","selectBlockWithClientId","event","stopPropagation","toggleExpanded","defaultProps"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { map, compact } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Fragment } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport ListViewBlock from './block';\nimport ListViewAppender from './appender';\nimport { isClientIdSelected } from './utils';\nimport { useListViewContext } from './context';\n\nexport default function ListViewBranch( props ) {\n\tconst {\n\t\tblocks,\n\t\tselectBlock,\n\t\tselectedBlockClientIds,\n\t\tshowAppender,\n\t\tshowBlockMovers,\n\t\tshowNestedBlocks,\n\t\tparentBlockClientId,\n\t\tlevel = 1,\n\t\tterminatedLevels = [],\n\t\tpath = [],\n\t\tisBranchSelected = false,\n\t\tisLastOfBranch = false,\n\t} = props;\n\n\tconst isTreeRoot = ! parentBlockClientId;\n\tconst filteredBlocks = compact( blocks );\n\tconst itemHasAppender = ( parentClientId ) =>\n\t\tshowAppender &&\n\t\t! isTreeRoot &&\n\t\tisClientIdSelected( parentClientId, selectedBlockClientIds );\n\tconst hasAppender = itemHasAppender( parentBlockClientId );\n\t// Add +1 to the rowCount to take the block appender into account.\n\tconst blockCount = filteredBlocks.length;\n\tconst rowCount = hasAppender ? blockCount + 1 : blockCount;\n\tconst appenderPosition = rowCount;\n\n\tconst { expandedState, expand, collapse } = useListViewContext();\n\n\treturn (\n\t\t<>\n\t\t\t{ map( filteredBlocks, ( block, index ) => {\n\t\t\t\tconst { clientId, innerBlocks } = block;\n\t\t\t\tconst position = index + 1;\n\t\t\t\tconst isLastRowAtLevel = rowCount === position;\n\t\t\t\tconst updatedTerminatedLevels = isLastRowAtLevel\n\t\t\t\t\t? [ ...terminatedLevels, level ]\n\t\t\t\t\t: terminatedLevels;\n\t\t\t\tconst updatedPath = [ ...path, position ];\n\t\t\t\tconst hasNestedBlocks =\n\t\t\t\t\tshowNestedBlocks && !! innerBlocks && !! innerBlocks.length;\n\t\t\t\tconst hasNestedAppender = itemHasAppender( clientId );\n\t\t\t\tconst hasNestedBranch = hasNestedBlocks || hasNestedAppender;\n\n\t\t\t\tconst isSelected = isClientIdSelected(\n\t\t\t\t\tclientId,\n\t\t\t\t\tselectedBlockClientIds\n\t\t\t\t);\n\t\t\t\tconst isSelectedBranch =\n\t\t\t\t\tisBranchSelected || ( isSelected && hasNestedBranch );\n\n\t\t\t\t// Logic needed to target the last item of a selected branch which might be deeply nested.\n\t\t\t\t// This is currently only needed for styling purposes. See: `.is-last-of-selected-branch`.\n\t\t\t\tconst isLastBlock = index === blockCount - 1;\n\t\t\t\tconst isLast = isSelected || ( isLastOfBranch && isLastBlock );\n\t\t\t\tconst isLastOfSelectedBranch =\n\t\t\t\t\tisLastOfBranch && ! hasNestedBranch && isLastBlock;\n\n\t\t\t\tconst isExpanded = hasNestedBranch\n\t\t\t\t\t? expandedState[ clientId ] ?? true\n\t\t\t\t\t: undefined;\n\n\t\t\t\tconst selectBlockWithClientId = ( event ) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tselectBlock( clientId );\n\t\t\t\t};\n\n\t\t\t\tconst toggleExpanded = ( event ) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tif ( isExpanded === true ) {\n\t\t\t\t\t\tcollapse( clientId );\n\t\t\t\t\t} else if ( isExpanded === false ) {\n\t\t\t\t\t\texpand( clientId );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment key={ clientId }>\n\t\t\t\t\t\t<ListViewBlock\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\tonClick={ selectBlockWithClientId }\n\t\t\t\t\t\t\tonToggleExpanded={ toggleExpanded }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tisBranchSelected={ isSelectedBranch }\n\t\t\t\t\t\t\tisLastOfSelectedBranch={ isLastOfSelectedBranch }\n\t\t\t\t\t\t\tlevel={ level }\n\t\t\t\t\t\t\tposition={ position }\n\t\t\t\t\t\t\trowCount={ rowCount }\n\t\t\t\t\t\t\tsiblingBlockCount={ blockCount }\n\t\t\t\t\t\t\tshowBlockMovers={ showBlockMovers }\n\t\t\t\t\t\t\tterminatedLevels={ terminatedLevels }\n\t\t\t\t\t\t\tpath={ updatedPath }\n\t\t\t\t\t\t\tisExpanded={ isExpanded }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ hasNestedBranch && isExpanded && (\n\t\t\t\t\t\t\t<ListViewBranch\n\t\t\t\t\t\t\t\tblocks={ innerBlocks }\n\t\t\t\t\t\t\t\tselectedBlockClientIds={\n\t\t\t\t\t\t\t\t\tselectedBlockClientIds\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tselectBlock={ selectBlock }\n\t\t\t\t\t\t\t\tisBranchSelected={ isSelectedBranch }\n\t\t\t\t\t\t\t\tisLastOfBranch={ isLast }\n\t\t\t\t\t\t\t\tshowAppender={ showAppender }\n\t\t\t\t\t\t\t\tshowBlockMovers={ showBlockMovers }\n\t\t\t\t\t\t\t\tshowNestedBlocks={ showNestedBlocks }\n\t\t\t\t\t\t\t\tparentBlockClientId={ clientId }\n\t\t\t\t\t\t\t\tlevel={ level + 1 }\n\t\t\t\t\t\t\t\tterminatedLevels={ updatedTerminatedLevels }\n\t\t\t\t\t\t\t\tpath={ updatedPath }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t\t{ hasAppender && (\n\t\t\t\t<ListViewAppender\n\t\t\t\t\tparentBlockClientId={ parentBlockClientId }\n\t\t\t\t\tposition={ rowCount }\n\t\t\t\t\trowCount={ appenderPosition }\n\t\t\t\t\tlevel={ level }\n\t\t\t\t\tterminatedLevels={ terminatedLevels }\n\t\t\t\t\tpath={ [ ...path, appenderPosition ] }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nListViewBranch.defaultProps = {\n\tselectBlock: () => {},\n};\n"]}