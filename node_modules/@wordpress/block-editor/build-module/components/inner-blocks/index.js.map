{"version":3,"sources":["@wordpress/block-editor/src/components/inner-blocks/index.js"],"names":["classnames","useViewportMatch","useMergeRefs","forwardRef","useSelect","getBlockType","withBlockContentContext","ButtonBlockAppender","DefaultBlockAppender","useNestedSettingsUpdate","useInnerBlockTemplateSync","getBlockContext","BlockListItems","BlockContextProvider","useBlockEditContext","useBlockSync","store","blockEditorStore","useBlockDropZone","UncontrolledInnerBlocks","props","clientId","allowedBlocks","template","templateLock","wrapperRef","templateInsertUpdatesSelection","__experimentalCaptureToolbars","captureToolbars","__experimentalAppenderTagName","renderAppender","orientation","placeholder","__experimentalLayout","context","select","block","getBlock","blockType","name","providesContext","attributes","ControlledInnerBlocks","ForwardedInnerBlocks","ref","innerBlocksProps","useInnerBlocksProps","options","isSmallScreen","hasOverlay","getBlockName","isBlockSelected","hasSelectedInnerBlock","isNavigationMode","enableClickThrough","rootClientId","InnerBlocks","value","onChange","className","children","Content","BlockContent"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useViewportMatch, useMergeRefs } from '@wordpress/compose';\nimport { forwardRef } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { getBlockType, withBlockContentContext } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport ButtonBlockAppender from './button-block-appender';\nimport DefaultBlockAppender from './default-block-appender';\nimport useNestedSettingsUpdate from './use-nested-settings-update';\nimport useInnerBlockTemplateSync from './use-inner-block-template-sync';\nimport getBlockContext from './get-block-context';\nimport { BlockListItems } from '../block-list';\nimport { BlockContextProvider } from '../block-context';\nimport { useBlockEditContext } from '../block-edit/context';\nimport useBlockSync from '../provider/use-block-sync';\nimport { store as blockEditorStore } from '../../store';\nimport useBlockDropZone from '../use-block-drop-zone';\n\n/**\n * InnerBlocks is a component which allows a single block to have multiple blocks\n * as children. The UncontrolledInnerBlocks component is used whenever the inner\n * blocks are not controlled by another entity. In other words, it is normally\n * used for inner blocks in the post editor\n *\n * @param {Object} props The component props.\n */\nfunction UncontrolledInnerBlocks( props ) {\n\tconst {\n\t\tclientId,\n\t\tallowedBlocks,\n\t\ttemplate,\n\t\ttemplateLock,\n\t\twrapperRef,\n\t\ttemplateInsertUpdatesSelection,\n\t\t__experimentalCaptureToolbars: captureToolbars,\n\t\t__experimentalAppenderTagName,\n\t\trenderAppender,\n\t\torientation,\n\t\tplaceholder,\n\t\t__experimentalLayout,\n\t} = props;\n\n\tuseNestedSettingsUpdate(\n\t\tclientId,\n\t\tallowedBlocks,\n\t\ttemplateLock,\n\t\tcaptureToolbars,\n\t\torientation\n\t);\n\n\tuseInnerBlockTemplateSync(\n\t\tclientId,\n\t\ttemplate,\n\t\ttemplateLock,\n\t\ttemplateInsertUpdatesSelection\n\t);\n\n\tconst context = useSelect(\n\t\t( select ) => {\n\t\t\tconst block = select( blockEditorStore ).getBlock( clientId );\n\t\t\tconst blockType = getBlockType( block.name );\n\n\t\t\tif ( ! blockType || ! blockType.providesContext ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn getBlockContext( block.attributes, blockType );\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\t// This component needs to always be synchronous as it's the one changing\n\t// the async mode depending on the block selection.\n\treturn (\n\t\t<BlockContextProvider value={ context }>\n\t\t\t<BlockListItems\n\t\t\t\trootClientId={ clientId }\n\t\t\t\trenderAppender={ renderAppender }\n\t\t\t\t__experimentalAppenderTagName={ __experimentalAppenderTagName }\n\t\t\t\t__experimentalLayout={ __experimentalLayout }\n\t\t\t\twrapperRef={ wrapperRef }\n\t\t\t\tplaceholder={ placeholder }\n\t\t\t/>\n\t\t</BlockContextProvider>\n\t);\n}\n\n/**\n * The controlled inner blocks component wraps the uncontrolled inner blocks\n * component with the blockSync hook. This keeps the innerBlocks of the block in\n * the block-editor store in sync with the blocks of the controlling entity. An\n * example of an inner block controller is a template part block, which provides\n * its own blocks from the template part entity data source.\n *\n * @param {Object} props The component props.\n */\nfunction ControlledInnerBlocks( props ) {\n\tuseBlockSync( props );\n\treturn <UncontrolledInnerBlocks { ...props } />;\n}\n\nconst ForwardedInnerBlocks = forwardRef( ( props, ref ) => {\n\tconst innerBlocksProps = useInnerBlocksProps( { ref }, props );\n\treturn (\n\t\t<div className=\"block-editor-inner-blocks\">\n\t\t\t<div { ...innerBlocksProps } />\n\t\t</div>\n\t);\n} );\n\n/**\n * This hook is used to lightly mark an element as an inner blocks wrapper\n * element. Call this hook and pass the returned props to the element to mark as\n * an inner blocks wrapper, automatically rendering inner blocks as children. If\n * you define a ref for the element, it is important to pass the ref to this\n * hook, which the hook in turn will pass to the component through the props it\n * returns. Optionally, you can also pass any other props through this hook, and\n * they will be merged and returned.\n *\n * @param {Object} props   Optional. Props to pass to the element. Must contain\n *                         the ref if one is defined.\n * @param {Object} options Optional. Inner blocks options.\n *\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/inner-blocks/README.md\n */\nexport function useInnerBlocksProps( props = {}, options = {} ) {\n\tconst { clientId } = useBlockEditContext();\n\tconst isSmallScreen = useViewportMatch( 'medium', '<' );\n\tconst hasOverlay = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockName,\n\t\t\t\tisBlockSelected,\n\t\t\t\thasSelectedInnerBlock,\n\t\t\t\tisNavigationMode,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst enableClickThrough = isNavigationMode() || isSmallScreen;\n\t\t\treturn (\n\t\t\t\tgetBlockName( clientId ) !== 'core/template' &&\n\t\t\t\t! isBlockSelected( clientId ) &&\n\t\t\t\t! hasSelectedInnerBlock( clientId, true ) &&\n\t\t\t\tenableClickThrough\n\t\t\t);\n\t\t},\n\t\t[ clientId, isSmallScreen ]\n\t);\n\n\tconst ref = useMergeRefs( [\n\t\tprops.ref,\n\t\tuseBlockDropZone( {\n\t\t\trootClientId: clientId,\n\t\t} ),\n\t] );\n\tconst InnerBlocks =\n\t\toptions.value && options.onChange\n\t\t\t? ControlledInnerBlocks\n\t\t\t: UncontrolledInnerBlocks;\n\n\treturn {\n\t\t...props,\n\t\tref,\n\t\tclassName: classnames(\n\t\t\tprops.className,\n\t\t\t'block-editor-block-list__layout',\n\t\t\t{\n\t\t\t\t'has-overlay': hasOverlay,\n\t\t\t}\n\t\t),\n\t\tchildren: <InnerBlocks { ...options } clientId={ clientId } />,\n\t};\n}\n\n// Expose default appender placeholders as components.\nForwardedInnerBlocks.DefaultBlockAppender = DefaultBlockAppender;\nForwardedInnerBlocks.ButtonBlockAppender = ButtonBlockAppender;\n\nForwardedInnerBlocks.Content = withBlockContentContext(\n\t( { BlockContent } ) => <BlockContent />\n);\n\n/**\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/inner-blocks/README.md\n */\nexport default ForwardedInnerBlocks;\n"]}