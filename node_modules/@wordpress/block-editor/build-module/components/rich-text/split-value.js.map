{"version":3,"sources":["@wordpress/block-editor/src/components/rich-text/split-value.js"],"names":["isEmpty","split","toHTMLString","splitValue","value","pastedBlocks","onReplace","onSplit","onSplitMiddle","multilineTag","blocks","before","after","hasPastedBlocks","length","lastPastedBlockIndex","isAfterOriginal","push","indexToSelect","initialPosition"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,OAAT,EAAkBC,KAAlB,EAAyBC,YAAzB,QAA6C,sBAA7C;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,CAAqB;AAC3BC,EAAAA,KAD2B;AAE3BC,EAAAA,YAAY,GAAG,EAFY;AAG3BC,EAAAA,SAH2B;AAI3BC,EAAAA,OAJ2B;AAK3BC,EAAAA,aAL2B;AAM3BC,EAAAA;AAN2B,CAArB,EAOH;AACH,MAAK,CAAEH,SAAF,IAAe,CAAEC,OAAtB,EAAgC;AAC/B;AACA;;AAED,QAAMG,MAAM,GAAG,EAAf;AACA,QAAM,CAAEC,MAAF,EAAUC,KAAV,IAAoBX,KAAK,CAAEG,KAAF,CAA/B;AACA,QAAMS,eAAe,GAAGR,YAAY,CAACS,MAAb,GAAsB,CAA9C;AACA,MAAIC,oBAAoB,GAAG,CAAC,CAA5B,CARG,CAUH;AACA;;AACA,QAAMC,eAAe,GAAGhB,OAAO,CAAEW,MAAF,CAAP,IAAqB,CAAEX,OAAO,CAAEY,KAAF,CAAtD,CAZG,CAcH;AACA;AACA;AACA;;AACA,MAAK,CAAEC,eAAF,IAAqB,CAAEb,OAAO,CAAEW,MAAF,CAAnC,EAAgD;AAC/CD,IAAAA,MAAM,CAACO,IAAP,CACCV,OAAO,CACNL,YAAY,CAAE;AACbE,MAAAA,KAAK,EAAEO,MADM;AAEbF,MAAAA;AAFa,KAAF,CADN,EAKN,CAAEO,eALI,CADR;AASAD,IAAAA,oBAAoB,IAAI,CAAxB;AACA;;AAED,MAAKF,eAAL,EAAuB;AACtBH,IAAAA,MAAM,CAACO,IAAP,CAAa,GAAGZ,YAAhB;AACAU,IAAAA,oBAAoB,IAAIV,YAAY,CAACS,MAArC;AACA,GAHD,MAGO,IAAKN,aAAL,EAAqB;AAC3BE,IAAAA,MAAM,CAACO,IAAP,CAAaT,aAAa,EAA1B;AACA,GApCE,CAsCH;AACA;AACA;AACA;;;AACA,MACCK,eAAe,GACZ,CAAEb,OAAO,CAAEY,KAAF,CADG,GAEZ,CAAEJ,aAAF,IAAmB,CAAER,OAAO,CAAEY,KAAF,CAHhC,EAIE;AACDF,IAAAA,MAAM,CAACO,IAAP,CACCV,OAAO,CACNL,YAAY,CAAE;AACbE,MAAAA,KAAK,EAAEQ,KADM;AAEbH,MAAAA;AAFa,KAAF,CADN,EAKNO,eALM,CADR;AASA,GAxDE,CA0DH;AACA;;;AACA,QAAME,aAAa,GAAGL,eAAe,GAAGE,oBAAH,GAA0B,CAA/D,CA5DG,CA8DH;AACA;;AACA,QAAMI,eAAe,GAAGN,eAAe,GAAG,CAAC,CAAJ,GAAQ,CAA/C;AAEAP,EAAAA,SAAS,CAAEI,MAAF,EAAUQ,aAAV,EAAyBC,eAAzB,CAAT;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { isEmpty, split, toHTMLString } from '@wordpress/rich-text';\n\n/*\n * Signals to the RichText owner that the block can be replaced with two blocks\n * as a result of splitting the block by pressing enter, or with blocks as a\n * result of splitting the block by pasting block content in the instance.\n */\nexport function splitValue( {\n\tvalue,\n\tpastedBlocks = [],\n\tonReplace,\n\tonSplit,\n\tonSplitMiddle,\n\tmultilineTag,\n} ) {\n\tif ( ! onReplace || ! onSplit ) {\n\t\treturn;\n\t}\n\n\tconst blocks = [];\n\tconst [ before, after ] = split( value );\n\tconst hasPastedBlocks = pastedBlocks.length > 0;\n\tlet lastPastedBlockIndex = -1;\n\n\t// Consider the after value to be the original it is not empty and the\n\t// before value *is* empty.\n\tconst isAfterOriginal = isEmpty( before ) && ! isEmpty( after );\n\n\t// Create a block with the content before the caret if there's no pasted\n\t// blocks, or if there are pasted blocks and the value is not empty. We do\n\t// not want a leading empty block on paste, but we do if split with e.g. the\n\t// enter key.\n\tif ( ! hasPastedBlocks || ! isEmpty( before ) ) {\n\t\tblocks.push(\n\t\t\tonSplit(\n\t\t\t\ttoHTMLString( {\n\t\t\t\t\tvalue: before,\n\t\t\t\t\tmultilineTag,\n\t\t\t\t} ),\n\t\t\t\t! isAfterOriginal\n\t\t\t)\n\t\t);\n\t\tlastPastedBlockIndex += 1;\n\t}\n\n\tif ( hasPastedBlocks ) {\n\t\tblocks.push( ...pastedBlocks );\n\t\tlastPastedBlockIndex += pastedBlocks.length;\n\t} else if ( onSplitMiddle ) {\n\t\tblocks.push( onSplitMiddle() );\n\t}\n\n\t// If there's pasted blocks, append a block with non empty content / after\n\t// the caret. Otherwise, do append an empty block if there is no\n\t// `onSplitMiddle` prop, but if there is and the content is empty, the\n\t// middle block is enough to set focus in.\n\tif (\n\t\thasPastedBlocks\n\t\t\t? ! isEmpty( after )\n\t\t\t: ! onSplitMiddle || ! isEmpty( after )\n\t) {\n\t\tblocks.push(\n\t\t\tonSplit(\n\t\t\t\ttoHTMLString( {\n\t\t\t\t\tvalue: after,\n\t\t\t\t\tmultilineTag,\n\t\t\t\t} ),\n\t\t\t\tisAfterOriginal\n\t\t\t)\n\t\t);\n\t}\n\n\t// If there are pasted blocks, set the selection to the last one. Otherwise,\n\t// set the selection to the second block.\n\tconst indexToSelect = hasPastedBlocks ? lastPastedBlockIndex : 1;\n\n\t// If there are pasted blocks, move the caret to the end of the selected\n\t// block Otherwise, retain the default value.\n\tconst initialPosition = hasPastedBlocks ? -1 : 0;\n\n\tonReplace( blocks, indexToSelect, initialPosition );\n}\n"]}