{"version":3,"sources":["@wordpress/block-editor/src/components/use-display-block-controls/index.js"],"names":["useSelect","useBlockEditContext","store","blockEditorStore","useDisplayBlockControls","isSelected","clientId","name","isFirstAndSameTypeMultiSelected","select","getBlockName","isFirstMultiSelectedBlock","getMultiSelectedBlockClientIds","every","id"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,iBAA1B;AAEA;AACA;AACA;;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,aAA1C;AAEA,eAAe,SAASC,uBAAT,GAAmC;AACjD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA;AAAxB,MAAiCN,mBAAmB,EAA1D;AACA,QAAMO,+BAA+B,GAAGR,SAAS,CAC9CS,MAAF,IAAc;AACb;AACA,QAAKJ,UAAL,EAAkB;AACjB;AACA;;AAED,UAAM;AACLK,MAAAA,YADK;AAELC,MAAAA,yBAFK;AAGLC,MAAAA;AAHK,QAIFH,MAAM,CAAEN,gBAAF,CAJV;;AAMA,QAAK,CAAEQ,yBAAyB,CAAEL,QAAF,CAAhC,EAA+C;AAC9C,aAAO,KAAP;AACA;;AAED,WAAOM,8BAA8B,GAAGC,KAAjC,CACJC,EAAF,IAAUJ,YAAY,CAAEI,EAAF,CAAZ,KAAuBP,IAD3B,CAAP;AAGA,GApB+C,EAqBhD,CAAED,QAAF,EAAYD,UAAZ,EAAwBE,IAAxB,CArBgD,CAAjD;AAwBA,SAAOF,UAAU,IAAIG,+BAArB;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { useBlockEditContext } from '../block-edit/context';\nimport { store as blockEditorStore } from '../../store';\n\nexport default function useDisplayBlockControls() {\n\tconst { isSelected, clientId, name } = useBlockEditContext();\n\tconst isFirstAndSameTypeMultiSelected = useSelect(\n\t\t( select ) => {\n\t\t\t// Don't bother checking, see OR statement below.\n\t\t\tif ( isSelected ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\tgetBlockName,\n\t\t\t\tisFirstMultiSelectedBlock,\n\t\t\t\tgetMultiSelectedBlockClientIds,\n\t\t\t} = select( blockEditorStore );\n\n\t\t\tif ( ! isFirstMultiSelectedBlock( clientId ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn getMultiSelectedBlockClientIds().every(\n\t\t\t\t( id ) => getBlockName( id ) === name\n\t\t\t);\n\t\t},\n\t\t[ clientId, isSelected, name ]\n\t);\n\n\treturn isSelected || isFirstAndSameTypeMultiSelected;\n}\n"]}