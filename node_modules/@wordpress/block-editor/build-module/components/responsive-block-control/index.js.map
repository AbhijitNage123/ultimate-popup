{"version":3,"sources":["@wordpress/block-editor/src/components/responsive-block-control/index.js"],"names":["classnames","__","sprintf","Fragment","ToggleControl","ResponsiveBlockControlLabel","ResponsiveBlockControl","props","title","property","toggleLabel","onIsResponsiveChange","renderDefaultControl","renderResponsiveControls","isResponsive","defaultLabel","id","label","viewports","toggleControlLabel","toggleHelpText","defaultControl","defaultResponsiveControls","map","viewport"],"mappings":";;AAAA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,YAAvB;AAEA;AACA;AACA;;AACA,SAASC,EAAT,EAAaC,OAAb,QAA4B,iBAA5B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA;AACA;AACA;;AACA,OAAOC,2BAAP,MAAwC,SAAxC;;AAEA,SAASC,sBAAT,CAAiCC,KAAjC,EAAyC;AACxC,QAAM;AACLC,IAAAA,KADK;AAELC,IAAAA,QAFK;AAGLC,IAAAA,WAHK;AAILC,IAAAA,oBAJK;AAKLC,IAAAA,oBALK;AAMLC,IAAAA,wBANK;AAOLC,IAAAA,YAAY,GAAG,KAPV;AAQLC,IAAAA,YAAY,GAAG;AACdC,MAAAA,EAAE,EAAE,KADU;;AAEd;AACAC,MAAAA,KAAK,EAAEhB,EAAE,CAAE,KAAF;AAHK,KARV;AAaLiB,IAAAA,SAAS,GAAG,CACX;AACCF,MAAAA,EAAE,EAAE,OADL;AAECC,MAAAA,KAAK,EAAEhB,EAAE,CAAE,eAAF;AAFV,KADW,EAKX;AACCe,MAAAA,EAAE,EAAE,QADL;AAECC,MAAAA,KAAK,EAAEhB,EAAE,CAAE,gBAAF;AAFV,KALW,EASX;AACCe,MAAAA,EAAE,EAAE,OADL;AAECC,MAAAA,KAAK,EAAEhB,EAAE,CAAE,eAAF;AAFV,KATW;AAbP,MA2BFM,KA3BJ;;AA6BA,MAAK,CAAEC,KAAF,IAAW,CAAEC,QAAb,IAAyB,CAAEG,oBAAhC,EAAuD;AACtD,WAAO,IAAP;AACA;;AAED,QAAMO,kBAAkB,GACvBT,WAAW,IACXR,OAAO;AACN;AACAD,EAAAA,EAAE,CAAE,qCAAF,CAFI,EAGNQ,QAHM,CAFR;AAQA;;AACA,QAAMW,cAAc,GAAGnB,EAAE,CACxB,mGADwB,CAAzB;;AAIA,QAAMoB,cAAc,GAAGT,oBAAoB,CAC1C,cAAC,2BAAD;AACC,IAAA,QAAQ,EAAGH,QADZ;AAEC,IAAA,QAAQ,EAAGM;AAFZ,IAD0C,EAK1CA,YAL0C,CAA3C;;AAQA,QAAMO,yBAAyB,GAAG,MAAM;AACvC,WAAOJ,SAAS,CAACK,GAAV,CAAiBC,QAAF,IACrB,cAAC,QAAD;AAAU,MAAA,GAAG,EAAGA,QAAQ,CAACR;AAAzB,OACGJ,oBAAoB,CACrB,cAAC,2BAAD;AACC,MAAA,QAAQ,EAAGH,QADZ;AAEC,MAAA,QAAQ,EAAGe;AAFZ,MADqB,EAKrBA,QALqB,CADvB,CADM,CAAP;AAWA,GAZD;;AAcA,SACC;AAAU,IAAA,SAAS,EAAC;AAApB,KACC;AAAQ,IAAA,SAAS,EAAC;AAAlB,KACGhB,KADH,CADD,EAKC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,cAAC,aAAD;AACC,IAAA,SAAS,EAAC,+CADX;AAEC,IAAA,KAAK,EAAGW,kBAFT;AAGC,IAAA,OAAO,EAAG,CAAEL,YAHb;AAIC,IAAA,QAAQ,EAAGH,oBAJZ;AAKC,IAAA,IAAI,EAAGS;AALR,IADD,EAQC;AACC,IAAA,SAAS,EAAGpB,UAAU,CACrB,8CADqB,EAErB;AACC,uBAAiBc;AADlB,KAFqB;AADvB,KAQG,CAAEA,YAAF,IAAkBO,cARrB,EASGP,YAAY,KACXD,wBAAwB,GACvBA,wBAAwB,CAAEK,SAAF,CADD,GAEvBI,yBAAyB,EAHf,CATf,CARD,CALD,CADD;AA+BA;;AAED,eAAehB,sBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Fragment } from '@wordpress/element';\nimport { ToggleControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport ResponsiveBlockControlLabel from './label';\n\nfunction ResponsiveBlockControl( props ) {\n\tconst {\n\t\ttitle,\n\t\tproperty,\n\t\ttoggleLabel,\n\t\tonIsResponsiveChange,\n\t\trenderDefaultControl,\n\t\trenderResponsiveControls,\n\t\tisResponsive = false,\n\t\tdefaultLabel = {\n\t\t\tid: 'all',\n\t\t\t/* translators: 'Label. Used to signify a layout property (eg: margin, padding) will apply uniformly to all screensizes.' */\n\t\t\tlabel: __( 'All' ),\n\t\t},\n\t\tviewports = [\n\t\t\t{\n\t\t\t\tid: 'small',\n\t\t\t\tlabel: __( 'Small screens' ),\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'medium',\n\t\t\t\tlabel: __( 'Medium screens' ),\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'large',\n\t\t\t\tlabel: __( 'Large screens' ),\n\t\t\t},\n\t\t],\n\t} = props;\n\n\tif ( ! title || ! property || ! renderDefaultControl ) {\n\t\treturn null;\n\t}\n\n\tconst toggleControlLabel =\n\t\ttoggleLabel ||\n\t\tsprintf(\n\t\t\t/* translators: 'Toggle control label. Should the property be the same across all screen sizes or unique per screen size.'. %s property value for the control (eg: margin, padding...etc) */\n\t\t\t__( 'Use the same %s on all screensizes.' ),\n\t\t\tproperty\n\t\t);\n\n\t/* translators: 'Help text for the responsive mode toggle control.' */\n\tconst toggleHelpText = __(\n\t\t'Toggle between using the same value for all screen sizes or using a unique value per screen size.'\n\t);\n\n\tconst defaultControl = renderDefaultControl(\n\t\t<ResponsiveBlockControlLabel\n\t\t\tproperty={ property }\n\t\t\tviewport={ defaultLabel }\n\t\t/>,\n\t\tdefaultLabel\n\t);\n\n\tconst defaultResponsiveControls = () => {\n\t\treturn viewports.map( ( viewport ) => (\n\t\t\t<Fragment key={ viewport.id }>\n\t\t\t\t{ renderDefaultControl(\n\t\t\t\t\t<ResponsiveBlockControlLabel\n\t\t\t\t\t\tproperty={ property }\n\t\t\t\t\t\tviewport={ viewport }\n\t\t\t\t\t/>,\n\t\t\t\t\tviewport\n\t\t\t\t) }\n\t\t\t</Fragment>\n\t\t) );\n\t};\n\n\treturn (\n\t\t<fieldset className=\"block-editor-responsive-block-control\">\n\t\t\t<legend className=\"block-editor-responsive-block-control__title\">\n\t\t\t\t{ title }\n\t\t\t</legend>\n\n\t\t\t<div className=\"block-editor-responsive-block-control__inner\">\n\t\t\t\t<ToggleControl\n\t\t\t\t\tclassName=\"block-editor-responsive-block-control__toggle\"\n\t\t\t\t\tlabel={ toggleControlLabel }\n\t\t\t\t\tchecked={ ! isResponsive }\n\t\t\t\t\tonChange={ onIsResponsiveChange }\n\t\t\t\t\thelp={ toggleHelpText }\n\t\t\t\t/>\n\t\t\t\t<div\n\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t'block-editor-responsive-block-control__group',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t'is-responsive': isResponsive,\n\t\t\t\t\t\t}\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ ! isResponsive && defaultControl }\n\t\t\t\t\t{ isResponsive &&\n\t\t\t\t\t\t( renderResponsiveControls\n\t\t\t\t\t\t\t? renderResponsiveControls( viewports )\n\t\t\t\t\t\t\t: defaultResponsiveControls() ) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</fieldset>\n\t);\n}\n\nexport default ResponsiveBlockControl;\n"]}