{"version":3,"sources":["@wordpress/block-editor/src/components/default-block-appender/index.native.js"],"names":["TouchableWithoutFeedback","View","__","RichText","compose","decodeEntities","withSelect","withDispatch","getDefaultBlockName","BlockInsertionPoint","styles","store","blockEditorStore","DefaultBlockAppender","isLocked","isVisible","onAppend","placeholder","containerStyle","showSeparator","value","blockHolder","select","ownProps","getBlockCount","getBlockName","isBlockValid","getTemplateLock","isEmpty","rootClientId","isLastBlockDefault","lastBlockClientId","isLastBlockValid","dispatch","insertDefaultBlock","startTyping","undefined"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,wBAAT,EAAmCC,IAAnC,QAA+C,cAA/C;AAEA;AACA;AACA;;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,iBAAzC;AACA,SAASC,mBAAT,QAAoC,mBAApC;AAEA;AACA;AACA;;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,aAA1C;AAEA,OAAO,SAASC,oBAAT,CAA+B;AACrCC,EAAAA,QADqC;AAErCC,EAAAA,SAFqC;AAGrCC,EAAAA,QAHqC;AAIrCC,EAAAA,WAJqC;AAKrCC,EAAAA,cALqC;AAMrCC,EAAAA;AANqC,CAA/B,EAOH;AACH,MAAKL,QAAQ,IAAI,CAAEC,SAAnB,EAA+B;AAC9B,WAAO,IAAP;AACA;;AAED,QAAMK,KAAK,GACV,OAAOH,WAAP,KAAuB,QAAvB,GACGZ,cAAc,CAAEY,WAAF,CADjB,GAEGf,EAAE,CAAE,gBAAF,CAHN;AAKA,SACC,cAAC,wBAAD;AAA0B,IAAA,OAAO,EAAGc;AAApC,KACC,cAAC,IAAD;AACC,IAAA,KAAK,EAAG,CACPN,MAAM,CAACW,WADA,EAEPF,aAAa,IAAID,cAFV,CADT;AAKC,IAAA,aAAa,EAAC;AALf,KAOGC,aAAa,GACd,cAAC,mBAAD,OADc,GAGd,cAAC,QAAD;AAAU,IAAA,WAAW,EAAGC,KAAxB;AAAgC,IAAA,QAAQ,EAAG,MAAM,CAAE;AAAnD,IAVF,CADD,CADD;AAiBA;AAED,eAAehB,OAAO,CACrBE,UAAU,CAAE,CAAEgB,MAAF,EAAUC,QAAV,KAAwB;AACnC,QAAM;AACLC,IAAAA,aADK;AAELC,IAAAA,YAFK;AAGLC,IAAAA,YAHK;AAILC,IAAAA;AAJK,MAKFL,MAAM,CAAEV,gBAAF,CALV;AAOA,QAAMgB,OAAO,GAAG,CAAEJ,aAAa,CAAED,QAAQ,CAACM,YAAX,CAA/B;AACA,QAAMC,kBAAkB,GACvBL,YAAY,CAAEF,QAAQ,CAACQ,iBAAX,CAAZ,KACAvB,mBAAmB,EAFpB;AAGA,QAAMwB,gBAAgB,GAAGN,YAAY,CAAEH,QAAQ,CAACQ,iBAAX,CAArC;AAEA,SAAO;AACNhB,IAAAA,SAAS,EAAEa,OAAO,IAAI,CAAEE,kBAAb,IAAmC,CAAEE,gBAD1C;AAENlB,IAAAA,QAAQ,EAAE,CAAC,CAAEa,eAAe,CAAEJ,QAAQ,CAACM,YAAX;AAFtB,GAAP;AAIA,CAlBS,CADW,EAoBrBtB,YAAY,CAAE,CAAE0B,QAAF,EAAYV,QAAZ,KAA0B;AACvC,QAAM;AAAEW,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MAAsCF,QAAQ,CACnDrB,gBADmD,CAApD;AAIA,SAAO;AACNI,IAAAA,QAAQ,GAAG;AACV,YAAM;AAAEa,QAAAA;AAAF,UAAmBN,QAAzB;AAEAW,MAAAA,kBAAkB,CAAEE,SAAF,EAAaP,YAAb,CAAlB;AACAM,MAAAA,WAAW;AACX;;AANK,GAAP;AAQA,CAbW,CApBS,CAAP,CAkCZtB,oBAlCY,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { TouchableWithoutFeedback, View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { RichText } from '@wordpress/block-editor';\nimport { compose } from '@wordpress/compose';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { getDefaultBlockName } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport BlockInsertionPoint from '../block-list/insertion-point';\nimport styles from './style.scss';\nimport { store as blockEditorStore } from '../../store';\n\nexport function DefaultBlockAppender( {\n\tisLocked,\n\tisVisible,\n\tonAppend,\n\tplaceholder,\n\tcontainerStyle,\n\tshowSeparator,\n} ) {\n\tif ( isLocked || ! isVisible ) {\n\t\treturn null;\n\t}\n\n\tconst value =\n\t\ttypeof placeholder === 'string'\n\t\t\t? decodeEntities( placeholder )\n\t\t\t: __( 'Start writingâ€¦' );\n\n\treturn (\n\t\t<TouchableWithoutFeedback onPress={ onAppend }>\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\tstyles.blockHolder,\n\t\t\t\t\tshowSeparator && containerStyle,\n\t\t\t\t] }\n\t\t\t\tpointerEvents=\"box-only\"\n\t\t\t>\n\t\t\t\t{ showSeparator ? (\n\t\t\t\t\t<BlockInsertionPoint />\n\t\t\t\t) : (\n\t\t\t\t\t<RichText placeholder={ value } onChange={ () => {} } />\n\t\t\t\t) }\n\t\t\t</View>\n\t\t</TouchableWithoutFeedback>\n\t);\n}\n\nexport default compose(\n\twithSelect( ( select, ownProps ) => {\n\t\tconst {\n\t\t\tgetBlockCount,\n\t\t\tgetBlockName,\n\t\t\tisBlockValid,\n\t\t\tgetTemplateLock,\n\t\t} = select( blockEditorStore );\n\n\t\tconst isEmpty = ! getBlockCount( ownProps.rootClientId );\n\t\tconst isLastBlockDefault =\n\t\t\tgetBlockName( ownProps.lastBlockClientId ) ===\n\t\t\tgetDefaultBlockName();\n\t\tconst isLastBlockValid = isBlockValid( ownProps.lastBlockClientId );\n\n\t\treturn {\n\t\t\tisVisible: isEmpty || ! isLastBlockDefault || ! isLastBlockValid,\n\t\t\tisLocked: !! getTemplateLock( ownProps.rootClientId ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => {\n\t\tconst { insertDefaultBlock, startTyping } = dispatch(\n\t\t\tblockEditorStore\n\t\t);\n\n\t\treturn {\n\t\t\tonAppend() {\n\t\t\t\tconst { rootClientId } = ownProps;\n\n\t\t\t\tinsertDefaultBlock( undefined, rootClientId );\n\t\t\t\tstartTyping();\n\t\t\t},\n\t\t};\n\t} )\n)( DefaultBlockAppender );\n"]}