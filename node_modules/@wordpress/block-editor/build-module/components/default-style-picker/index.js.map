{"version":3,"sources":["@wordpress/block-editor/src/components/default-style-picker/index.js"],"names":["store","blocksStore","useMemo","useCallback","__","SelectControl","useSelect","blockEditorStore","DefaultStylePicker","blockName","preferredStyle","onUpdatePreferredStyleVariations","styles","select","settings","getSettings","preferredStyleVariations","__experimentalPreferredStyleVariations","value","onChange","getBlockStyles","selectOptions","label","map","name","selectOnChange","blockStyle"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,KAAK,IAAIC,WAAlB,QAAqC,mBAArC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,oBAArC;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA;AACA;AACA;;AACA,SAASN,KAAK,IAAIO,gBAAlB,QAA0C,aAA1C;AAEA,eAAe,SAASC,kBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAA6C;AAC3D,QAAM;AACLC,IAAAA,cADK;AAELC,IAAAA,gCAFK;AAGLC,IAAAA;AAHK,MAIFN,SAAS,CACVO,MAAF,IAAc;AAAA;;AACb,UAAMC,QAAQ,GAAGD,MAAM,CAAEN,gBAAF,CAAN,CAA2BQ,WAA3B,EAAjB;AACA,UAAMC,wBAAwB,GAC7BF,QAAQ,CAACG,sCADV;AAEA,WAAO;AACNP,MAAAA,cAAc,EAAEM,wBAAF,aAAEA,wBAAF,gDAAEA,wBAAwB,CAAEE,KAA5B,0DAAE,sBAAmCT,SAAnC,CADV;AAENE,MAAAA,gCAAgC,4BAC/BK,wBAD+B,aAC/BA,wBAD+B,uBAC/BA,wBAAwB,CAAEG,QADK,2EACO,IAHjC;AAINP,MAAAA,MAAM,EAAEC,MAAM,CAAEZ,WAAF,CAAN,CAAsBmB,cAAtB,CAAsCX,SAAtC;AAJF,KAAP;AAMA,GAXW,EAYZ,CAAEA,SAAF,CAZY,CAJb;AAkBA,QAAMY,aAAa,GAAGnB,OAAO,CAC5B,MAAM,CACL;AAAEoB,IAAAA,KAAK,EAAElB,EAAE,CAAE,SAAF,CAAX;AAA0Bc,IAAAA,KAAK,EAAE;AAAjC,GADK,EAEL,GAAGN,MAAM,CAACW,GAAP,CAAY,CAAE;AAAED,IAAAA,KAAF;AAASE,IAAAA;AAAT,GAAF,MAAyB;AAAEF,IAAAA,KAAF;AAASJ,IAAAA,KAAK,EAAEM;AAAhB,GAAzB,CAAZ,CAFE,CADsB,EAK5B,CAAEZ,MAAF,CAL4B,CAA7B;AAOA,QAAMa,cAAc,GAAGtB,WAAW,CAC/BuB,UAAF,IAAkB;AACjBf,IAAAA,gCAAgC,CAAEF,SAAF,EAAaiB,UAAb,CAAhC;AACA,GAHgC,EAIjC,CAAEjB,SAAF,EAAaE,gCAAb,CAJiC,CAAlC;AAOA,SACCA,gCAAgC,IAC/B,cAAC,aAAD;AACC,IAAA,OAAO,EAAGU,aADX;AAEC,IAAA,KAAK,EAAGX,cAAc,IAAI,EAF3B;AAGC,IAAA,KAAK,EAAGN,EAAE,CAAE,eAAF,CAHX;AAIC,IAAA,QAAQ,EAAGqB;AAJZ,IAFF;AAUA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { useMemo, useCallback } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { SelectControl } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\nexport default function DefaultStylePicker( { blockName } ) {\n\tconst {\n\t\tpreferredStyle,\n\t\tonUpdatePreferredStyleVariations,\n\t\tstyles,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst settings = select( blockEditorStore ).getSettings();\n\t\t\tconst preferredStyleVariations =\n\t\t\t\tsettings.__experimentalPreferredStyleVariations;\n\t\t\treturn {\n\t\t\t\tpreferredStyle: preferredStyleVariations?.value?.[ blockName ],\n\t\t\t\tonUpdatePreferredStyleVariations:\n\t\t\t\t\tpreferredStyleVariations?.onChange ?? null,\n\t\t\t\tstyles: select( blocksStore ).getBlockStyles( blockName ),\n\t\t\t};\n\t\t},\n\t\t[ blockName ]\n\t);\n\tconst selectOptions = useMemo(\n\t\t() => [\n\t\t\t{ label: __( 'Not set' ), value: '' },\n\t\t\t...styles.map( ( { label, name } ) => ( { label, value: name } ) ),\n\t\t],\n\t\t[ styles ]\n\t);\n\tconst selectOnChange = useCallback(\n\t\t( blockStyle ) => {\n\t\t\tonUpdatePreferredStyleVariations( blockName, blockStyle );\n\t\t},\n\t\t[ blockName, onUpdatePreferredStyleVariations ]\n\t);\n\n\treturn (\n\t\tonUpdatePreferredStyleVariations && (\n\t\t\t<SelectControl\n\t\t\t\toptions={ selectOptions }\n\t\t\t\tvalue={ preferredStyle || '' }\n\t\t\t\tlabel={ __( 'Default Style' ) }\n\t\t\t\tonChange={ selectOnChange }\n\t\t\t/>\n\t\t)\n\t);\n}\n"]}