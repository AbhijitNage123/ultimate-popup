{"version":3,"sources":["@wordpress/block-editor/src/components/text-transform-control/index.js"],"names":["Button","__","formatCapitalize","formatLowercase","formatUppercase","TEXT_TRANSFORMS","name","value","icon","TextTransformControl","onChange","map","textTransform","undefined"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SACCC,gBADD,EAECC,eAFD,EAGCC,eAHD,QAIO,kBAJP;AAMA,MAAMC,eAAe,GAAG,CACvB;AACCC,EAAAA,IAAI,EAAEL,EAAE,CAAE,WAAF,CADT;AAECM,EAAAA,KAAK,EAAE,WAFR;AAGCC,EAAAA,IAAI,EAAEJ;AAHP,CADuB,EAMvB;AACCE,EAAAA,IAAI,EAAEL,EAAE,CAAE,WAAF,CADT;AAECM,EAAAA,KAAK,EAAE,WAFR;AAGCC,EAAAA,IAAI,EAAEL;AAHP,CANuB,EAWvB;AACCG,EAAAA,IAAI,EAAEL,EAAE,CAAE,YAAF,CADT;AAECM,EAAAA,KAAK,EAAE,YAFR;AAGCC,EAAAA,IAAI,EAAEN;AAHP,CAXuB,CAAxB;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASO,oBAAT,CAA+B;AAAEF,EAAAA,KAAF;AAASG,EAAAA;AAAT,CAA/B,EAAqD;AACnE,SACC;AAAU,IAAA,SAAS,EAAC;AAApB,KACC,8BAAUT,EAAE,CAAE,aAAF,CAAZ,CADD,EAEC;AAAK,IAAA,SAAS,EAAC;AAAf,KACGI,eAAe,CAACM,GAAhB,CAAuBC,aAAF,IAAqB;AAC3C,WACC,cAAC,MAAD;AACC,MAAA,GAAG,EAAGA,aAAa,CAACL,KADrB;AAEC,MAAA,IAAI,EAAGK,aAAa,CAACJ,IAFtB;AAGC,MAAA,OAAO,MAHR;AAIC,MAAA,SAAS,EAAGD,KAAK,KAAKK,aAAa,CAACL,KAJrC;AAKC,oBAAaK,aAAa,CAACN,IAL5B;AAMC,MAAA,OAAO,EAAG,MACTI,QAAQ,CACPH,KAAK,KAAKK,aAAa,CAACL,KAAxB,GACGM,SADH,GAEGD,aAAa,CAACL,KAHV;AAPV,MADD;AAgBA,GAjBC,CADH,CAFD,CADD;AAyBA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tformatCapitalize,\n\tformatLowercase,\n\tformatUppercase,\n} from '@wordpress/icons';\n\nconst TEXT_TRANSFORMS = [\n\t{\n\t\tname: __( 'Uppercase' ),\n\t\tvalue: 'uppercase',\n\t\ticon: formatUppercase,\n\t},\n\t{\n\t\tname: __( 'Lowercase' ),\n\t\tvalue: 'lowercase',\n\t\ticon: formatLowercase,\n\t},\n\t{\n\t\tname: __( 'Capitalize' ),\n\t\tvalue: 'capitalize',\n\t\ticon: formatCapitalize,\n\t},\n];\n\n/**\n * Control to facilitate text transform selections.\n *\n * @param {Object}   props          Component props.\n * @param {string}   props.value    Currently selected text transform.\n * @param {Function} props.onChange Handles change in text transform selection.\n *\n * @return {WPElement} Text transform control.\n */\nexport default function TextTransformControl( { value, onChange } ) {\n\treturn (\n\t\t<fieldset className=\"block-editor-text-transform-control\">\n\t\t\t<legend>{ __( 'Letter case' ) }</legend>\n\t\t\t<div className=\"block-editor-text-transform-control__buttons\">\n\t\t\t\t{ TEXT_TRANSFORMS.map( ( textTransform ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tkey={ textTransform.value }\n\t\t\t\t\t\t\ticon={ textTransform.icon }\n\t\t\t\t\t\t\tisSmall\n\t\t\t\t\t\t\tisPressed={ value === textTransform.value }\n\t\t\t\t\t\t\taria-label={ textTransform.name }\n\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\tonChange(\n\t\t\t\t\t\t\t\t\tvalue === textTransform.value\n\t\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t\t: textTransform.value\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\t\t\t</div>\n\t\t</fieldset>\n\t);\n}\n"]}