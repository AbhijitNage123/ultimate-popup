{"version":3,"sources":["@wordpress/token-list/src/index.js"],"names":["TokenList","constructor","initialValue","value","_currentValue","_valueAsArray","entries","args","forEach","keys","values","String","split","join","length","toString","Symbol","iterator","item","index","contains","indexOf","add","items","remove","toggle","token","force","undefined","replace","newToken","supports"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { uniq, compact, without } from 'lodash';\n\n/**\n * A set of tokens.\n *\n * @see https://dom.spec.whatwg.org/#domtokenlist\n */\nexport default class TokenList {\n\t/**\n\t * Constructs a new instance of TokenList.\n\t *\n\t * @param {string} initialValue Initial value to assign.\n\t */\n\tconstructor( initialValue = '' ) {\n\t\tthis.value = initialValue;\n\n\t\t// Disable reason: These are type hints on the class.\n\t\t/* eslint-disable no-unused-expressions */\n\t\t/** @type {string} */\n\t\tthis._currentValue;\n\n\t\t/** @type {string[]} */\n\t\tthis._valueAsArray;\n\t\t/* eslint-enable no-unused-expressions */\n\t}\n\n\t/**\n\t * @param {Parameters<Array<string>['entries']>} args\n\t */\n\tentries( ...args ) {\n\t\treturn this._valueAsArray.entries( ...args );\n\t}\n\n\t/**\n\t * @param {Parameters<Array<string>['forEach']>} args\n\t */\n\tforEach( ...args ) {\n\t\treturn this._valueAsArray.forEach( ...args );\n\t}\n\n\t/**\n\t * @param {Parameters<Array<string>['keys']>} args\n\t */\n\tkeys( ...args ) {\n\t\treturn this._valueAsArray.keys( ...args );\n\t}\n\n\t/**\n\t * @param {Parameters<Array<string>['values']>} args\n\t */\n\tvalues( ...args ) {\n\t\treturn this._valueAsArray.values( ...args );\n\t}\n\n\t/**\n\t * Returns the associated set as string.\n\t *\n\t * @see https://dom.spec.whatwg.org/#dom-domtokenlist-value\n\t *\n\t * @return {string} Token set as string.\n\t */\n\tget value() {\n\t\treturn this._currentValue;\n\t}\n\n\t/**\n\t * Replaces the associated set with a new string value.\n\t *\n\t * @see https://dom.spec.whatwg.org/#dom-domtokenlist-value\n\t *\n\t * @param {string} value New token set as string.\n\t */\n\tset value( value ) {\n\t\tvalue = String( value );\n\t\tthis._valueAsArray = uniq( compact( value.split( /\\s+/g ) ) );\n\t\tthis._currentValue = this._valueAsArray.join( ' ' );\n\t}\n\n\t/**\n\t * Returns the number of tokens.\n\t *\n\t * @see https://dom.spec.whatwg.org/#dom-domtokenlist-length\n\t *\n\t * @return {number} Number of tokens.\n\t */\n\tget length() {\n\t\treturn this._valueAsArray.length;\n\t}\n\n\t/**\n\t * Returns the stringified form of the TokenList.\n\t *\n\t * @see https://dom.spec.whatwg.org/#DOMTokenList-stringification-behavior\n\t * @see https://www.ecma-international.org/ecma-262/9.0/index.html#sec-tostring\n\t *\n\t * @return {string} Token set as string.\n\t */\n\ttoString() {\n\t\treturn this.value;\n\t}\n\n\t/**\n\t * Returns an iterator for the TokenList, iterating items of the set.\n\t *\n\t * @see https://dom.spec.whatwg.org/#domtokenlist\n\t *\n\t * @return {IterableIterator<string>} TokenList iterator.\n\t */\n\t*[ Symbol.iterator ]() {\n\t\treturn yield* this._valueAsArray;\n\t}\n\n\t/**\n\t * Returns the token with index `index`.\n\t *\n\t * @see https://dom.spec.whatwg.org/#dom-domtokenlist-item\n\t *\n\t * @param {number} index Index at which to return token.\n\t *\n\t * @return {string|undefined} Token at index.\n\t */\n\titem( index ) {\n\t\treturn this._valueAsArray[ index ];\n\t}\n\n\t/**\n\t * Returns true if `token` is present, and false otherwise.\n\t *\n\t * @see https://dom.spec.whatwg.org/#dom-domtokenlist-contains\n\t *\n\t * @param {string} item Token to test.\n\t *\n\t * @return {boolean} Whether token is present.\n\t */\n\tcontains( item ) {\n\t\treturn this._valueAsArray.indexOf( item ) !== -1;\n\t}\n\n\t/**\n\t * Adds all arguments passed, except those already present.\n\t *\n\t * @see https://dom.spec.whatwg.org/#dom-domtokenlist-add\n\t *\n\t * @param {...string} items Items to add.\n\t */\n\tadd( ...items ) {\n\t\tthis.value += ' ' + items.join( ' ' );\n\t}\n\n\t/**\n\t * Removes arguments passed, if they are present.\n\t *\n\t * @see https://dom.spec.whatwg.org/#dom-domtokenlist-remove\n\t *\n\t * @param {...string} items Items to remove.\n\t */\n\tremove( ...items ) {\n\t\tthis.value = without( this._valueAsArray, ...items ).join( ' ' );\n\t}\n\n\t/**\n\t * If `force` is not given, \"toggles\" `token`, removing it if it’s present\n\t * and adding it if it’s not present. If `force` is true, adds token (same\n\t * as add()). If force is false, removes token (same as remove()). Returns\n\t * true if `token` is now present, and false otherwise.\n\t *\n\t * @see https://dom.spec.whatwg.org/#dom-domtokenlist-toggle\n\t *\n\t * @param {string}  token   Token to toggle.\n\t * @param {boolean} [force] Presence to force.\n\t *\n\t * @return {boolean} Whether token is present after toggle.\n\t */\n\ttoggle( token, force ) {\n\t\tif ( undefined === force ) {\n\t\t\tforce = ! this.contains( token );\n\t\t}\n\n\t\tif ( force ) {\n\t\t\tthis.add( token );\n\t\t} else {\n\t\t\tthis.remove( token );\n\t\t}\n\n\t\treturn force;\n\t}\n\n\t/**\n\t * Replaces `token` with `newToken`. Returns true if `token` was replaced\n\t * with `newToken`, and false otherwise.\n\t *\n\t * @see https://dom.spec.whatwg.org/#dom-domtokenlist-replace\n\t *\n\t * @param {string} token    Token to replace with `newToken`.\n\t * @param {string} newToken Token to use in place of `token`.\n\t *\n\t * @return {boolean} Whether replacement occurred.\n\t */\n\treplace( token, newToken ) {\n\t\tif ( ! this.contains( token ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.remove( token );\n\t\tthis.add( newToken );\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns true if `token` is in the associated attribute’s supported\n\t * tokens. Returns false otherwise.\n\t *\n\t * Always returns `true` in this implementation.\n\t *\n\t * @see https://dom.spec.whatwg.org/#dom-domtokenlist-supports\n\t *\n\t * @return {boolean} Whether token is supported.\n\t */\n\tsupports() {\n\t\treturn true;\n\t}\n}\n"]}