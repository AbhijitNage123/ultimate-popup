{"version":3,"sources":["@wordpress/jest-console/src/matchers.js"],"names":["createToHaveBeenCalledMatcher","matcherName","methodName","received","spy","calls","mock","pass","length","message","getMockName","map","printReceived","assertionsNumber","createToHaveBeenCalledWith","expected","objects","expect","extend","supportedMatchers","result","matcherNameWith"],"mappings":";;;;;;AAGA;;AACA;;AAKA;;;;;;AAEA,IAAMA,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAEC,WAAF,EAAeC,UAAf;AAAA,SAA+B,UACpEC,QADoE,EAEhE;AACJ,QAAMC,GAAG,GAAGD,QAAQ,CAAED,UAAF,CAApB;AACA,QAAMG,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASD,KAAvB;AACA,QAAME,IAAI,GAAGF,KAAK,CAACG,MAAN,GAAe,CAA5B;AACA,QAAMC,OAAO,GAAGF,IAAI,GACjB;AAAA,aACA,iDAAqBN,WAArB,GAAqCG,GAAG,CAACM,WAAJ,EAArC,IACA,MADA,GAEA,mEAFA,GAGAL,KAAK,CAACM,GAAN,CAAWC,+BAAX,CAJA;AAAA,KADiB,GAMjB;AAAA,aACA,mCAAaX,WAAb,EAA0BG,GAAG,CAACM,WAAJ,EAA1B,IACA,MADA,GAEA,sCAHA;AAAA,KANH;AAWAN,IAAAA,GAAG,CAACS,gBAAJ,IAAwB,CAAxB;AAEA,WAAO;AACNJ,MAAAA,OAAO,EAAPA,OADM;AAENF,MAAAA,IAAI,EAAJA;AAFM,KAAP;AAIA,GAvBqC;AAAA,CAAtC;;AAyBA,IAAMO,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAEb,WAAF,EAAeC,UAAf;AAAA,SAA+B,UACjEC,QADiE,EAG7D;AAAA,sCADDY,QACC;AADDA,MAAAA,QACC;AAAA;;AACJ,QAAMX,GAAG,GAAGD,QAAQ,CAAED,UAAF,CAApB;AACA,QAAMG,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAASD,KAAvB;AACA,QAAME,IAAI,GAAG,kBAAMF,KAAN,EAAa,UAAEW,OAAF;AAAA,aAAe,qBAASA,OAAT,EAAkBD,QAAlB,CAAf;AAAA,KAAb,CAAb;AACA,QAAMN,OAAO,GAAGF,IAAI,GACjB;AAAA,aACA,iDAAqBN,WAArB,GAAqCG,GAAG,CAACM,WAAJ,EAArC,IACA,MADA,GAEA,iDAFA,GAGA,qCAAeK,QAAf,CAJA;AAAA,KADiB,GAMjB;AAAA,aACA,mCAAad,WAAb,EAA0BG,GAAG,CAACM,WAAJ,EAA1B,IACA,MADA,GAEA,6CAFA,GAGA,qCAAeK,QAAf,CAHA,GAIA,IAJA,GAKA,2BALA,GAMAV,KAAK,CAACM,GAAN,CAAWC,+BAAX,CAPA;AAAA,KANH;AAeAR,IAAAA,GAAG,CAACS,gBAAJ,IAAwB,CAAxB;AAEA,WAAO;AACNJ,MAAAA,OAAO,EAAPA,OADM;AAENF,MAAAA,IAAI,EAAJA;AAFM,KAAP;AAIA,GA5BkC;AAAA,CAAnC;;AA8BAU,MAAM,CAACC,MAAP,CACC,oBACCC,0BADD,EAEC,UAAEC,MAAF,EAAUnB,WAAV,EAAuBC,UAAvB,EAAuC;AAAA;;AACtC,MAAMmB,eAAe,aAAOpB,WAAP,SAArB;AAEA,yCACImB,MADJ,2EAEGnB,WAFH,EAEkBD,6BAA6B,YACxCC,WADwC,GAE7CC,UAF6C,CAF/C,iDAMGmB,eANH,EAMsBP,0BAA0B,YACzCO,eADyC,GAE9CnB,UAF8C,CANhD;AAWA,CAhBF,EAiBC,EAjBD,CADD","sourcesContent":["/**\n * External dependencies\n */\nimport { matcherHint, printExpected, printReceived } from 'jest-matcher-utils';\nimport { isEqual, reduce, some } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport supportedMatchers from './supported-matchers';\n\nconst createToHaveBeenCalledMatcher = ( matcherName, methodName ) => (\n\treceived\n) => {\n\tconst spy = received[ methodName ];\n\tconst calls = spy.mock.calls;\n\tconst pass = calls.length > 0;\n\tconst message = pass\n\t\t? () =>\n\t\t\t\tmatcherHint( `.not${ matcherName }`, spy.getMockName() ) +\n\t\t\t\t'\\n\\n' +\n\t\t\t\t'Expected mock function not to be called but it was called with:\\n' +\n\t\t\t\tcalls.map( printReceived )\n\t\t: () =>\n\t\t\t\tmatcherHint( matcherName, spy.getMockName() ) +\n\t\t\t\t'\\n\\n' +\n\t\t\t\t'Expected mock function to be called.';\n\n\tspy.assertionsNumber += 1;\n\n\treturn {\n\t\tmessage,\n\t\tpass,\n\t};\n};\n\nconst createToHaveBeenCalledWith = ( matcherName, methodName ) => (\n\treceived,\n\t...expected\n) => {\n\tconst spy = received[ methodName ];\n\tconst calls = spy.mock.calls;\n\tconst pass = some( calls, ( objects ) => isEqual( objects, expected ) );\n\tconst message = pass\n\t\t? () =>\n\t\t\t\tmatcherHint( `.not${ matcherName }`, spy.getMockName() ) +\n\t\t\t\t'\\n\\n' +\n\t\t\t\t'Expected mock function not to be called with:\\n' +\n\t\t\t\tprintExpected( expected )\n\t\t: () =>\n\t\t\t\tmatcherHint( matcherName, spy.getMockName() ) +\n\t\t\t\t'\\n\\n' +\n\t\t\t\t'Expected mock function to be called with:\\n' +\n\t\t\t\tprintExpected( expected ) +\n\t\t\t\t'\\n' +\n\t\t\t\t'but it was called with:\\n' +\n\t\t\t\tcalls.map( printReceived );\n\n\tspy.assertionsNumber += 1;\n\n\treturn {\n\t\tmessage,\n\t\tpass,\n\t};\n};\n\nexpect.extend(\n\treduce(\n\t\tsupportedMatchers,\n\t\t( result, matcherName, methodName ) => {\n\t\t\tconst matcherNameWith = `${ matcherName }With`;\n\n\t\t\treturn {\n\t\t\t\t...result,\n\t\t\t\t[ matcherName ]: createToHaveBeenCalledMatcher(\n\t\t\t\t\t`.${ matcherName }`,\n\t\t\t\t\tmethodName\n\t\t\t\t),\n\t\t\t\t[ matcherNameWith ]: createToHaveBeenCalledWith(\n\t\t\t\t\t`.${ matcherNameWith }`,\n\t\t\t\t\tmethodName\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t{}\n\t)\n);\n"]}