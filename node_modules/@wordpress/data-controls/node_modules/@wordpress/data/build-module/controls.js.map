{"version":3,"sources":["@wordpress/data/src/controls.js"],"names":["createRegistryControl","SELECT","RESOLVE_SELECT","DISPATCH","select","storeKey","selectorName","args","type","resolveSelect","dispatch","actionName","controls","builtinControls","registry","method","hasResolver"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,qBAAT,QAAsC,WAAtC;AAEA,MAAMC,MAAM,GAAG,eAAf;AACA,MAAMC,cAAc,GAAG,uBAAvB;AACA,MAAMC,QAAQ,GAAG,iBAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,CAAiBC,QAAjB,EAA2BC,YAA3B,EAAyC,GAAGC,IAA5C,EAAmD;AAClD,SAAO;AAAEC,IAAAA,IAAI,EAAEP,MAAR;AAAgBI,IAAAA,QAAhB;AAA0BC,IAAAA,YAA1B;AAAwCC,IAAAA;AAAxC,GAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,aAAT,CAAwBJ,QAAxB,EAAkCC,YAAlC,EAAgD,GAAGC,IAAnD,EAA0D;AACzD,SAAO;AAAEC,IAAAA,IAAI,EAAEN,cAAR;AAAwBG,IAAAA,QAAxB;AAAkCC,IAAAA,YAAlC;AAAgDC,IAAAA;AAAhD,GAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,QAAT,CAAmBL,QAAnB,EAA6BM,UAA7B,EAAyC,GAAGJ,IAA5C,EAAmD;AAClD,SAAO;AAAEC,IAAAA,IAAI,EAAEL,QAAR;AAAkBE,IAAAA,QAAlB;AAA4BM,IAAAA,UAA5B;AAAwCJ,IAAAA;AAAxC,GAAP;AACA;;AAED,OAAO,MAAMK,QAAQ,GAAG;AAAER,EAAAA,MAAF;AAAUK,EAAAA,aAAV;AAAyBC,EAAAA;AAAzB,CAAjB;AAEP,OAAO,MAAMG,eAAe,GAAG;AAC9B,GAAEZ,MAAF,GAAYD,qBAAqB,CAC9Bc,QAAF,IAAgB,CAAE;AAAET,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,GAAF,KACfO,QAAQ,CAACV,MAAT,CAAiBC,QAAjB,EAA6BC,YAA7B,EAA6C,GAAGC,IAAhD,CAF+B,CADH;AAK9B,GAAEL,cAAF,GAAoBF,qBAAqB,CACtCc,QAAF,IAAgB,CAAE;AAAET,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,GAAF,KAAwC;AACvD,UAAMQ,MAAM,GAAGD,QAAQ,CAACV,MAAT,CAAiBC,QAAjB,EAA6BC,YAA7B,EACbU,WADa,GAEZ,eAFY,GAGZ,QAHH;AAIA,WAAOF,QAAQ,CAAEC,MAAF,CAAR,CAAoBV,QAApB,EAAgCC,YAAhC,EAAgD,GAAGC,IAAnD,CAAP;AACA,GAPuC,CALX;AAc9B,GAAEJ,QAAF,GAAcH,qBAAqB,CAChCc,QAAF,IAAgB,CAAE;AAAET,IAAAA,QAAF;AAAYM,IAAAA,UAAZ;AAAwBJ,IAAAA;AAAxB,GAAF,KACfO,QAAQ,CAACJ,QAAT,CAAmBL,QAAnB,EAA+BM,UAA/B,EAA6C,GAAGJ,IAAhD,CAFiC;AAdL,CAAxB","sourcesContent":["/**\n * Internal dependencies\n */\nimport { createRegistryControl } from './factory';\n\nconst SELECT = '@@data/SELECT';\nconst RESOLVE_SELECT = '@@data/RESOLVE_SELECT';\nconst DISPATCH = '@@data/DISPATCH';\n\n/**\n * Dispatches a control action for triggering a synchronous registry select.\n *\n * Note: This control synchronously returns the current selector value, triggering the\n * resolution, but not waiting for it.\n *\n * @param {string} storeKey     The key for the store the selector belongs to.\n * @param {string} selectorName The name of the selector.\n * @param {Array}  args         Arguments for the selector.\n *\n * @example\n * ```js\n * import { controls } from '@wordpress/data';\n *\n * // Action generator using `select`.\n * export function* myAction() {\n *   const isEditorSideBarOpened = yield controls.select( 'core/edit-post', 'isEditorSideBarOpened' );\n *   // Do stuff with the result from the `select`.\n * }\n * ```\n *\n * @return {Object} The control descriptor.\n */\nfunction select( storeKey, selectorName, ...args ) {\n\treturn { type: SELECT, storeKey, selectorName, args };\n}\n\n/**\n * Dispatches a control action for triggering and resolving a registry select.\n *\n * Note: when this control action is handled, it automatically considers\n * selectors that may have a resolver. In such case, it will return a `Promise` that resolves\n * after the selector finishes resolving, with the final result value.\n *\n * @param {string} storeKey     The key for the store the selector belongs to\n * @param {string} selectorName The name of the selector\n * @param {Array}  args         Arguments for the selector.\n *\n * @example\n * ```js\n * import { controls } from '@wordpress/data';\n *\n * // Action generator using resolveSelect\n * export function* myAction() {\n * \tconst isSidebarOpened = yield controls.resolveSelect( 'core/edit-post', 'isEditorSideBarOpened' );\n * \t// do stuff with the result from the select.\n * }\n * ```\n *\n * @return {Object} The control descriptor.\n */\nfunction resolveSelect( storeKey, selectorName, ...args ) {\n\treturn { type: RESOLVE_SELECT, storeKey, selectorName, args };\n}\n\n/**\n * Dispatches a control action for triggering a registry dispatch.\n *\n * @param {string} storeKey   The key for the store the action belongs to\n * @param {string} actionName The name of the action to dispatch\n * @param {Array}  args       Arguments for the dispatch action.\n *\n * @example\n * ```js\n * import { controls } from '@wordpress/data-controls';\n *\n * // Action generator using dispatch\n * export function* myAction() {\n *   yield controls.dispatch( 'core/edit-post', 'togglePublishSidebar' );\n *   // do some other things.\n * }\n * ```\n *\n * @return {Object}  The control descriptor.\n */\nfunction dispatch( storeKey, actionName, ...args ) {\n\treturn { type: DISPATCH, storeKey, actionName, args };\n}\n\nexport const controls = { select, resolveSelect, dispatch };\n\nexport const builtinControls = {\n\t[ SELECT ]: createRegistryControl(\n\t\t( registry ) => ( { storeKey, selectorName, args } ) =>\n\t\t\tregistry.select( storeKey )[ selectorName ]( ...args )\n\t),\n\t[ RESOLVE_SELECT ]: createRegistryControl(\n\t\t( registry ) => ( { storeKey, selectorName, args } ) => {\n\t\t\tconst method = registry.select( storeKey )[ selectorName ]\n\t\t\t\t.hasResolver\n\t\t\t\t? 'resolveSelect'\n\t\t\t\t: 'select';\n\t\t\treturn registry[ method ]( storeKey )[ selectorName ]( ...args );\n\t\t}\n\t),\n\t[ DISPATCH ]: createRegistryControl(\n\t\t( registry ) => ( { storeKey, actionName, args } ) =>\n\t\t\tregistry.dispatch( storeKey )[ actionName ]( ...args )\n\t),\n};\n"]}