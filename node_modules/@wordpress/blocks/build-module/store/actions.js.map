{"version":3,"sources":["@wordpress/blocks/src/store/actions.js"],"names":["castArray","addBlockTypes","blockTypes","type","removeBlockTypes","names","addBlockStyles","blockName","styles","removeBlockStyles","styleNames","addBlockVariations","variations","removeBlockVariations","variationNames","setDefaultBlockName","name","setFreeformFallbackBlockName","setUnregisteredFallbackBlockName","setGroupingBlockName","setCategories","categories","updateCategory","slug","category","addBlockCollection","namespace","title","icon","removeBlockCollection"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { castArray } from 'lodash';\n\n/** @typedef {import('../api/registration').WPBlockVariation} WPBlockVariation */\n\n/**\n * Returns an action object used in signalling that block types have been added.\n *\n * @param {Array|Object} blockTypes Block types received.\n *\n * @return {Object} Action object.\n */\nexport function addBlockTypes( blockTypes ) {\n\treturn {\n\t\ttype: 'ADD_BLOCK_TYPES',\n\t\tblockTypes: castArray( blockTypes ),\n\t};\n}\n\n/**\n * Returns an action object used to remove a registered block type.\n *\n * @param {string|Array} names Block name.\n *\n * @return {Object} Action object.\n */\nexport function removeBlockTypes( names ) {\n\treturn {\n\t\ttype: 'REMOVE_BLOCK_TYPES',\n\t\tnames: castArray( names ),\n\t};\n}\n\n/**\n * Returns an action object used in signalling that new block styles have been added.\n *\n * @param {string}       blockName Block name.\n * @param {Array|Object} styles    Block styles.\n *\n * @return {Object} Action object.\n */\nexport function addBlockStyles( blockName, styles ) {\n\treturn {\n\t\ttype: 'ADD_BLOCK_STYLES',\n\t\tstyles: castArray( styles ),\n\t\tblockName,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that block styles have been removed.\n *\n * @param {string}       blockName  Block name.\n * @param {Array|string} styleNames Block style names.\n *\n * @return {Object} Action object.\n */\nexport function removeBlockStyles( blockName, styleNames ) {\n\treturn {\n\t\ttype: 'REMOVE_BLOCK_STYLES',\n\t\tstyleNames: castArray( styleNames ),\n\t\tblockName,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that new block variations have been added.\n *\n * @param {string}                              blockName  Block name.\n * @param {WPBlockVariation|WPBlockVariation[]} variations Block variations.\n *\n * @return {Object} Action object.\n */\nexport function addBlockVariations( blockName, variations ) {\n\treturn {\n\t\ttype: 'ADD_BLOCK_VARIATIONS',\n\t\tvariations: castArray( variations ),\n\t\tblockName,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that block variations have been removed.\n *\n * @param {string}          blockName      Block name.\n * @param {string|string[]} variationNames Block variation names.\n *\n * @return {Object} Action object.\n */\nexport function removeBlockVariations( blockName, variationNames ) {\n\treturn {\n\t\ttype: 'REMOVE_BLOCK_VARIATIONS',\n\t\tvariationNames: castArray( variationNames ),\n\t\tblockName,\n\t};\n}\n\n/**\n * Returns an action object used to set the default block name.\n *\n * @param {string} name Block name.\n *\n * @return {Object} Action object.\n */\nexport function setDefaultBlockName( name ) {\n\treturn {\n\t\ttype: 'SET_DEFAULT_BLOCK_NAME',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object used to set the name of the block used as a fallback\n * for non-block content.\n *\n * @param {string} name Block name.\n *\n * @return {Object} Action object.\n */\nexport function setFreeformFallbackBlockName( name ) {\n\treturn {\n\t\ttype: 'SET_FREEFORM_FALLBACK_BLOCK_NAME',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object used to set the name of the block used as a fallback\n * for unregistered blocks.\n *\n * @param {string} name Block name.\n *\n * @return {Object} Action object.\n */\nexport function setUnregisteredFallbackBlockName( name ) {\n\treturn {\n\t\ttype: 'SET_UNREGISTERED_FALLBACK_BLOCK_NAME',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object used to set the name of the block used\n * when grouping other blocks\n * eg: in \"Group/Ungroup\" interactions\n *\n * @param {string} name Block name.\n *\n * @return {Object} Action object.\n */\nexport function setGroupingBlockName( name ) {\n\treturn {\n\t\ttype: 'SET_GROUPING_BLOCK_NAME',\n\t\tname,\n\t};\n}\n\n/**\n * Returns an action object used to set block categories.\n *\n * @param {Object[]} categories Block categories.\n *\n * @return {Object} Action object.\n */\nexport function setCategories( categories ) {\n\treturn {\n\t\ttype: 'SET_CATEGORIES',\n\t\tcategories,\n\t};\n}\n\n/**\n * Returns an action object used to update a category.\n *\n * @param {string} slug     Block category slug.\n * @param {Object} category Object containing the category properties that should be updated.\n *\n * @return {Object} Action object.\n */\nexport function updateCategory( slug, category ) {\n\treturn {\n\t\ttype: 'UPDATE_CATEGORY',\n\t\tslug,\n\t\tcategory,\n\t};\n}\n\n/**\n * Returns an action object used to add block collections\n *\n * @param {string} namespace The namespace of the blocks to put in the collection\n * @param {string} title     The title to display in the block inserter\n * @param {Object} icon      (optional) The icon to display in the block inserter\n *\n * @return {Object} Action object.\n */\nexport function addBlockCollection( namespace, title, icon ) {\n\treturn {\n\t\ttype: 'ADD_BLOCK_COLLECTION',\n\t\tnamespace,\n\t\ttitle,\n\t\ticon,\n\t};\n}\n\n/**\n * Returns an action object used to remove block collections\n *\n * @param {string} namespace The namespace of the blocks to put in the collection\n *\n * @return {Object} Action object.\n */\nexport function removeBlockCollection( namespace ) {\n\treturn {\n\t\ttype: 'REMOVE_BLOCK_COLLECTION',\n\t\tnamespace,\n\t};\n}\n"]}