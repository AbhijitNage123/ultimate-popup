{"version":3,"sources":["@wordpress/compose/src/hooks/use-previous/index.js"],"names":["usePrevious","value","ref","undefined","current"],"mappings":";;;;;;;AAGA;;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,WAAT,CAAsBC,KAAtB,EAA8B;AAC5C;AACA;AACA;;AACA;AACA,QAAMC,GAAG,GAAG;AAAQ;AAA+BC,EAAAA,SAAvC,CAAZ;AACA;AAEA;;AACA,0BAAW,MAAM;AAChBD,IAAAA,GAAG,CAACE,OAAJ,GAAcH,KAAd;AACA,GAFD,EAEG,CAAEA,KAAF,CAFH,EAT4C,CAW5B;AAEhB;;AACA,SAAOC,GAAG,CAACE,OAAX;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEffect, useRef } from '@wordpress/element';\n\n/**\n * Use something's value from the previous render.\n * Based on https://usehooks.com/usePrevious/.\n *\n * @template T\n *\n * @param {T} value The value to track.\n *\n * @return {T | undefined} The value from the previous render.\n */\nexport default function usePrevious( value ) {\n\t// Disable reason: without an explicit type detail, the type of ref will be\n\t// inferred based on the initial useRef argument, which is undefined.\n\t// https://github.com/WordPress/gutenberg/pull/22597#issuecomment-633588366\n\t/* eslint-disable jsdoc/no-undefined-types */\n\tconst ref = useRef( /** @type {T | undefined} */ ( undefined ) );\n\t/* eslint-enable jsdoc/no-undefined-types */\n\n\t// Store current value in ref.\n\tuseEffect( () => {\n\t\tref.current = value;\n\t}, [ value ] ); // Re-run when value changes.\n\n\t// Return previous value (happens before update in useEffect above).\n\treturn ref.current;\n}\n"]}